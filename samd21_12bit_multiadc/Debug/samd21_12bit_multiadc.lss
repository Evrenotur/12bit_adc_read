
samd21_12bit_multiadc.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003100  00000000  00000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000064  20000000  00003100  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000044  20000064  00003164  00020064  2**2
                  ALLOC
  3 .stack        00002000  200000a8  000031a8  00020064  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  0002008c  2**0
                  CONTENTS, READONLY
  6 .debug_info   00025baa  00000000  00000000  000200e5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003192  00000000  00000000  00045c8f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    0000c587  00000000  00000000  00048e21  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000c00  00000000  00000000  000553a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000c90  00000000  00000000  00055fa8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  0001c394  00000000  00000000  00056c38  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000f781  00000000  00000000  00072fcc  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0008f560  00000000  00000000  0008274d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00002624  00000000  00000000  00111cb0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	a8 20 00 20 79 01 00 00 75 01 00 00 75 01 00 00     . . y...u...u...
	...
      2c:	75 01 00 00 00 00 00 00 00 00 00 00 75 01 00 00     u...........u...
      3c:	75 01 00 00 75 01 00 00 75 01 00 00 75 01 00 00     u...u...u...u...
      4c:	75 01 00 00 75 01 00 00 75 01 00 00 75 01 00 00     u...u...u...u...
      5c:	75 01 00 00 75 01 00 00 75 01 00 00 75 01 00 00     u...u...u...u...
      6c:	75 01 00 00 75 01 00 00 75 01 00 00 75 01 00 00     u...u...u...u...
      7c:	75 01 00 00 75 01 00 00 75 01 00 00 75 01 00 00     u...u...u...u...
      8c:	75 01 00 00 75 01 00 00 75 01 00 00 75 01 00 00     u...u...u...u...
      9c:	75 01 00 00 75 01 00 00 75 01 00 00 75 01 00 00     u...u...u...u...
      ac:	75 01 00 00 00 00 00 00                             u.......

000000b4 <__do_global_dtors_aux>:
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
      ce:	bd10      	pop	{r4, pc}
      d0:	20000064 	.word	0x20000064
      d4:	00000000 	.word	0x00000000
      d8:	00003100 	.word	0x00003100

000000dc <frame_dummy>:
      dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
      de:	b510      	push	{r4, lr}
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
      e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd10      	pop	{r4, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	20000068 	.word	0x20000068
     108:	00003100 	.word	0x00003100
     10c:	00003100 	.word	0x00003100
     110:	00000000 	.word	0x00000000

00000114 <adc_enable>:

#include <atmel_start.h>
#include "adc_read.h"

void adc_enable()
{
     114:	b510      	push	{r4, lr}
	
	adc_sync_enable_channel(&ADC_0,0);
     116:	2100      	movs	r1, #0
     118:	4801      	ldr	r0, [pc, #4]	; (120 <adc_enable+0xc>)
     11a:	4b02      	ldr	r3, [pc, #8]	; (124 <adc_enable+0x10>)
     11c:	4798      	blx	r3
}
     11e:	bd10      	pop	{r4, pc}
     120:	200000a0 	.word	0x200000a0
     124:	000003f1 	.word	0x000003f1

00000128 <ADC_Read>:

int ADC_Read(ADC_ReadTypeDef_t * ADC_ReadTypeDef)
{
     128:	b570      	push	{r4, r5, r6, lr}
     12a:	0004      	movs	r4, r0
	int ret=adc_sync_read_channel(&ADC_0,0,ADC_ReadTypeDef->buffer,4);
     12c:	2304      	movs	r3, #4
     12e:	0002      	movs	r2, r0
     130:	2100      	movs	r1, #0
     132:	4809      	ldr	r0, [pc, #36]	; (158 <ADC_Read+0x30>)
     134:	4d09      	ldr	r5, [pc, #36]	; (15c <ADC_Read+0x34>)
     136:	47a8      	blx	r5
	if(ret<=0)
     138:	2800      	cmp	r0, #0
     13a:	dd09      	ble.n	150 <ADC_Read+0x28>
	{
		
		return -1;
	}
	 ADC_ReadTypeDef->PA06_ADC_value = (ADC_ReadTypeDef->buffer[1]  + ADC_ReadTypeDef->buffer[0]);
     13c:	7863      	ldrb	r3, [r4, #1]
     13e:	7822      	ldrb	r2, [r4, #0]
     140:	189b      	adds	r3, r3, r2
     142:	80a3      	strh	r3, [r4, #4]
	 ADC_ReadTypeDef->PA07_ADC_value = (ADC_ReadTypeDef->buffer[3]  + ADC_ReadTypeDef->buffer[2]);
     144:	78e3      	ldrb	r3, [r4, #3]
     146:	78a2      	ldrb	r2, [r4, #2]
     148:	189b      	adds	r3, r3, r2
     14a:	80e3      	strh	r3, [r4, #6]
	//ADC_ReadTypeDef->sum = ADC_ReadTypeDef->PA06_ADC_value;
	return 0;
     14c:	2000      	movs	r0, #0
     14e:	bd70      	pop	{r4, r5, r6, pc}
		return -1;
     150:	2001      	movs	r0, #1
     152:	4240      	negs	r0, r0
     154:	e7fb      	b.n	14e <ADC_Read+0x26>
     156:	46c0      	nop			; (mov r8, r8)
     158:	200000a0 	.word	0x200000a0
     15c:	0000041d 	.word	0x0000041d

00000160 <atmel_start_init>:

/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
     160:	b510      	push	{r4, lr}
	system_init();
     162:	4b02      	ldr	r3, [pc, #8]	; (16c <atmel_start_init+0xc>)
     164:	4798      	blx	r3
	stdio_redirect_init();
     166:	4b02      	ldr	r3, [pc, #8]	; (170 <atmel_start_init+0x10>)
     168:	4798      	blx	r3
}
     16a:	bd10      	pop	{r4, pc}
     16c:	00000395 	.word	0x00000395
     170:	00000d6d 	.word	0x00000d6d

00000174 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
     174:	e7fe      	b.n	174 <Dummy_Handler>
	...

00000178 <Reset_Handler>:
{
     178:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        if (pSrc != pDest) {
     17a:	4a23      	ldr	r2, [pc, #140]	; (208 <Reset_Handler+0x90>)
     17c:	4b23      	ldr	r3, [pc, #140]	; (20c <Reset_Handler+0x94>)
     17e:	429a      	cmp	r2, r3
     180:	d009      	beq.n	196 <Reset_Handler+0x1e>
     182:	4b22      	ldr	r3, [pc, #136]	; (20c <Reset_Handler+0x94>)
     184:	4a20      	ldr	r2, [pc, #128]	; (208 <Reset_Handler+0x90>)
     186:	e003      	b.n	190 <Reset_Handler+0x18>
                        *pDest++ = *pSrc++;
     188:	6811      	ldr	r1, [r2, #0]
     18a:	6019      	str	r1, [r3, #0]
     18c:	3304      	adds	r3, #4
     18e:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
     190:	491f      	ldr	r1, [pc, #124]	; (210 <Reset_Handler+0x98>)
     192:	428b      	cmp	r3, r1
     194:	d3f8      	bcc.n	188 <Reset_Handler+0x10>
                        *pDest++ = *pSrc++;
     196:	4b1f      	ldr	r3, [pc, #124]	; (214 <Reset_Handler+0x9c>)
     198:	e002      	b.n	1a0 <Reset_Handler+0x28>
                *pDest++ = 0;
     19a:	2200      	movs	r2, #0
     19c:	601a      	str	r2, [r3, #0]
     19e:	3304      	adds	r3, #4
        for (pDest = &_szero; pDest < &_ezero;) {
     1a0:	4a1d      	ldr	r2, [pc, #116]	; (218 <Reset_Handler+0xa0>)
     1a2:	4293      	cmp	r3, r2
     1a4:	d3f9      	bcc.n	19a <Reset_Handler+0x22>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
     1a6:	4a1d      	ldr	r2, [pc, #116]	; (21c <Reset_Handler+0xa4>)
     1a8:	21ff      	movs	r1, #255	; 0xff
     1aa:	4b1d      	ldr	r3, [pc, #116]	; (220 <Reset_Handler+0xa8>)
     1ac:	438b      	bics	r3, r1
     1ae:	6093      	str	r3, [r2, #8]
        SBMATRIX->SFR[SBMATRIX_SLAVE_HMCRAMC0].reg = 2;
     1b0:	39fd      	subs	r1, #253	; 0xfd
     1b2:	2390      	movs	r3, #144	; 0x90
     1b4:	005b      	lsls	r3, r3, #1
     1b6:	4a1b      	ldr	r2, [pc, #108]	; (224 <Reset_Handler+0xac>)
     1b8:	50d1      	str	r1, [r2, r3]
        USB->DEVICE.QOSCTRL.bit.CQOS = 2;
     1ba:	4a1b      	ldr	r2, [pc, #108]	; (228 <Reset_Handler+0xb0>)
     1bc:	78d3      	ldrb	r3, [r2, #3]
     1be:	2503      	movs	r5, #3
     1c0:	43ab      	bics	r3, r5
     1c2:	2402      	movs	r4, #2
     1c4:	4323      	orrs	r3, r4
     1c6:	70d3      	strb	r3, [r2, #3]
        USB->DEVICE.QOSCTRL.bit.DQOS = 2;
     1c8:	78d3      	ldrb	r3, [r2, #3]
     1ca:	270c      	movs	r7, #12
     1cc:	43bb      	bics	r3, r7
     1ce:	2608      	movs	r6, #8
     1d0:	4333      	orrs	r3, r6
     1d2:	70d3      	strb	r3, [r2, #3]
        DMAC->QOSCTRL.bit.DQOS = 2;
     1d4:	4b15      	ldr	r3, [pc, #84]	; (22c <Reset_Handler+0xb4>)
     1d6:	7b98      	ldrb	r0, [r3, #14]
     1d8:	2230      	movs	r2, #48	; 0x30
     1da:	4390      	bics	r0, r2
     1dc:	2220      	movs	r2, #32
     1de:	4310      	orrs	r0, r2
     1e0:	7398      	strb	r0, [r3, #14]
        DMAC->QOSCTRL.bit.FQOS = 2;
     1e2:	7b99      	ldrb	r1, [r3, #14]
     1e4:	43b9      	bics	r1, r7
     1e6:	4331      	orrs	r1, r6
     1e8:	7399      	strb	r1, [r3, #14]
        DMAC->QOSCTRL.bit.WRBQOS = 2;
     1ea:	7b9a      	ldrb	r2, [r3, #14]
     1ec:	43aa      	bics	r2, r5
     1ee:	4322      	orrs	r2, r4
     1f0:	739a      	strb	r2, [r3, #14]
        NVMCTRL->CTRLB.bit.MANW = 1;
     1f2:	4a0f      	ldr	r2, [pc, #60]	; (230 <Reset_Handler+0xb8>)
     1f4:	6851      	ldr	r1, [r2, #4]
     1f6:	2380      	movs	r3, #128	; 0x80
     1f8:	430b      	orrs	r3, r1
     1fa:	6053      	str	r3, [r2, #4]
        __libc_init_array();
     1fc:	4b0d      	ldr	r3, [pc, #52]	; (234 <Reset_Handler+0xbc>)
     1fe:	4798      	blx	r3
        main();
     200:	4b0d      	ldr	r3, [pc, #52]	; (238 <Reset_Handler+0xc0>)
     202:	4798      	blx	r3
     204:	e7fe      	b.n	204 <Reset_Handler+0x8c>
     206:	46c0      	nop			; (mov r8, r8)
     208:	00003100 	.word	0x00003100
     20c:	20000000 	.word	0x20000000
     210:	20000064 	.word	0x20000064
     214:	20000064 	.word	0x20000064
     218:	200000a8 	.word	0x200000a8
     21c:	e000ed00 	.word	0xe000ed00
     220:	00000000 	.word	0x00000000
     224:	41007000 	.word	0x41007000
     228:	41005000 	.word	0x41005000
     22c:	41004800 	.word	0x41004800
     230:	41004000 	.word	0x41004000
     234:	00001e59 	.word	0x00001e59
     238:	00000bcd 	.word	0x00000bcd

0000023c <ADC_0_PORT_init>:
struct adc_sync_descriptor ADC_0;

struct usart_sync_descriptor TARGET_IO;

void ADC_0_PORT_init(void)
{
     23c:	b5f0      	push	{r4, r5, r6, r7, lr}
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = ~data;
}

static inline void hri_port_clear_DIR_reg(const void *const hw, uint8_t submodule_index, hri_port_dir_reg_t mask)
{
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
     23e:	26c0      	movs	r6, #192	; 0xc0
     240:	05f6      	lsls	r6, r6, #23
     242:	2340      	movs	r3, #64	; 0x40
     244:	6073      	str	r3, [r6, #4]

static inline void hri_port_write_WRCONFIG_reg(const void *const hw, uint8_t submodule_index,
                                               hri_port_wrconfig_reg_t data)
{
	PORT_CRITICAL_SECTION_ENTER();
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     246:	4b14      	ldr	r3, [pc, #80]	; (298 <ADC_0_PORT_init+0x5c>)
     248:	4a14      	ldr	r2, [pc, #80]	; (29c <ADC_0_PORT_init+0x60>)
     24a:	629a      	str	r2, [r3, #40]	; 0x28
     24c:	22c0      	movs	r2, #192	; 0xc0
     24e:	0612      	lsls	r2, r2, #24
     250:	629a      	str	r2, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     252:	2046      	movs	r0, #70	; 0x46
     254:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
     256:	2501      	movs	r5, #1
     258:	43a9      	bics	r1, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     25a:	2401      	movs	r4, #1
     25c:	4321      	orrs	r1, r4
     25e:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     260:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     262:	3813      	subs	r0, #19
     264:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     266:	270f      	movs	r7, #15
     268:	43b9      	bics	r1, r7
	tmp |= PORT_PMUX_PMUXE(data);
     26a:	4321      	orrs	r1, r4
     26c:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     26e:	5419      	strb	r1, [r3, r0]
	((Port *)hw)->Group[submodule_index].DIRCLR.reg = mask;
     270:	2180      	movs	r1, #128	; 0x80
     272:	6071      	str	r1, [r6, #4]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     274:	490a      	ldr	r1, [pc, #40]	; (2a0 <ADC_0_PORT_init+0x64>)
     276:	6299      	str	r1, [r3, #40]	; 0x28
     278:	629a      	str	r2, [r3, #40]	; 0x28
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     27a:	2147      	movs	r1, #71	; 0x47
     27c:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     27e:	43aa      	bics	r2, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     280:	4322      	orrs	r2, r4
     282:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     284:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     286:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     288:	3938      	subs	r1, #56	; 0x38
     28a:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
     28c:	2110      	movs	r1, #16
     28e:	430a      	orrs	r2, r1
     290:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     292:	541a      	strb	r2, [r3, r0]

	// Disable digital pin circuitry
	gpio_set_pin_direction(PA07, GPIO_DIRECTION_OFF);

	gpio_set_pin_function(PA07, PINMUX_PA07B_ADC_AIN7);
}
     294:	bdf0      	pop	{r4, r5, r6, r7, pc}
     296:	46c0      	nop			; (mov r8, r8)
     298:	41004400 	.word	0x41004400
     29c:	40000040 	.word	0x40000040
     2a0:	40000080 	.word	0x40000080

000002a4 <ADC_0_CLOCK_init>:
			peripheral = (uint32_t)_pm_get_apbb_index(module);
			PM->APBBMASK.reg |= 1 << peripheral;
		}
		break;
	case PM_BUS_APBC:
		PM->APBCMASK.reg |= 1 << peripheral;
     2a4:	4a04      	ldr	r2, [pc, #16]	; (2b8 <ADC_0_CLOCK_init+0x14>)
     2a6:	6a11      	ldr	r1, [r2, #32]
     2a8:	2380      	movs	r3, #128	; 0x80
     2aa:	025b      	lsls	r3, r3, #9
     2ac:	430b      	orrs	r3, r1
     2ae:	6213      	str	r3, [r2, #32]
}

static inline void hri_gclk_write_CLKCTRL_reg(const void *const hw, hri_gclk_clkctrl_reg_t data)
{
	GCLK_CRITICAL_SECTION_ENTER();
	((Gclk *)hw)->CLKCTRL.reg = data;
     2b0:	4a02      	ldr	r2, [pc, #8]	; (2bc <ADC_0_CLOCK_init+0x18>)
     2b2:	4b03      	ldr	r3, [pc, #12]	; (2c0 <ADC_0_CLOCK_init+0x1c>)
     2b4:	805a      	strh	r2, [r3, #2]

void ADC_0_CLOCK_init(void)
{
	_pm_enable_bus_clock(PM_BUS_APBC, ADC);
	_gclk_enable_channel(ADC_GCLK_ID, CONF_GCLK_ADC_SRC);
}
     2b6:	4770      	bx	lr
     2b8:	40000400 	.word	0x40000400
     2bc:	0000401e 	.word	0x0000401e
     2c0:	40000c00 	.word	0x40000c00

000002c4 <ADC_0_init>:

void ADC_0_init(void)
{
     2c4:	b510      	push	{r4, lr}
	ADC_0_CLOCK_init();
     2c6:	4b05      	ldr	r3, [pc, #20]	; (2dc <ADC_0_init+0x18>)
     2c8:	4798      	blx	r3
	ADC_0_PORT_init();
     2ca:	4b05      	ldr	r3, [pc, #20]	; (2e0 <ADC_0_init+0x1c>)
     2cc:	4798      	blx	r3
	adc_sync_init(&ADC_0, ADC, (void *)NULL);
     2ce:	2200      	movs	r2, #0
     2d0:	4904      	ldr	r1, [pc, #16]	; (2e4 <ADC_0_init+0x20>)
     2d2:	4805      	ldr	r0, [pc, #20]	; (2e8 <ADC_0_init+0x24>)
     2d4:	4b05      	ldr	r3, [pc, #20]	; (2ec <ADC_0_init+0x28>)
     2d6:	4798      	blx	r3
}
     2d8:	bd10      	pop	{r4, pc}
     2da:	46c0      	nop			; (mov r8, r8)
     2dc:	000002a5 	.word	0x000002a5
     2e0:	0000023d 	.word	0x0000023d
     2e4:	42004000 	.word	0x42004000
     2e8:	200000a0 	.word	0x200000a0
     2ec:	000003b9 	.word	0x000003b9

000002f0 <TARGET_IO_PORT_init>:

void TARGET_IO_PORT_init(void)
{
     2f0:	b530      	push	{r4, r5, lr}
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     2f2:	4b0f      	ldr	r3, [pc, #60]	; (330 <TARGET_IO_PORT_init+0x40>)
     2f4:	2256      	movs	r2, #86	; 0x56
     2f6:	5c99      	ldrb	r1, [r3, r2]
	tmp &= ~PORT_PINCFG_PMUXEN;
     2f8:	2501      	movs	r5, #1
     2fa:	43a9      	bics	r1, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     2fc:	2401      	movs	r4, #1
     2fe:	4321      	orrs	r1, r4
     300:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     302:	5499      	strb	r1, [r3, r2]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     304:	203b      	movs	r0, #59	; 0x3b
     306:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXE_Msk;
     308:	3a47      	subs	r2, #71	; 0x47
     30a:	4391      	bics	r1, r2
	tmp |= PORT_PMUX_PMUXE(data);
     30c:	2202      	movs	r2, #2
     30e:	4311      	orrs	r1, r2
     310:	b2c9      	uxtb	r1, r1
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     312:	5419      	strb	r1, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     314:	2157      	movs	r1, #87	; 0x57
     316:	5c5a      	ldrb	r2, [r3, r1]
	tmp &= ~PORT_PINCFG_PMUXEN;
     318:	43aa      	bics	r2, r5
	tmp |= value << PORT_PINCFG_PMUXEN_Pos;
     31a:	4322      	orrs	r2, r4
     31c:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     31e:	545a      	strb	r2, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PMUX[index].reg;
     320:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PMUX_PMUXO_Msk;
     322:	3948      	subs	r1, #72	; 0x48
     324:	400a      	ands	r2, r1
	tmp |= PORT_PMUX_PMUXO(data);
     326:	2120      	movs	r1, #32
     328:	430a      	orrs	r2, r1
     32a:	b2d2      	uxtb	r2, r2
	((Port *)hw)->Group[submodule_index].PMUX[index].reg = tmp;
     32c:	541a      	strb	r2, [r3, r0]

	gpio_set_pin_function(PA22, PINMUX_PA22C_SERCOM3_PAD0);

	gpio_set_pin_function(PA23, PINMUX_PA23C_SERCOM3_PAD1);
}
     32e:	bd30      	pop	{r4, r5, pc}
     330:	41004400 	.word	0x41004400

00000334 <TARGET_IO_CLOCK_init>:
     334:	4a04      	ldr	r2, [pc, #16]	; (348 <TARGET_IO_CLOCK_init+0x14>)
     336:	6a13      	ldr	r3, [r2, #32]
     338:	2120      	movs	r1, #32
     33a:	430b      	orrs	r3, r1
     33c:	6213      	str	r3, [r2, #32]
     33e:	4a03      	ldr	r2, [pc, #12]	; (34c <TARGET_IO_CLOCK_init+0x18>)
     340:	4b03      	ldr	r3, [pc, #12]	; (350 <TARGET_IO_CLOCK_init+0x1c>)
     342:	805a      	strh	r2, [r3, #2]

void TARGET_IO_CLOCK_init(void)
{
	_pm_enable_bus_clock(PM_BUS_APBC, SERCOM3);
	_gclk_enable_channel(SERCOM3_GCLK_ID_CORE, CONF_GCLK_SERCOM3_CORE_SRC);
}
     344:	4770      	bx	lr
     346:	46c0      	nop			; (mov r8, r8)
     348:	40000400 	.word	0x40000400
     34c:	00004017 	.word	0x00004017
     350:	40000c00 	.word	0x40000c00

00000354 <TARGET_IO_init>:

void TARGET_IO_init(void)
{
     354:	b510      	push	{r4, lr}
	TARGET_IO_CLOCK_init();
     356:	4b05      	ldr	r3, [pc, #20]	; (36c <TARGET_IO_init+0x18>)
     358:	4798      	blx	r3
	usart_sync_init(&TARGET_IO, SERCOM3, (void *)NULL);
     35a:	2200      	movs	r2, #0
     35c:	4904      	ldr	r1, [pc, #16]	; (370 <TARGET_IO_init+0x1c>)
     35e:	4805      	ldr	r0, [pc, #20]	; (374 <TARGET_IO_init+0x20>)
     360:	4b05      	ldr	r3, [pc, #20]	; (378 <TARGET_IO_init+0x24>)
     362:	4798      	blx	r3
	TARGET_IO_PORT_init();
     364:	4b05      	ldr	r3, [pc, #20]	; (37c <TARGET_IO_init+0x28>)
     366:	4798      	blx	r3
}
     368:	bd10      	pop	{r4, pc}
     36a:	46c0      	nop			; (mov r8, r8)
     36c:	00000335 	.word	0x00000335
     370:	42001400 	.word	0x42001400
     374:	20000094 	.word	0x20000094
     378:	00000651 	.word	0x00000651
     37c:	000002f1 	.word	0x000002f1

00000380 <delay_driver_init>:

void delay_driver_init(void)
{
     380:	b510      	push	{r4, lr}
	delay_init(SysTick);
     382:	4802      	ldr	r0, [pc, #8]	; (38c <delay_driver_init+0xc>)
     384:	4b02      	ldr	r3, [pc, #8]	; (390 <delay_driver_init+0x10>)
     386:	4798      	blx	r3
}
     388:	bd10      	pop	{r4, pc}
     38a:	46c0      	nop			; (mov r8, r8)
     38c:	e000e010 	.word	0xe000e010
     390:	000004cd 	.word	0x000004cd

00000394 <system_init>:

void system_init(void)
{
     394:	b510      	push	{r4, lr}
 * Currently the following initialization functions are supported:
 *  - System clock initialization
 */
static inline void init_mcu(void)
{
	_init_chip();
     396:	4b04      	ldr	r3, [pc, #16]	; (3a8 <system_init+0x14>)
     398:	4798      	blx	r3
	init_mcu();

	ADC_0_init();
     39a:	4b04      	ldr	r3, [pc, #16]	; (3ac <system_init+0x18>)
     39c:	4798      	blx	r3

	TARGET_IO_init();
     39e:	4b04      	ldr	r3, [pc, #16]	; (3b0 <system_init+0x1c>)
     3a0:	4798      	blx	r3

	delay_driver_init();
     3a2:	4b04      	ldr	r3, [pc, #16]	; (3b4 <system_init+0x20>)
     3a4:	4798      	blx	r3
}
     3a6:	bd10      	pop	{r4, pc}
     3a8:	000008f5 	.word	0x000008f5
     3ac:	000002c5 	.word	0x000002c5
     3b0:	00000355 	.word	0x00000355
     3b4:	00000381 	.word	0x00000381

000003b8 <adc_sync_init>:

/**
 * \brief Initialize ADC
 */
int32_t adc_sync_init(struct adc_sync_descriptor *const descr, void *const hw, void *const func)
{
     3b8:	b570      	push	{r4, r5, r6, lr}
     3ba:	0004      	movs	r4, r0
     3bc:	000d      	movs	r5, r1
	ASSERT(descr && hw);
     3be:	2800      	cmp	r0, #0
     3c0:	d00d      	beq.n	3de <adc_sync_init+0x26>
     3c2:	2900      	cmp	r1, #0
     3c4:	d009      	beq.n	3da <adc_sync_init+0x22>
     3c6:	2001      	movs	r0, #1
     3c8:	2239      	movs	r2, #57	; 0x39
     3ca:	4906      	ldr	r1, [pc, #24]	; (3e4 <adc_sync_init+0x2c>)
     3cc:	4b06      	ldr	r3, [pc, #24]	; (3e8 <adc_sync_init+0x30>)
     3ce:	4798      	blx	r3

	return _adc_sync_init(&descr->device, hw);
     3d0:	0029      	movs	r1, r5
     3d2:	0020      	movs	r0, r4
     3d4:	4b05      	ldr	r3, [pc, #20]	; (3ec <adc_sync_init+0x34>)
     3d6:	4798      	blx	r3
}
     3d8:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && hw);
     3da:	2000      	movs	r0, #0
     3dc:	e7f4      	b.n	3c8 <adc_sync_init+0x10>
     3de:	2000      	movs	r0, #0
     3e0:	e7f2      	b.n	3c8 <adc_sync_init+0x10>
     3e2:	46c0      	nop			; (mov r8, r8)
     3e4:	00002e94 	.word	0x00002e94
     3e8:	000006c9 	.word	0x000006c9
     3ec:	00000859 	.word	0x00000859

000003f0 <adc_sync_enable_channel>:

/**
 * \brief Enable ADC
 */
int32_t adc_sync_enable_channel(struct adc_sync_descriptor *const descr, const uint8_t channel)
{
     3f0:	b570      	push	{r4, r5, r6, lr}
     3f2:	0004      	movs	r4, r0
     3f4:	000d      	movs	r5, r1
	ASSERT(descr);
     3f6:	1e43      	subs	r3, r0, #1
     3f8:	4198      	sbcs	r0, r3
     3fa:	b2c0      	uxtb	r0, r0
     3fc:	224e      	movs	r2, #78	; 0x4e
     3fe:	4904      	ldr	r1, [pc, #16]	; (410 <adc_sync_enable_channel+0x20>)
     400:	4b04      	ldr	r3, [pc, #16]	; (414 <adc_sync_enable_channel+0x24>)
     402:	4798      	blx	r3
	_adc_sync_enable_channel(&descr->device, channel);
     404:	0029      	movs	r1, r5
     406:	0020      	movs	r0, r4
     408:	4b03      	ldr	r3, [pc, #12]	; (418 <adc_sync_enable_channel+0x28>)
     40a:	4798      	blx	r3

	return ERR_NONE;
}
     40c:	2000      	movs	r0, #0
     40e:	bd70      	pop	{r4, r5, r6, pc}
     410:	00002e94 	.word	0x00002e94
     414:	000006c9 	.word	0x000006c9
     418:	00000891 	.word	0x00000891

0000041c <adc_sync_read_channel>:
/*
 * \brief Read data from ADC
 */
int32_t adc_sync_read_channel(struct adc_sync_descriptor *const descr, const uint8_t channel, uint8_t *const buffer,
                              const uint16_t length)
{
     41c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     41e:	46ce      	mov	lr, r9
     420:	4647      	mov	r7, r8
     422:	b580      	push	{r7, lr}
     424:	0006      	movs	r6, r0
     426:	000d      	movs	r5, r1
     428:	4690      	mov	r8, r2
     42a:	4699      	mov	r9, r3
	uint8_t  data_size;
	uint16_t offset = 0;

	ASSERT(descr && buffer && length);
     42c:	2800      	cmp	r0, #0
     42e:	d01a      	beq.n	466 <adc_sync_read_channel+0x4a>
     430:	2a00      	cmp	r2, #0
     432:	d01a      	beq.n	46a <adc_sync_read_channel+0x4e>
     434:	464b      	mov	r3, r9
     436:	2b00      	cmp	r3, #0
     438:	d119      	bne.n	46e <adc_sync_read_channel+0x52>
     43a:	2000      	movs	r0, #0
     43c:	2267      	movs	r2, #103	; 0x67
     43e:	491c      	ldr	r1, [pc, #112]	; (4b0 <adc_sync_read_channel+0x94>)
     440:	4f1c      	ldr	r7, [pc, #112]	; (4b4 <adc_sync_read_channel+0x98>)
     442:	47b8      	blx	r7
	data_size = _adc_sync_get_data_size(&descr->device);
     444:	0034      	movs	r4, r6
     446:	0030      	movs	r0, r6
     448:	4b1b      	ldr	r3, [pc, #108]	; (4b8 <adc_sync_read_channel+0x9c>)
     44a:	4798      	blx	r3
     44c:	0001      	movs	r1, r0
     44e:	0006      	movs	r6, r0
	ASSERT(!(length % data_size));
     450:	4648      	mov	r0, r9
     452:	4b1a      	ldr	r3, [pc, #104]	; (4bc <adc_sync_read_channel+0xa0>)
     454:	4798      	blx	r3
     456:	4248      	negs	r0, r1
     458:	4148      	adcs	r0, r1
     45a:	b2c0      	uxtb	r0, r0
     45c:	2269      	movs	r2, #105	; 0x69
     45e:	4914      	ldr	r1, [pc, #80]	; (4b0 <adc_sync_read_channel+0x94>)
     460:	47b8      	blx	r7
	uint16_t offset = 0;
     462:	2700      	movs	r7, #0
     464:	e009      	b.n	47a <adc_sync_read_channel+0x5e>
	ASSERT(descr && buffer && length);
     466:	2000      	movs	r0, #0
     468:	e7e8      	b.n	43c <adc_sync_read_channel+0x20>
     46a:	2000      	movs	r0, #0
     46c:	e7e6      	b.n	43c <adc_sync_read_channel+0x20>
     46e:	2001      	movs	r0, #1
     470:	e7e4      	b.n	43c <adc_sync_read_channel+0x20>
		result         = _adc_sync_read_channel_data(&descr->device, channel);
		buffer[offset] = result;
		if (1 < data_size) {
			buffer[offset + 1] = result >> 8;
		}
		offset += data_size;
     472:	19bf      	adds	r7, r7, r6
     474:	b2bf      	uxth	r7, r7
	} while (offset < length);
     476:	45b9      	cmp	r9, r7
     478:	d915      	bls.n	4a6 <adc_sync_read_channel+0x8a>
		_adc_sync_convert(&descr->device);
     47a:	0020      	movs	r0, r4
     47c:	4b10      	ldr	r3, [pc, #64]	; (4c0 <adc_sync_read_channel+0xa4>)
     47e:	4798      	blx	r3
		while (!_adc_sync_is_channel_conversion_done(&descr->device, channel))
     480:	0029      	movs	r1, r5
     482:	0020      	movs	r0, r4
     484:	4b0f      	ldr	r3, [pc, #60]	; (4c4 <adc_sync_read_channel+0xa8>)
     486:	4798      	blx	r3
     488:	2800      	cmp	r0, #0
     48a:	d0f9      	beq.n	480 <adc_sync_read_channel+0x64>
		result         = _adc_sync_read_channel_data(&descr->device, channel);
     48c:	0029      	movs	r1, r5
     48e:	0020      	movs	r0, r4
     490:	4b0d      	ldr	r3, [pc, #52]	; (4c8 <adc_sync_read_channel+0xac>)
     492:	4798      	blx	r3
		buffer[offset] = result;
     494:	4643      	mov	r3, r8
     496:	55d8      	strb	r0, [r3, r7]
		if (1 < data_size) {
     498:	2e01      	cmp	r6, #1
     49a:	d9ea      	bls.n	472 <adc_sync_read_channel+0x56>
			buffer[offset + 1] = result >> 8;
     49c:	1c7b      	adds	r3, r7, #1
     49e:	0a00      	lsrs	r0, r0, #8
     4a0:	4642      	mov	r2, r8
     4a2:	54d0      	strb	r0, [r2, r3]
     4a4:	e7e5      	b.n	472 <adc_sync_read_channel+0x56>

	return offset;
}
     4a6:	0038      	movs	r0, r7
     4a8:	bc0c      	pop	{r2, r3}
     4aa:	4690      	mov	r8, r2
     4ac:	4699      	mov	r9, r3
     4ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     4b0:	00002e94 	.word	0x00002e94
     4b4:	000006c9 	.word	0x000006c9
     4b8:	0000089f 	.word	0x0000089f
     4bc:	0000106d 	.word	0x0000106d
     4c0:	000008c5 	.word	0x000008c5
     4c4:	000008bb 	.word	0x000008bb
     4c8:	000008d9 	.word	0x000008d9

000004cc <delay_init>:

/**
 * \brief Initialize Delay driver
 */
void delay_init(void *const hw)
{
     4cc:	b510      	push	{r4, lr}
	_delay_init(hardware = hw);
     4ce:	4b02      	ldr	r3, [pc, #8]	; (4d8 <delay_init+0xc>)
     4d0:	6018      	str	r0, [r3, #0]
     4d2:	4b02      	ldr	r3, [pc, #8]	; (4dc <delay_init+0x10>)
     4d4:	4798      	blx	r3
}
     4d6:	bd10      	pop	{r4, pc}
     4d8:	20000080 	.word	0x20000080
     4dc:	00000b81 	.word	0x00000b81

000004e0 <delay_ms>:

/**
 * \brief Perform delay in ms
 */
void delay_ms(const uint16_t ms)
{
     4e0:	b510      	push	{r4, lr}
	_delay_cycles(hardware, _get_cycles_for_ms(ms));
     4e2:	4b04      	ldr	r3, [pc, #16]	; (4f4 <delay_ms+0x14>)
     4e4:	681c      	ldr	r4, [r3, #0]
     4e6:	4b04      	ldr	r3, [pc, #16]	; (4f8 <delay_ms+0x18>)
     4e8:	4798      	blx	r3
     4ea:	0001      	movs	r1, r0
     4ec:	0020      	movs	r0, r4
     4ee:	4b03      	ldr	r3, [pc, #12]	; (4fc <delay_ms+0x1c>)
     4f0:	4798      	blx	r3
}
     4f2:	bd10      	pop	{r4, pc}
     4f4:	20000080 	.word	0x20000080
     4f8:	000008e7 	.word	0x000008e7
     4fc:	00000b8d 	.word	0x00000b8d

00000500 <io_write>:

/**
 * \brief I/O write interface
 */
int32_t io_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
     500:	b570      	push	{r4, r5, r6, lr}
     502:	0004      	movs	r4, r0
     504:	000d      	movs	r5, r1
     506:	0016      	movs	r6, r2
	ASSERT(io_descr && buf);
     508:	2800      	cmp	r0, #0
     50a:	d00e      	beq.n	52a <io_write+0x2a>
     50c:	2900      	cmp	r1, #0
     50e:	d00a      	beq.n	526 <io_write+0x26>
     510:	2001      	movs	r0, #1
     512:	2234      	movs	r2, #52	; 0x34
     514:	4906      	ldr	r1, [pc, #24]	; (530 <io_write+0x30>)
     516:	4b07      	ldr	r3, [pc, #28]	; (534 <io_write+0x34>)
     518:	4798      	blx	r3
	return io_descr->write(io_descr, buf, length);
     51a:	6823      	ldr	r3, [r4, #0]
     51c:	0032      	movs	r2, r6
     51e:	0029      	movs	r1, r5
     520:	0020      	movs	r0, r4
     522:	4798      	blx	r3
}
     524:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(io_descr && buf);
     526:	2000      	movs	r0, #0
     528:	e7f3      	b.n	512 <io_write+0x12>
     52a:	2000      	movs	r0, #0
     52c:	e7f1      	b.n	512 <io_write+0x12>
     52e:	46c0      	nop			; (mov r8, r8)
     530:	00002eb0 	.word	0x00002eb0
     534:	000006c9 	.word	0x000006c9

00000538 <io_read>:

/**
 * \brief I/O read interface
 */
int32_t io_read(struct io_descriptor *const io_descr, uint8_t *const buf, const uint16_t length)
{
     538:	b570      	push	{r4, r5, r6, lr}
     53a:	0004      	movs	r4, r0
     53c:	000d      	movs	r5, r1
     53e:	0016      	movs	r6, r2
	ASSERT(io_descr && buf);
     540:	2800      	cmp	r0, #0
     542:	d00e      	beq.n	562 <io_read+0x2a>
     544:	2900      	cmp	r1, #0
     546:	d00a      	beq.n	55e <io_read+0x26>
     548:	2001      	movs	r0, #1
     54a:	223d      	movs	r2, #61	; 0x3d
     54c:	4906      	ldr	r1, [pc, #24]	; (568 <io_read+0x30>)
     54e:	4b07      	ldr	r3, [pc, #28]	; (56c <io_read+0x34>)
     550:	4798      	blx	r3
	return io_descr->read(io_descr, buf, length);
     552:	6863      	ldr	r3, [r4, #4]
     554:	0032      	movs	r2, r6
     556:	0029      	movs	r1, r5
     558:	0020      	movs	r0, r4
     55a:	4798      	blx	r3
}
     55c:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(io_descr && buf);
     55e:	2000      	movs	r0, #0
     560:	e7f3      	b.n	54a <io_read+0x12>
     562:	2000      	movs	r0, #0
     564:	e7f1      	b.n	54a <io_read+0x12>
     566:	46c0      	nop			; (mov r8, r8)
     568:	00002eb0 	.word	0x00002eb0
     56c:	000006c9 	.word	0x000006c9

00000570 <usart_sync_write>:
 * \param[in] length The number of bytes to write
 *
 * \return The number of bytes written.
 */
static int32_t usart_sync_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
     570:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     572:	0005      	movs	r5, r0
     574:	000e      	movs	r6, r1
     576:	0017      	movs	r7, r2
	uint32_t                      offset = 0;
	struct usart_sync_descriptor *descr  = CONTAINER_OF(io_descr, struct usart_sync_descriptor, io);

	ASSERT(io_descr && buf && length);
     578:	2800      	cmp	r0, #0
     57a:	d023      	beq.n	5c4 <usart_sync_write+0x54>
     57c:	2900      	cmp	r1, #0
     57e:	d023      	beq.n	5c8 <usart_sync_write+0x58>
     580:	2a00      	cmp	r2, #0
     582:	d123      	bne.n	5cc <usart_sync_write+0x5c>
     584:	2000      	movs	r0, #0
     586:	22f1      	movs	r2, #241	; 0xf1
     588:	4911      	ldr	r1, [pc, #68]	; (5d0 <usart_sync_write+0x60>)
     58a:	4b12      	ldr	r3, [pc, #72]	; (5d4 <usart_sync_write+0x64>)
     58c:	4798      	blx	r3
	while (!_usart_sync_is_ready_to_send(&descr->device))
     58e:	002c      	movs	r4, r5
     590:	3408      	adds	r4, #8
     592:	0020      	movs	r0, r4
     594:	4b10      	ldr	r3, [pc, #64]	; (5d8 <usart_sync_write+0x68>)
     596:	4798      	blx	r3
     598:	2800      	cmp	r0, #0
     59a:	d0f8      	beq.n	58e <usart_sync_write+0x1e>
     59c:	2500      	movs	r5, #0
		;
	do {
		_usart_sync_write_byte(&descr->device, buf[offset]);
     59e:	5d71      	ldrb	r1, [r6, r5]
     5a0:	0020      	movs	r0, r4
     5a2:	4b0e      	ldr	r3, [pc, #56]	; (5dc <usart_sync_write+0x6c>)
     5a4:	4798      	blx	r3
		while (!_usart_sync_is_ready_to_send(&descr->device))
     5a6:	0020      	movs	r0, r4
     5a8:	4b0b      	ldr	r3, [pc, #44]	; (5d8 <usart_sync_write+0x68>)
     5aa:	4798      	blx	r3
     5ac:	2800      	cmp	r0, #0
     5ae:	d0fa      	beq.n	5a6 <usart_sync_write+0x36>
			;
	} while (++offset < length);
     5b0:	3501      	adds	r5, #1
     5b2:	42bd      	cmp	r5, r7
     5b4:	d3f3      	bcc.n	59e <usart_sync_write+0x2e>
	while (!_usart_sync_is_transmit_done(&descr->device))
     5b6:	0020      	movs	r0, r4
     5b8:	4b09      	ldr	r3, [pc, #36]	; (5e0 <usart_sync_write+0x70>)
     5ba:	4798      	blx	r3
     5bc:	2800      	cmp	r0, #0
     5be:	d0fa      	beq.n	5b6 <usart_sync_write+0x46>
		;
	return (int32_t)offset;
}
     5c0:	0028      	movs	r0, r5
     5c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(io_descr && buf && length);
     5c4:	2000      	movs	r0, #0
     5c6:	e7de      	b.n	586 <usart_sync_write+0x16>
     5c8:	2000      	movs	r0, #0
     5ca:	e7dc      	b.n	586 <usart_sync_write+0x16>
     5cc:	2001      	movs	r0, #1
     5ce:	e7da      	b.n	586 <usart_sync_write+0x16>
     5d0:	00002ec4 	.word	0x00002ec4
     5d4:	000006c9 	.word	0x000006c9
     5d8:	00000af7 	.word	0x00000af7
     5dc:	00000ae7 	.word	0x00000ae7
     5e0:	00000b01 	.word	0x00000b01

000005e4 <usart_sync_read>:
 * \param[in] length The size of a buffer
 *
 * \return The number of bytes read.
 */
static int32_t usart_sync_read(struct io_descriptor *const io_descr, uint8_t *const buf, const uint16_t length)
{
     5e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     5e6:	46ce      	mov	lr, r9
     5e8:	4647      	mov	r7, r8
     5ea:	b580      	push	{r7, lr}
     5ec:	1e05      	subs	r5, r0, #0
     5ee:	4688      	mov	r8, r1
     5f0:	4691      	mov	r9, r2
	uint32_t                      offset = 0;
	struct usart_sync_descriptor *descr  = CONTAINER_OF(io_descr, struct usart_sync_descriptor, io);

	ASSERT(io_descr && buf && length);
     5f2:	d01f      	beq.n	634 <usart_sync_read+0x50>
     5f4:	2900      	cmp	r1, #0
     5f6:	d01f      	beq.n	638 <usart_sync_read+0x54>
     5f8:	2a00      	cmp	r2, #0
     5fa:	d11f      	bne.n	63c <usart_sync_read+0x58>
     5fc:	2000      	movs	r0, #0
     5fe:	2286      	movs	r2, #134	; 0x86
     600:	0052      	lsls	r2, r2, #1
     602:	490f      	ldr	r1, [pc, #60]	; (640 <usart_sync_read+0x5c>)
     604:	4b0f      	ldr	r3, [pc, #60]	; (644 <usart_sync_read+0x60>)
     606:	4798      	blx	r3
	uint32_t                      offset = 0;
     608:	2600      	movs	r6, #0
	do {
		while (!_usart_sync_is_byte_received(&descr->device))
     60a:	002c      	movs	r4, r5
     60c:	3408      	adds	r4, #8
     60e:	0020      	movs	r0, r4
     610:	4b0d      	ldr	r3, [pc, #52]	; (648 <usart_sync_read+0x64>)
     612:	4798      	blx	r3
     614:	2800      	cmp	r0, #0
     616:	d0f8      	beq.n	60a <usart_sync_read+0x26>
			;
		buf[offset] = _usart_sync_read_byte(&descr->device);
     618:	4643      	mov	r3, r8
     61a:	199f      	adds	r7, r3, r6
     61c:	0020      	movs	r0, r4
     61e:	4b0b      	ldr	r3, [pc, #44]	; (64c <usart_sync_read+0x68>)
     620:	4798      	blx	r3
     622:	7038      	strb	r0, [r7, #0]
	} while (++offset < length);
     624:	3601      	adds	r6, #1
     626:	454e      	cmp	r6, r9
     628:	d3ef      	bcc.n	60a <usart_sync_read+0x26>

	return (int32_t)offset;
}
     62a:	0030      	movs	r0, r6
     62c:	bc0c      	pop	{r2, r3}
     62e:	4690      	mov	r8, r2
     630:	4699      	mov	r9, r3
     632:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(io_descr && buf && length);
     634:	2000      	movs	r0, #0
     636:	e7e2      	b.n	5fe <usart_sync_read+0x1a>
     638:	2000      	movs	r0, #0
     63a:	e7e0      	b.n	5fe <usart_sync_read+0x1a>
     63c:	2001      	movs	r0, #1
     63e:	e7de      	b.n	5fe <usart_sync_read+0x1a>
     640:	00002ec4 	.word	0x00002ec4
     644:	000006c9 	.word	0x000006c9
     648:	00000b0d 	.word	0x00000b0d
     64c:	00000aef 	.word	0x00000aef

00000650 <usart_sync_init>:
{
     650:	b570      	push	{r4, r5, r6, lr}
     652:	0004      	movs	r4, r0
     654:	000d      	movs	r5, r1
	ASSERT(descr && hw);
     656:	2800      	cmp	r0, #0
     658:	d014      	beq.n	684 <usart_sync_init+0x34>
     65a:	2900      	cmp	r1, #0
     65c:	d010      	beq.n	680 <usart_sync_init+0x30>
     65e:	2001      	movs	r0, #1
     660:	2234      	movs	r2, #52	; 0x34
     662:	4909      	ldr	r1, [pc, #36]	; (688 <usart_sync_init+0x38>)
     664:	4b09      	ldr	r3, [pc, #36]	; (68c <usart_sync_init+0x3c>)
     666:	4798      	blx	r3
	init_status = _usart_sync_init(&descr->device, hw);
     668:	0020      	movs	r0, r4
     66a:	3008      	adds	r0, #8
     66c:	0029      	movs	r1, r5
     66e:	4b08      	ldr	r3, [pc, #32]	; (690 <usart_sync_init+0x40>)
     670:	4798      	blx	r3
	if (init_status) {
     672:	2800      	cmp	r0, #0
     674:	d103      	bne.n	67e <usart_sync_init+0x2e>
	descr->io.read  = usart_sync_read;
     676:	4b07      	ldr	r3, [pc, #28]	; (694 <usart_sync_init+0x44>)
     678:	6063      	str	r3, [r4, #4]
	descr->io.write = usart_sync_write;
     67a:	4b07      	ldr	r3, [pc, #28]	; (698 <usart_sync_init+0x48>)
     67c:	6023      	str	r3, [r4, #0]
}
     67e:	bd70      	pop	{r4, r5, r6, pc}
	ASSERT(descr && hw);
     680:	2000      	movs	r0, #0
     682:	e7ed      	b.n	660 <usart_sync_init+0x10>
     684:	2000      	movs	r0, #0
     686:	e7eb      	b.n	660 <usart_sync_init+0x10>
     688:	00002ec4 	.word	0x00002ec4
     68c:	000006c9 	.word	0x000006c9
     690:	00000aa9 	.word	0x00000aa9
     694:	000005e5 	.word	0x000005e5
     698:	00000571 	.word	0x00000571

0000069c <usart_sync_enable>:
{
     69c:	b510      	push	{r4, lr}
     69e:	0004      	movs	r4, r0
	ASSERT(descr);
     6a0:	1e43      	subs	r3, r0, #1
     6a2:	4198      	sbcs	r0, r3
     6a4:	b2c0      	uxtb	r0, r0
     6a6:	2253      	movs	r2, #83	; 0x53
     6a8:	4904      	ldr	r1, [pc, #16]	; (6bc <usart_sync_enable+0x20>)
     6aa:	4b05      	ldr	r3, [pc, #20]	; (6c0 <usart_sync_enable+0x24>)
     6ac:	4798      	blx	r3
	_usart_sync_enable(&descr->device);
     6ae:	0020      	movs	r0, r4
     6b0:	3008      	adds	r0, #8
     6b2:	4b04      	ldr	r3, [pc, #16]	; (6c4 <usart_sync_enable+0x28>)
     6b4:	4798      	blx	r3
}
     6b6:	2000      	movs	r0, #0
     6b8:	bd10      	pop	{r4, pc}
     6ba:	46c0      	nop			; (mov r8, r8)
     6bc:	00002ec4 	.word	0x00002ec4
     6c0:	000006c9 	.word	0x000006c9
     6c4:	00000ad5 	.word	0x00000ad5

000006c8 <assert>:
/**
 * \brief Assert function
 */
void assert(const bool condition, const char *const file, const int line)
{
	if (!(condition)) {
     6c8:	2800      	cmp	r0, #0
     6ca:	d100      	bne.n	6ce <assert+0x6>
		__asm("BKPT #0");
     6cc:	be00      	bkpt	0x0000
	}
	(void)file;
	(void)line;
}
     6ce:	4770      	bx	lr

000006d0 <_sbrk>:

/**
 * \brief Replacement of C library of _sbrk
 */
extern caddr_t _sbrk(int incr)
{
     6d0:	0003      	movs	r3, r0
	static unsigned char *heap = NULL;
	unsigned char *       prev_heap;

	if (heap == NULL) {
     6d2:	4a06      	ldr	r2, [pc, #24]	; (6ec <_sbrk+0x1c>)
     6d4:	6812      	ldr	r2, [r2, #0]
     6d6:	2a00      	cmp	r2, #0
     6d8:	d004      	beq.n	6e4 <_sbrk+0x14>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
     6da:	4a04      	ldr	r2, [pc, #16]	; (6ec <_sbrk+0x1c>)
     6dc:	6810      	ldr	r0, [r2, #0]

	heap += incr;
     6de:	18c3      	adds	r3, r0, r3
     6e0:	6013      	str	r3, [r2, #0]

	return (caddr_t)prev_heap;
}
     6e2:	4770      	bx	lr
		heap = (unsigned char *)&_end;
     6e4:	4902      	ldr	r1, [pc, #8]	; (6f0 <_sbrk+0x20>)
     6e6:	4a01      	ldr	r2, [pc, #4]	; (6ec <_sbrk+0x1c>)
     6e8:	6011      	str	r1, [r2, #0]
     6ea:	e7f6      	b.n	6da <_sbrk+0xa>
     6ec:	20000084 	.word	0x20000084
     6f0:	200020a8 	.word	0x200020a8

000006f4 <_close>:
 */
extern int _close(int file)
{
	(void)file;
	return -1;
}
     6f4:	2001      	movs	r0, #1
     6f6:	4240      	negs	r0, r0
     6f8:	4770      	bx	lr

000006fa <_fstat>:
 * \brief Replacement of C library of _fstat
 */
extern int _fstat(int file, struct stat *st)
{
	(void)file;
	st->st_mode = S_IFCHR;
     6fa:	2380      	movs	r3, #128	; 0x80
     6fc:	019b      	lsls	r3, r3, #6
     6fe:	604b      	str	r3, [r1, #4]

	return 0;
}
     700:	2000      	movs	r0, #0
     702:	4770      	bx	lr

00000704 <_isatty>:
 */
extern int _isatty(int file)
{
	(void)file;
	return 1;
}
     704:	2001      	movs	r0, #1
     706:	4770      	bx	lr

00000708 <_lseek>:
 */
extern int _lseek(int file, int ptr, int dir)
{
	(void)file, (void)ptr, (void)dir;
	return 0;
}
     708:	2000      	movs	r0, #0
     70a:	4770      	bx	lr

0000070c <_adc_get_hardware_index>:
 */
static uint8_t _adc_get_hardware_index(const void *const hw)
{
	(void)hw;
	return 0;
}
     70c:	2000      	movs	r0, #0
     70e:	4770      	bx	lr

00000710 <_adc_get_regs>:
/** \brief Return the pointer to register settings of specific ADC
 *  \param[in] hw_addr The hardware register base address.
 *  \return Pointer to register settings of specific ADC.
 */
static uint8_t _adc_get_regs(const uint32_t hw_addr)
{
     710:	b510      	push	{r4, lr}
	uint8_t n = _adc_get_hardware_index((const void *)hw_addr);
     712:	4b0b      	ldr	r3, [pc, #44]	; (740 <_adc_get_regs+0x30>)
     714:	4798      	blx	r3
     716:	0002      	movs	r2, r0
	uint8_t i;

	for (i = 0; i < sizeof(_adcs) / sizeof(struct adc_configuration); i++) {
     718:	2000      	movs	r0, #0
     71a:	2800      	cmp	r0, #0
     71c:	d006      	beq.n	72c <_adc_get_regs+0x1c>
		if (_adcs[i].number == n) {
			return i;
		}
	}

	ASSERT(false);
     71e:	227f      	movs	r2, #127	; 0x7f
     720:	4908      	ldr	r1, [pc, #32]	; (744 <_adc_get_regs+0x34>)
     722:	2000      	movs	r0, #0
     724:	4b08      	ldr	r3, [pc, #32]	; (748 <_adc_get_regs+0x38>)
     726:	4798      	blx	r3
	return 0;
     728:	2000      	movs	r0, #0
}
     72a:	bd10      	pop	{r4, pc}
		if (_adcs[i].number == n) {
     72c:	00c3      	lsls	r3, r0, #3
     72e:	1a1b      	subs	r3, r3, r0
     730:	0099      	lsls	r1, r3, #2
     732:	4b06      	ldr	r3, [pc, #24]	; (74c <_adc_get_regs+0x3c>)
     734:	5ccb      	ldrb	r3, [r1, r3]
     736:	429a      	cmp	r2, r3
     738:	d0f7      	beq.n	72a <_adc_get_regs+0x1a>
	for (i = 0; i < sizeof(_adcs) / sizeof(struct adc_configuration); i++) {
     73a:	3001      	adds	r0, #1
     73c:	b2c0      	uxtb	r0, r0
     73e:	e7ec      	b.n	71a <_adc_get_regs+0xa>
     740:	0000070d 	.word	0x0000070d
     744:	00002efc 	.word	0x00002efc
     748:	000006c9 	.word	0x000006c9
     74c:	00002ee0 	.word	0x00002ee0

00000750 <_adc_init>:
 *
 * \param[in] hw The pointer to hardware instance
 * \param[in] i  The number of hardware instance
 */
static int32_t _adc_init(void *const hw, const uint8_t i)
{
     750:	b570      	push	{r4, r5, r6, lr}
     752:	0004      	movs	r4, r0
     754:	000d      	movs	r5, r1
	ASSERT(hw == ADC);
     756:	4b3a      	ldr	r3, [pc, #232]	; (840 <_adc_init+0xf0>)
     758:	18c0      	adds	r0, r0, r3
     75a:	4243      	negs	r3, r0
     75c:	4158      	adcs	r0, r3
     75e:	b2c0      	uxtb	r0, r0
     760:	2294      	movs	r2, #148	; 0x94
     762:	4938      	ldr	r1, [pc, #224]	; (844 <_adc_init+0xf4>)
     764:	4b38      	ldr	r3, [pc, #224]	; (848 <_adc_init+0xf8>)
     766:	4798      	blx	r3

	uint16_t calib_reg;

	calib_reg = ADC_CALIB_BIAS_CAL((*(uint32_t *)ADC_FUSES_BIASCAL_ADDR >> ADC_FUSES_BIASCAL_Pos))
     768:	4b38      	ldr	r3, [pc, #224]	; (84c <_adc_init+0xfc>)
     76a:	681a      	ldr	r2, [r3, #0]
     76c:	08d2      	lsrs	r2, r2, #3
     76e:	0212      	lsls	r2, r2, #8
     770:	23e0      	movs	r3, #224	; 0xe0
     772:	00db      	lsls	r3, r3, #3
     774:	401a      	ands	r2, r3
	            | ADC_CALIB_LINEARITY_CAL((*(uint64_t *)ADC_FUSES_LINEARITY_0_ADDR >> ADC_FUSES_LINEARITY_0_Pos));
     776:	4936      	ldr	r1, [pc, #216]	; (850 <_adc_init+0x100>)
     778:	680b      	ldr	r3, [r1, #0]
     77a:	6849      	ldr	r1, [r1, #4]
     77c:	0149      	lsls	r1, r1, #5
     77e:	0edb      	lsrs	r3, r3, #27
     780:	430b      	orrs	r3, r1
     782:	21ff      	movs	r1, #255	; 0xff
     784:	400b      	ands	r3, r1
	calib_reg = ADC_CALIB_BIAS_CAL((*(uint32_t *)ADC_FUSES_BIASCAL_ADDR >> ADC_FUSES_BIASCAL_Pos))
     786:	431a      	orrs	r2, r3
typedef uint8_t  hri_adc_swtrig_reg_t;
typedef uint8_t  hri_adc_winctrl_reg_t;

static inline void hri_adc_wait_for_sync(const void *const hw)
{
	while (((const Adc *)hw)->STATUS.bit.SYNCBUSY)
     788:	7e63      	ldrb	r3, [r4, #25]
     78a:	09db      	lsrs	r3, r3, #7
     78c:	d1fc      	bne.n	788 <_adc_init+0x38>
}

static inline hri_adc_ctrla_reg_t hri_adc_get_CTRLA_reg(const void *const hw, hri_adc_ctrla_reg_t mask)
{
	uint8_t tmp;
	tmp = ((Adc *)hw)->CTRLA.reg;
     78e:	7823      	ldrb	r3, [r4, #0]

	hri_adc_wait_for_sync(hw);
	if (hri_adc_get_CTRLA_reg(hw, ADC_CTRLA_ENABLE)) {
     790:	079b      	lsls	r3, r3, #30
     792:	d504      	bpl.n	79e <_adc_init+0x4e>
}

static inline void hri_adc_write_CTRLA_reg(const void *const hw, hri_adc_ctrla_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->CTRLA.reg = data;
     794:	2300      	movs	r3, #0
     796:	7023      	strb	r3, [r4, #0]
	while (((const Adc *)hw)->STATUS.bit.SYNCBUSY)
     798:	7e63      	ldrb	r3, [r4, #25]
     79a:	09db      	lsrs	r3, r3, #7
     79c:	d1fc      	bne.n	798 <_adc_init+0x48>
	((Adc *)hw)->CTRLA.reg = data;
     79e:	2301      	movs	r3, #1
     7a0:	7023      	strb	r3, [r4, #0]
	while (((const Adc *)hw)->STATUS.bit.SYNCBUSY)
     7a2:	7e63      	ldrb	r3, [r4, #25]
     7a4:	09db      	lsrs	r3, r3, #7
     7a6:	d1fc      	bne.n	7a2 <_adc_init+0x52>
}

static inline void hri_adc_write_CALIB_reg(const void *const hw, hri_adc_calib_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->CALIB.reg = data;
     7a8:	8522      	strh	r2, [r4, #40]	; 0x28
	}
	hri_adc_write_CTRLA_reg(hw, ADC_CTRLA_SWRST);
	hri_adc_wait_for_sync(hw);

	hri_adc_write_CALIB_reg(hw, calib_reg);
	hri_adc_write_REFCTRL_reg(hw, _adcs[i].ref_ctrl);
     7aa:	00ea      	lsls	r2, r5, #3
     7ac:	1b52      	subs	r2, r2, r5
     7ae:	0091      	lsls	r1, r2, #2
     7b0:	4b28      	ldr	r3, [pc, #160]	; (854 <_adc_init+0x104>)
     7b2:	185b      	adds	r3, r3, r1
     7b4:	789a      	ldrb	r2, [r3, #2]
	((Adc *)hw)->REFCTRL.reg = data;
     7b6:	7062      	strb	r2, [r4, #1]
	hri_adc_write_AVGCTRL_reg(hw, _adcs[i].avg_ctrl);
     7b8:	78da      	ldrb	r2, [r3, #3]
	((Adc *)hw)->AVGCTRL.reg = data;
     7ba:	70a2      	strb	r2, [r4, #2]
	hri_adc_write_SAMPCTRL_reg(hw, _adcs[i].samp_ctrl);
     7bc:	791a      	ldrb	r2, [r3, #4]
	((Adc *)hw)->SAMPCTRL.reg = data;
     7be:	70e2      	strb	r2, [r4, #3]
	hri_adc_write_EVCTRL_reg(hw, _adcs[i].ev_ctrl);
     7c0:	7c1a      	ldrb	r2, [r3, #16]
	((Adc *)hw)->EVCTRL.reg = data;
     7c2:	7522      	strb	r2, [r4, #20]
	hri_adc_write_GAINCORR_reg(hw, _adcs[i].gain_corr);
     7c4:	8ada      	ldrh	r2, [r3, #22]
	((Adc *)hw)->GAINCORR.reg = data;
     7c6:	84a2      	strh	r2, [r4, #36]	; 0x24
	hri_adc_write_OFFSETCORR_reg(hw, _adcs[i].offset_corr);
     7c8:	8b1a      	ldrh	r2, [r3, #24]
	((Adc *)hw)->OFFSETCORR.reg = data;
     7ca:	84e2      	strh	r2, [r4, #38]	; 0x26
	hri_adc_write_DBGCTRL_reg(hw, _adcs[i].dbg_ctrl);
     7cc:	7e99      	ldrb	r1, [r3, #26]
}

static inline void hri_adc_write_DBGCTRL_reg(const void *const hw, hri_adc_dbgctrl_reg_t data)
{
	ADC_CRITICAL_SECTION_ENTER();
	((Adc *)hw)->DBGCTRL.reg = data;
     7ce:	222a      	movs	r2, #42	; 0x2a
     7d0:	54a1      	strb	r1, [r4, r2]
	hri_adc_write_CTRLB_reg(hw, _adcs[i].ctrl_b);
     7d2:	88db      	ldrh	r3, [r3, #6]
	((Adc *)hw)->CTRLB.reg = data;
     7d4:	80a3      	strh	r3, [r4, #4]
	while (((const Adc *)hw)->STATUS.bit.SYNCBUSY)
     7d6:	7e63      	ldrb	r3, [r4, #25]
     7d8:	09db      	lsrs	r3, r3, #7
     7da:	d1fc      	bne.n	7d6 <_adc_init+0x86>
	hri_adc_write_INPUTCTRL_reg(hw, _adcs[i].input_ctrl);
     7dc:	00eb      	lsls	r3, r5, #3
     7de:	1b5b      	subs	r3, r3, r5
     7e0:	009a      	lsls	r2, r3, #2
     7e2:	4b1c      	ldr	r3, [pc, #112]	; (854 <_adc_init+0x104>)
     7e4:	189b      	adds	r3, r3, r2
     7e6:	68db      	ldr	r3, [r3, #12]
	((Adc *)hw)->INPUTCTRL.reg = data;
     7e8:	6123      	str	r3, [r4, #16]
	while (((const Adc *)hw)->STATUS.bit.SYNCBUSY)
     7ea:	7e63      	ldrb	r3, [r4, #25]
     7ec:	09db      	lsrs	r3, r3, #7
     7ee:	d1fc      	bne.n	7ea <_adc_init+0x9a>
	hri_adc_write_WINCTRL_reg(hw, _adcs[i].win_ctrl);
     7f0:	00eb      	lsls	r3, r5, #3
     7f2:	1b5b      	subs	r3, r3, r5
     7f4:	009a      	lsls	r2, r3, #2
     7f6:	4b17      	ldr	r3, [pc, #92]	; (854 <_adc_init+0x104>)
     7f8:	189b      	adds	r3, r3, r2
     7fa:	7a1b      	ldrb	r3, [r3, #8]
	((Adc *)hw)->WINCTRL.reg = data;
     7fc:	7223      	strb	r3, [r4, #8]
	while (((const Adc *)hw)->STATUS.bit.SYNCBUSY)
     7fe:	7e63      	ldrb	r3, [r4, #25]
     800:	09db      	lsrs	r3, r3, #7
     802:	d1fc      	bne.n	7fe <_adc_init+0xae>
	hri_adc_write_WINLT_reg(hw, _adcs[i].win_lt);
     804:	00eb      	lsls	r3, r5, #3
     806:	1b5b      	subs	r3, r3, r5
     808:	009a      	lsls	r2, r3, #2
     80a:	4b12      	ldr	r3, [pc, #72]	; (854 <_adc_init+0x104>)
     80c:	189b      	adds	r3, r3, r2
     80e:	8a5b      	ldrh	r3, [r3, #18]
	((Adc *)hw)->WINLT.reg = data;
     810:	83a3      	strh	r3, [r4, #28]
	while (((const Adc *)hw)->STATUS.bit.SYNCBUSY)
     812:	7e63      	ldrb	r3, [r4, #25]
     814:	09db      	lsrs	r3, r3, #7
     816:	d1fc      	bne.n	812 <_adc_init+0xc2>
	hri_adc_write_WINUT_reg(hw, _adcs[i].win_ut);
     818:	00eb      	lsls	r3, r5, #3
     81a:	1b5b      	subs	r3, r3, r5
     81c:	009a      	lsls	r2, r3, #2
     81e:	4b0d      	ldr	r3, [pc, #52]	; (854 <_adc_init+0x104>)
     820:	189b      	adds	r3, r3, r2
     822:	8a9b      	ldrh	r3, [r3, #20]
	((Adc *)hw)->WINUT.reg = data;
     824:	8423      	strh	r3, [r4, #32]
	while (((const Adc *)hw)->STATUS.bit.SYNCBUSY)
     826:	7e63      	ldrb	r3, [r4, #25]
     828:	09db      	lsrs	r3, r3, #7
     82a:	d1fc      	bne.n	826 <_adc_init+0xd6>
	hri_adc_write_CTRLA_reg(hw, _adcs[i].ctrl_a);
     82c:	00eb      	lsls	r3, r5, #3
     82e:	1b5d      	subs	r5, r3, r5
     830:	00aa      	lsls	r2, r5, #2
     832:	4b08      	ldr	r3, [pc, #32]	; (854 <_adc_init+0x104>)
     834:	189b      	adds	r3, r3, r2
     836:	785b      	ldrb	r3, [r3, #1]
	((Adc *)hw)->CTRLA.reg = data;
     838:	7023      	strb	r3, [r4, #0]

	return ERR_NONE;
}
     83a:	2000      	movs	r0, #0
     83c:	bd70      	pop	{r4, r5, r6, pc}
     83e:	46c0      	nop			; (mov r8, r8)
     840:	bdffc000 	.word	0xbdffc000
     844:	00002efc 	.word	0x00002efc
     848:	000006c9 	.word	0x000006c9
     84c:	00806024 	.word	0x00806024
     850:	00806020 	.word	0x00806020
     854:	00002ee0 	.word	0x00002ee0

00000858 <_adc_sync_init>:

/**
 * \brief Initialize ADC
 */
int32_t _adc_sync_init(struct _adc_sync_device *const device, void *const hw)
{
     858:	b570      	push	{r4, r5, r6, lr}
     85a:	0005      	movs	r5, r0
     85c:	000c      	movs	r4, r1
	ASSERT(device);
     85e:	1e43      	subs	r3, r0, #1
     860:	4198      	sbcs	r0, r3
     862:	b2c0      	uxtb	r0, r0
     864:	22c5      	movs	r2, #197	; 0xc5
     866:	4906      	ldr	r1, [pc, #24]	; (880 <_adc_sync_init+0x28>)
     868:	4b06      	ldr	r3, [pc, #24]	; (884 <_adc_sync_init+0x2c>)
     86a:	4798      	blx	r3

	device->hw = hw;
     86c:	602c      	str	r4, [r5, #0]

	return _adc_init(hw, _adc_get_regs((uint32_t)hw));
     86e:	0020      	movs	r0, r4
     870:	4b05      	ldr	r3, [pc, #20]	; (888 <_adc_sync_init+0x30>)
     872:	4798      	blx	r3
     874:	0001      	movs	r1, r0
     876:	0020      	movs	r0, r4
     878:	4b04      	ldr	r3, [pc, #16]	; (88c <_adc_sync_init+0x34>)
     87a:	4798      	blx	r3
}
     87c:	bd70      	pop	{r4, r5, r6, pc}
     87e:	46c0      	nop			; (mov r8, r8)
     880:	00002efc 	.word	0x00002efc
     884:	000006c9 	.word	0x000006c9
     888:	00000711 	.word	0x00000711
     88c:	00000751 	.word	0x00000751

00000890 <_adc_sync_enable_channel>:
 */
void _adc_sync_enable_channel(struct _adc_sync_device *const device, const uint8_t channel)
{
	(void)channel;

	hri_adc_set_CTRLA_ENABLE_bit(device->hw);
     890:	6802      	ldr	r2, [r0, #0]
	((Adc *)hw)->CTRLA.reg |= ADC_CTRLA_ENABLE;
     892:	7813      	ldrb	r3, [r2, #0]
     894:	2102      	movs	r1, #2
     896:	430b      	orrs	r3, r1
     898:	b2db      	uxtb	r3, r3
     89a:	7013      	strb	r3, [r2, #0]
}
     89c:	4770      	bx	lr

0000089e <_adc_sync_get_data_size>:
/**
 * \brief Retrieve ADC conversion data size
 */
uint8_t _adc_sync_get_data_size(const struct _adc_sync_device *const device)
{
	return hri_adc_read_CTRLB_RESSEL_bf(device->hw) == ADC_CTRLB_RESSEL_8BIT_Val ? 1 : 2;
     89e:	6802      	ldr	r2, [r0, #0]
	while (((const Adc *)hw)->STATUS.bit.SYNCBUSY)
     8a0:	7e53      	ldrb	r3, [r2, #25]
     8a2:	09db      	lsrs	r3, r3, #7
     8a4:	d1fc      	bne.n	8a0 <_adc_sync_get_data_size+0x2>
	tmp = ((Adc *)hw)->CTRLB.reg;
     8a6:	8892      	ldrh	r2, [r2, #4]
	tmp = (tmp & ADC_CTRLB_RESSEL_Msk) >> ADC_CTRLB_RESSEL_Pos;
     8a8:	0912      	lsrs	r2, r2, #4
     8aa:	3303      	adds	r3, #3
     8ac:	4013      	ands	r3, r2
     8ae:	2b03      	cmp	r3, #3
     8b0:	d001      	beq.n	8b6 <_adc_sync_get_data_size+0x18>
     8b2:	2002      	movs	r0, #2
}
     8b4:	4770      	bx	lr
	return hri_adc_read_CTRLB_RESSEL_bf(device->hw) == ADC_CTRLB_RESSEL_8BIT_Val ? 1 : 2;
     8b6:	2001      	movs	r0, #1
     8b8:	e7fc      	b.n	8b4 <_adc_sync_get_data_size+0x16>

000008ba <_adc_sync_is_channel_conversion_done>:
 */
bool _adc_sync_is_channel_conversion_done(const struct _adc_sync_device *const device, const uint8_t channel)
{
	(void)channel;

	return hri_adc_get_interrupt_RESRDY_bit(device->hw);
     8ba:	6803      	ldr	r3, [r0, #0]
	return (((Adc *)hw)->INTFLAG.reg & ADC_INTFLAG_RESRDY) >> ADC_INTFLAG_RESRDY_Pos;
     8bc:	7e18      	ldrb	r0, [r3, #24]
     8be:	2301      	movs	r3, #1
     8c0:	4018      	ands	r0, r3
}
     8c2:	4770      	bx	lr

000008c4 <_adc_sync_convert>:
/**
 * \brief Make conversion
 */
void _adc_sync_convert(struct _adc_sync_device *const device)
{
	hri_adc_set_SWTRIG_START_bit(device->hw);
     8c4:	6802      	ldr	r2, [r0, #0]
	((Adc *)hw)->SWTRIG.reg |= ADC_SWTRIG_START;
     8c6:	7b13      	ldrb	r3, [r2, #12]
     8c8:	2102      	movs	r1, #2
     8ca:	430b      	orrs	r3, r1
     8cc:	b2db      	uxtb	r3, r3
     8ce:	7313      	strb	r3, [r2, #12]
	while (((const Adc *)hw)->STATUS.bit.SYNCBUSY)
     8d0:	7e53      	ldrb	r3, [r2, #25]
     8d2:	09db      	lsrs	r3, r3, #7
     8d4:	d1fc      	bne.n	8d0 <_adc_sync_convert+0xc>
}
     8d6:	4770      	bx	lr

000008d8 <_adc_sync_read_channel_data>:
 */
uint16_t _adc_sync_read_channel_data(const struct _adc_sync_device *const device, const uint8_t channel)
{
	(void)channel;

	return hri_adc_read_RESULT_reg(device->hw);
     8d8:	6802      	ldr	r2, [r0, #0]
     8da:	7e53      	ldrb	r3, [r2, #25]
     8dc:	09db      	lsrs	r3, r3, #7
     8de:	d1fc      	bne.n	8da <_adc_sync_read_channel_data+0x2>
	return ((Adc *)hw)->RESULT.reg;
     8e0:	8b50      	ldrh	r0, [r2, #26]
     8e2:	b280      	uxth	r0, r0
}
     8e4:	4770      	bx	lr

000008e6 <_get_cycles_for_ms>:
{
	switch (power) {
	case 8:
		return (ms * (freq / 100000)) * 100;
	case 7:
		return (ms * (freq / 10000)) * 10;
     8e6:	23c8      	movs	r3, #200	; 0xc8
     8e8:	009b      	lsls	r3, r3, #2
     8ea:	4358      	muls	r0, r3
     8ec:	0083      	lsls	r3, r0, #2
     8ee:	181b      	adds	r3, r3, r0
     8f0:	0058      	lsls	r0, r3, #1
 * \brief Retrieve the amount of cycles to delay for the given amount of ms
 */
uint32_t _get_cycles_for_ms(const uint16_t ms)
{
	return _get_cycles_for_ms_internal(ms, CONF_CPU_FREQUENCY, CPU_FREQ_POWER);
}
     8f2:	4770      	bx	lr

000008f4 <_init_chip>:

/**
 * \brief Initialize the hardware abstraction layer
 */
void _init_chip(void)
{
     8f4:	b510      	push	{r4, lr}
}

static inline void hri_nvmctrl_set_CTRLB_RWS_bf(const void *const hw, hri_nvmctrl_ctrlb_reg_t mask)
{
	NVMCTRL_CRITICAL_SECTION_ENTER();
	((Nvmctrl *)hw)->CTRLB.reg |= NVMCTRL_CTRLB_RWS(mask);
     8f6:	4b06      	ldr	r3, [pc, #24]	; (910 <_init_chip+0x1c>)
     8f8:	685a      	ldr	r2, [r3, #4]
     8fa:	605a      	str	r2, [r3, #4]
	hri_nvmctrl_set_CTRLB_RWS_bf(NVMCTRL, CONF_NVM_WAIT_STATE);

	_pm_init();
     8fc:	4b05      	ldr	r3, [pc, #20]	; (914 <_init_chip+0x20>)
     8fe:	4798      	blx	r3
	_sysctrl_init_sources();
     900:	4b05      	ldr	r3, [pc, #20]	; (918 <_init_chip+0x24>)
     902:	4798      	blx	r3
#if _GCLK_INIT_1ST
	_gclk_init_generators_by_fref(_GCLK_INIT_1ST);
#endif
	_sysctrl_init_referenced_generators();
     904:	4b05      	ldr	r3, [pc, #20]	; (91c <_init_chip+0x28>)
     906:	4798      	blx	r3
	_gclk_init_generators_by_fref(_GCLK_INIT_LAST);
     908:	20ff      	movs	r0, #255	; 0xff
     90a:	4b05      	ldr	r3, [pc, #20]	; (920 <_init_chip+0x2c>)
     90c:	4798      	blx	r3
#if CONF_DMAC_ENABLE
	_pm_enable_bus_clock(PM_BUS_AHB, DMAC);
	_pm_enable_bus_clock(PM_BUS_APBB, DMAC);
	_dma_init();
#endif
}
     90e:	bd10      	pop	{r4, pc}
     910:	41004000 	.word	0x41004000
     914:	00000945 	.word	0x00000945
     918:	00000b19 	.word	0x00000b19
     91c:	00000b5d 	.word	0x00000b5d
     920:	00000925 	.word	0x00000925

00000924 <_gclk_init_generators_by_fref>:

void _gclk_init_generators_by_fref(uint32_t bm)
{

#if CONF_GCLK_GENERATOR_0_CONFIG == 1
	if (bm & (1ul << 0)) {
     924:	07c3      	lsls	r3, r0, #31
     926:	d50a      	bpl.n	93e <_gclk_init_generators_by_fref+0x1a>
}

static inline void hri_gclk_write_GENDIV_reg(const void *const hw, hri_gclk_gendiv_reg_t data)
{
	GCLK_CRITICAL_SECTION_ENTER();
	((Gclk *)hw)->GENDIV.reg = data;
     928:	4b05      	ldr	r3, [pc, #20]	; (940 <_gclk_init_generators_by_fref+0x1c>)
     92a:	2280      	movs	r2, #128	; 0x80
     92c:	0052      	lsls	r2, r2, #1
     92e:	609a      	str	r2, [r3, #8]
	((Gclk *)hw)->GENCTRL.reg = data;
     930:	2283      	movs	r2, #131	; 0x83
     932:	0252      	lsls	r2, r2, #9
     934:	605a      	str	r2, [r3, #4]
	while (((const Gclk *)hw)->STATUS.bit.SYNCBUSY)
     936:	4b02      	ldr	r3, [pc, #8]	; (940 <_gclk_init_generators_by_fref+0x1c>)
     938:	785b      	ldrb	r3, [r3, #1]
     93a:	09db      	lsrs	r3, r3, #7
     93c:	d1fb      	bne.n	936 <_gclk_init_generators_by_fref+0x12>
		        | (CONF_GCLK_GEN_8_DIVSEL << GCLK_GENCTRL_DIVSEL_Pos) | (CONF_GCLK_GEN_8_OE << GCLK_GENCTRL_OE_Pos)
		        | (CONF_GCLK_GEN_8_OOV << GCLK_GENCTRL_OOV_Pos) | (CONF_GCLK_GEN_8_IDC << GCLK_GENCTRL_IDC_Pos)
		        | (CONF_GCLK_GENERATOR_8_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_8_SRC | GCLK_GENCTRL_ID(8));
	}
#endif
}
     93e:	4770      	bx	lr
     940:	40000c00 	.word	0x40000c00

00000944 <_pm_init>:
}

static inline void hri_pm_set_CPUSEL_CPUDIV_bf(const void *const hw, hri_pm_cpusel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->CPUSEL.reg |= PM_CPUSEL_CPUDIV(mask);
     944:	4b06      	ldr	r3, [pc, #24]	; (960 <_pm_init+0x1c>)
     946:	7a1a      	ldrb	r2, [r3, #8]
     948:	b2d2      	uxtb	r2, r2
     94a:	721a      	strb	r2, [r3, #8]
}

static inline void hri_pm_set_APBASEL_APBADIV_bf(const void *const hw, hri_pm_apbasel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBASEL.reg |= PM_APBASEL_APBADIV(mask);
     94c:	7a5a      	ldrb	r2, [r3, #9]
     94e:	b2d2      	uxtb	r2, r2
     950:	725a      	strb	r2, [r3, #9]
}

static inline void hri_pm_set_APBBSEL_APBBDIV_bf(const void *const hw, hri_pm_apbbsel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBBSEL.reg |= PM_APBBSEL_APBBDIV(mask);
     952:	7a9a      	ldrb	r2, [r3, #10]
     954:	b2d2      	uxtb	r2, r2
     956:	729a      	strb	r2, [r3, #10]
}

static inline void hri_pm_set_APBCSEL_APBCDIV_bf(const void *const hw, hri_pm_apbcsel_reg_t mask)
{
	PM_CRITICAL_SECTION_ENTER();
	((Pm *)hw)->APBCSEL.reg |= PM_APBCSEL_APBCDIV(mask);
     958:	7ada      	ldrb	r2, [r3, #11]
     95a:	b2d2      	uxtb	r2, r2
     95c:	72da      	strb	r2, [r3, #11]
{
	hri_pm_set_CPUSEL_CPUDIV_bf(PM, CONF_CPU_DIV);
	hri_pm_set_APBASEL_APBADIV_bf(PM, CONF_APBA_DIV);
	hri_pm_set_APBBSEL_APBBDIV_bf(PM, CONF_APBB_DIV);
	hri_pm_set_APBCSEL_APBCDIV_bf(PM, CONF_APBC_DIV);
}
     95e:	4770      	bx	lr
     960:	40000400 	.word	0x40000400

00000964 <_sercom_get_hardware_index>:
{
#ifdef _UNIT_TEST_
	return ((uint32_t)hw - (uint32_t)SERCOM0) / sizeof(Sercom);
#endif

	return ((uint32_t)hw - (uint32_t)SERCOM0) >> 10;
     964:	4b02      	ldr	r3, [pc, #8]	; (970 <_sercom_get_hardware_index+0xc>)
     966:	469c      	mov	ip, r3
     968:	4460      	add	r0, ip
     96a:	0a80      	lsrs	r0, r0, #10
     96c:	b2c0      	uxtb	r0, r0
}
     96e:	4770      	bx	lr
     970:	bdfff800 	.word	0xbdfff800

00000974 <_get_sercom_index>:
 * \param[in] hw The pointer to hardware instance

 * \return The ordinal number of the given sercom hardware instance
 */
static uint8_t _get_sercom_index(const void *const hw)
{
     974:	b510      	push	{r4, lr}
	uint8_t sercom_offset = _sercom_get_hardware_index(hw);
     976:	4b0b      	ldr	r3, [pc, #44]	; (9a4 <_get_sercom_index+0x30>)
     978:	4798      	blx	r3
     97a:	0002      	movs	r2, r0
	uint8_t i;

	for (i = 0; i < ARRAY_SIZE(_usarts); i++) {
     97c:	2000      	movs	r0, #0
     97e:	2800      	cmp	r0, #0
     980:	d006      	beq.n	990 <_get_sercom_index+0x1c>
		if (_usarts[i].number == sercom_offset) {
			return i;
		}
	}

	ASSERT(false);
     982:	4a09      	ldr	r2, [pc, #36]	; (9a8 <_get_sercom_index+0x34>)
     984:	4909      	ldr	r1, [pc, #36]	; (9ac <_get_sercom_index+0x38>)
     986:	2000      	movs	r0, #0
     988:	4b09      	ldr	r3, [pc, #36]	; (9b0 <_get_sercom_index+0x3c>)
     98a:	4798      	blx	r3
	return 0;
     98c:	2000      	movs	r0, #0
}
     98e:	bd10      	pop	{r4, pc}
		if (_usarts[i].number == sercom_offset) {
     990:	0083      	lsls	r3, r0, #2
     992:	181b      	adds	r3, r3, r0
     994:	0099      	lsls	r1, r3, #2
     996:	4b07      	ldr	r3, [pc, #28]	; (9b4 <_get_sercom_index+0x40>)
     998:	5ccb      	ldrb	r3, [r1, r3]
     99a:	429a      	cmp	r2, r3
     99c:	d0f7      	beq.n	98e <_get_sercom_index+0x1a>
	for (i = 0; i < ARRAY_SIZE(_usarts); i++) {
     99e:	3001      	adds	r0, #1
     9a0:	b2c0      	uxtb	r0, r0
     9a2:	e7ec      	b.n	97e <_get_sercom_index+0xa>
     9a4:	00000965 	.word	0x00000965
     9a8:	0000023a 	.word	0x0000023a
     9ac:	00002f64 	.word	0x00002f64
     9b0:	000006c9 	.word	0x000006c9
     9b4:	00002f14 	.word	0x00002f14

000009b8 <_usart_init>:
 * \param[in] hw The pointer to hardware instance
 *
 * \return The status of initialization
 */
static int32_t _usart_init(void *const hw)
{
     9b8:	b570      	push	{r4, r5, r6, lr}
     9ba:	0004      	movs	r4, r0
	uint8_t i = _get_sercom_index(hw);
     9bc:	4b38      	ldr	r3, [pc, #224]	; (aa0 <_usart_init+0xe8>)
     9be:	4798      	blx	r3
	};
}

static inline bool hri_sercomusart_is_syncing(const void *const hw, hri_sercomusart_syncbusy_reg_t reg)
{
	return ((Sercom *)hw)->USART.SYNCBUSY.reg & reg;
     9c0:	69e3      	ldr	r3, [r4, #28]

	if (!hri_sercomusart_is_syncing(hw, SERCOM_USART_SYNCBUSY_SWRST)) {
     9c2:	07db      	lsls	r3, r3, #31
     9c4:	d41d      	bmi.n	a02 <_usart_init+0x4a>
		uint32_t mode = _usarts[i].ctrl_a & SERCOM_USART_CTRLA_MODE_Msk;
     9c6:	0083      	lsls	r3, r0, #2
     9c8:	181b      	adds	r3, r3, r0
     9ca:	009a      	lsls	r2, r3, #2
     9cc:	4b35      	ldr	r3, [pc, #212]	; (aa4 <_usart_init+0xec>)
     9ce:	189b      	adds	r3, r3, r2
     9d0:	685a      	ldr	r2, [r3, #4]
     9d2:	231c      	movs	r3, #28
     9d4:	401a      	ands	r2, r3
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
     9d6:	69e3      	ldr	r3, [r4, #28]
     9d8:	079b      	lsls	r3, r3, #30
     9da:	d1fc      	bne.n	9d6 <_usart_init+0x1e>
static inline hri_sercomusart_ctrla_reg_t hri_sercomusart_get_CTRLA_reg(const void *const           hw,
                                                                        hri_sercomusart_ctrla_reg_t mask)
{
	uint32_t tmp;
	hri_sercomusart_wait_for_sync(hw, SERCOM_USART_SYNCBUSY_SWRST | SERCOM_USART_SYNCBUSY_ENABLE);
	tmp = ((Sercom *)hw)->USART.CTRLA.reg;
     9dc:	6823      	ldr	r3, [r4, #0]
		if (hri_sercomusart_get_CTRLA_reg(hw, SERCOM_USART_CTRLA_ENABLE)) {
     9de:	079b      	lsls	r3, r3, #30
     9e0:	d509      	bpl.n	9f6 <_usart_init+0x3e>
	((Sercom *)hw)->USART.CTRLA.reg &= ~SERCOM_USART_CTRLA_ENABLE;
     9e2:	6823      	ldr	r3, [r4, #0]
     9e4:	2102      	movs	r1, #2
     9e6:	438b      	bics	r3, r1
     9e8:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
     9ea:	69e3      	ldr	r3, [r4, #28]
     9ec:	079b      	lsls	r3, r3, #30
     9ee:	d1fc      	bne.n	9ea <_usart_init+0x32>
     9f0:	69e3      	ldr	r3, [r4, #28]
     9f2:	079b      	lsls	r3, r3, #30
     9f4:	d4fc      	bmi.n	9f0 <_usart_init+0x38>
			hri_sercomusart_clear_CTRLA_ENABLE_bit(hw);
			hri_sercomusart_wait_for_sync(hw, SERCOM_USART_SYNCBUSY_ENABLE);
		}
		hri_sercomusart_write_CTRLA_reg(hw, SERCOM_USART_CTRLA_SWRST | mode);
     9f6:	2301      	movs	r3, #1
     9f8:	4313      	orrs	r3, r2
}

static inline void hri_sercomusart_write_CTRLA_reg(const void *const hw, hri_sercomusart_ctrla_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->USART.CTRLA.reg = data;
     9fa:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
     9fc:	69e3      	ldr	r3, [r4, #28]
     9fe:	079b      	lsls	r3, r3, #30
     a00:	d1fc      	bne.n	9fc <_usart_init+0x44>
     a02:	69e3      	ldr	r3, [r4, #28]
     a04:	07db      	lsls	r3, r3, #31
     a06:	d4fc      	bmi.n	a02 <_usart_init+0x4a>
	}
	hri_sercomusart_wait_for_sync(hw, SERCOM_USART_SYNCBUSY_SWRST);

	hri_sercomusart_write_CTRLA_reg(hw, _usarts[i].ctrl_a);
     a08:	0083      	lsls	r3, r0, #2
     a0a:	181b      	adds	r3, r3, r0
     a0c:	009a      	lsls	r2, r3, #2
     a0e:	4b25      	ldr	r3, [pc, #148]	; (aa4 <_usart_init+0xec>)
     a10:	189b      	adds	r3, r3, r2
     a12:	685b      	ldr	r3, [r3, #4]
	((Sercom *)hw)->USART.CTRLA.reg = data;
     a14:	6023      	str	r3, [r4, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
     a16:	69e3      	ldr	r3, [r4, #28]
     a18:	079b      	lsls	r3, r3, #30
     a1a:	d1fc      	bne.n	a16 <_usart_init+0x5e>
	hri_sercomusart_write_CTRLB_reg(hw, _usarts[i].ctrl_b);
     a1c:	0083      	lsls	r3, r0, #2
     a1e:	181b      	adds	r3, r3, r0
     a20:	009a      	lsls	r2, r3, #2
     a22:	4b20      	ldr	r3, [pc, #128]	; (aa4 <_usart_init+0xec>)
     a24:	189b      	adds	r3, r3, r2
     a26:	689b      	ldr	r3, [r3, #8]
}

static inline void hri_sercomusart_write_CTRLB_reg(const void *const hw, hri_sercomusart_ctrlb_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->USART.CTRLB.reg = data;
     a28:	6063      	str	r3, [r4, #4]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
     a2a:	69e3      	ldr	r3, [r4, #28]
     a2c:	075b      	lsls	r3, r3, #29
     a2e:	d1fc      	bne.n	a2a <_usart_init+0x72>
	if ((_usarts[i].ctrl_a & SERCOM_USART_CTRLA_SAMPR(0x1)) || (_usarts[i].ctrl_a & SERCOM_USART_CTRLA_SAMPR(0x3))) {
     a30:	0083      	lsls	r3, r0, #2
     a32:	181b      	adds	r3, r3, r0
     a34:	009a      	lsls	r2, r3, #2
     a36:	4b1b      	ldr	r3, [pc, #108]	; (aa4 <_usart_init+0xec>)
     a38:	189b      	adds	r3, r3, r2
     a3a:	685b      	ldr	r3, [r3, #4]
     a3c:	049a      	lsls	r2, r3, #18
     a3e:	d40b      	bmi.n	a58 <_usart_init+0xa0>
     a40:	22c0      	movs	r2, #192	; 0xc0
     a42:	01d2      	lsls	r2, r2, #7
     a44:	4213      	tst	r3, r2
     a46:	d107      	bne.n	a58 <_usart_init+0xa0>
		((Sercom *)hw)->USART.BAUD.FRAC.BAUD = _usarts[i].baud;
		((Sercom *)hw)->USART.BAUD.FRAC.FP   = _usarts[i].fractional;
	} else {
		hri_sercomusart_write_BAUD_reg(hw, _usarts[i].baud);
     a48:	0083      	lsls	r3, r0, #2
     a4a:	181b      	adds	r3, r3, r0
     a4c:	009a      	lsls	r2, r3, #2
     a4e:	4b15      	ldr	r3, [pc, #84]	; (aa4 <_usart_init+0xec>)
     a50:	189b      	adds	r3, r3, r2
     a52:	899b      	ldrh	r3, [r3, #12]
}

static inline void hri_sercomusart_write_BAUD_reg(const void *const hw, hri_sercomusart_baud_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->USART.BAUD.reg = data;
     a54:	81a3      	strh	r3, [r4, #12]
     a56:	e015      	b.n	a84 <_usart_init+0xcc>
		((Sercom *)hw)->USART.BAUD.FRAC.BAUD = _usarts[i].baud;
     a58:	0083      	lsls	r3, r0, #2
     a5a:	181b      	adds	r3, r3, r0
     a5c:	009a      	lsls	r2, r3, #2
     a5e:	4911      	ldr	r1, [pc, #68]	; (aa4 <_usart_init+0xec>)
     a60:	1889      	adds	r1, r1, r2
     a62:	898a      	ldrh	r2, [r1, #12]
     a64:	89a3      	ldrh	r3, [r4, #12]
     a66:	04d2      	lsls	r2, r2, #19
     a68:	0cd2      	lsrs	r2, r2, #19
     a6a:	0b5b      	lsrs	r3, r3, #13
     a6c:	035b      	lsls	r3, r3, #13
     a6e:	4313      	orrs	r3, r2
     a70:	81a3      	strh	r3, [r4, #12]
		((Sercom *)hw)->USART.BAUD.FRAC.FP   = _usarts[i].fractional;
     a72:	7b8b      	ldrb	r3, [r1, #14]
     a74:	2207      	movs	r2, #7
     a76:	401a      	ands	r2, r3
     a78:	89a3      	ldrh	r3, [r4, #12]
     a7a:	0352      	lsls	r2, r2, #13
     a7c:	04db      	lsls	r3, r3, #19
     a7e:	0cdb      	lsrs	r3, r3, #19
     a80:	4313      	orrs	r3, r2
     a82:	81a3      	strh	r3, [r4, #12]
	}

	hri_sercomusart_write_RXPL_reg(hw, _usarts[i].rxpl);
     a84:	4a07      	ldr	r2, [pc, #28]	; (aa4 <_usart_init+0xec>)
     a86:	0083      	lsls	r3, r0, #2
     a88:	181d      	adds	r5, r3, r0
     a8a:	00a9      	lsls	r1, r5, #2
     a8c:	000d      	movs	r5, r1
     a8e:	1851      	adds	r1, r2, r1
     a90:	7bc9      	ldrb	r1, [r1, #15]
}

static inline void hri_sercomusart_write_RXPL_reg(const void *const hw, hri_sercomusart_rxpl_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->USART.RXPL.reg = data;
     a92:	73a1      	strb	r1, [r4, #14]
	hri_sercomusart_write_DBGCTRL_reg(hw, _usarts[i].debug_ctrl);
     a94:	1952      	adds	r2, r2, r5
     a96:	7c12      	ldrb	r2, [r2, #16]
}

static inline void hri_sercomusart_write_DBGCTRL_reg(const void *const hw, hri_sercomusart_dbgctrl_reg_t data)
{
	SERCOM_CRITICAL_SECTION_ENTER();
	((Sercom *)hw)->USART.DBGCTRL.reg = data;
     a98:	2330      	movs	r3, #48	; 0x30
     a9a:	54e2      	strb	r2, [r4, r3]

	return ERR_NONE;
}
     a9c:	2000      	movs	r0, #0
     a9e:	bd70      	pop	{r4, r5, r6, pc}
     aa0:	00000975 	.word	0x00000975
     aa4:	00002f14 	.word	0x00002f14

00000aa8 <_usart_sync_init>:
{
     aa8:	b570      	push	{r4, r5, r6, lr}
     aaa:	0005      	movs	r5, r0
     aac:	000c      	movs	r4, r1
	ASSERT(device);
     aae:	1e43      	subs	r3, r0, #1
     ab0:	4198      	sbcs	r0, r3
     ab2:	b2c0      	uxtb	r0, r0
     ab4:	22b4      	movs	r2, #180	; 0xb4
     ab6:	4904      	ldr	r1, [pc, #16]	; (ac8 <_usart_sync_init+0x20>)
     ab8:	4b04      	ldr	r3, [pc, #16]	; (acc <_usart_sync_init+0x24>)
     aba:	4798      	blx	r3
	device->hw = hw;
     abc:	602c      	str	r4, [r5, #0]
	return _usart_init(hw);
     abe:	0020      	movs	r0, r4
     ac0:	4b03      	ldr	r3, [pc, #12]	; (ad0 <_usart_sync_init+0x28>)
     ac2:	4798      	blx	r3
}
     ac4:	bd70      	pop	{r4, r5, r6, pc}
     ac6:	46c0      	nop			; (mov r8, r8)
     ac8:	00002f64 	.word	0x00002f64
     acc:	000006c9 	.word	0x000006c9
     ad0:	000009b9 	.word	0x000009b9

00000ad4 <_usart_sync_enable>:
	hri_sercomusart_set_CTRLA_ENABLE_bit(device->hw);
     ad4:	6802      	ldr	r2, [r0, #0]
	((Sercom *)hw)->USART.CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
     ad6:	6813      	ldr	r3, [r2, #0]
     ad8:	2102      	movs	r1, #2
     ada:	430b      	orrs	r3, r1
     adc:	6013      	str	r3, [r2, #0]
	while (((Sercom *)hw)->USART.SYNCBUSY.reg & reg) {
     ade:	69d3      	ldr	r3, [r2, #28]
     ae0:	079b      	lsls	r3, r3, #30
     ae2:	d1fc      	bne.n	ade <_usart_sync_enable+0xa>
}
     ae4:	4770      	bx	lr

00000ae6 <_usart_sync_write_byte>:
	hri_sercomusart_write_DATA_reg(device->hw, data);
     ae6:	6803      	ldr	r3, [r0, #0]
     ae8:	b289      	uxth	r1, r1
	((Sercom *)hw)->USART.DATA.reg = data;
     aea:	8519      	strh	r1, [r3, #40]	; 0x28
}
     aec:	4770      	bx	lr

00000aee <_usart_sync_read_byte>:
	return hri_sercomusart_read_DATA_reg(device->hw);
     aee:	6803      	ldr	r3, [r0, #0]
	return ((Sercom *)hw)->USART.DATA.reg;
     af0:	8d18      	ldrh	r0, [r3, #40]	; 0x28
     af2:	b2c0      	uxtb	r0, r0
}
     af4:	4770      	bx	lr

00000af6 <_usart_sync_is_ready_to_send>:
	return hri_sercomusart_get_interrupt_DRE_bit(device->hw);
     af6:	6803      	ldr	r3, [r0, #0]
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_DRE) >> SERCOM_USART_INTFLAG_DRE_Pos;
     af8:	7e18      	ldrb	r0, [r3, #24]
     afa:	2301      	movs	r3, #1
     afc:	4018      	ands	r0, r3
}
     afe:	4770      	bx	lr

00000b00 <_usart_sync_is_transmit_done>:
	return hri_sercomusart_get_interrupt_TXC_bit(device->hw);
     b00:	6803      	ldr	r3, [r0, #0]
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_TXC) >> SERCOM_USART_INTFLAG_TXC_Pos;
     b02:	7e1b      	ldrb	r3, [r3, #24]
     b04:	085b      	lsrs	r3, r3, #1
     b06:	2001      	movs	r0, #1
     b08:	4018      	ands	r0, r3
}
     b0a:	4770      	bx	lr

00000b0c <_usart_sync_is_byte_received>:
	return hri_sercomusart_get_interrupt_RXC_bit(device->hw);
     b0c:	6803      	ldr	r3, [r0, #0]
	return (((Sercom *)hw)->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_RXC) >> SERCOM_USART_INTFLAG_RXC_Pos;
     b0e:	7e1b      	ldrb	r3, [r3, #24]
     b10:	089b      	lsrs	r3, r3, #2
     b12:	2001      	movs	r0, #1
     b14:	4018      	ands	r0, r3
}
     b16:	4770      	bx	lr

00000b18 <_sysctrl_init_sources>:
}

static inline hri_sysctrl_osc8m_reg_t hri_sysctrl_read_OSC8M_CALIB_bf(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Sysctrl *)hw)->OSC8M.reg;
     b18:	4a0e      	ldr	r2, [pc, #56]	; (b54 <_sysctrl_init_sources+0x3c>)
     b1a:	6a11      	ldr	r1, [r2, #32]
	tmp = (tmp & SYSCTRL_OSC8M_CALIB_Msk) >> SYSCTRL_OSC8M_CALIB_Pos;
     b1c:	0c09      	lsrs	r1, r1, #16
}

static inline hri_sysctrl_osc8m_reg_t hri_sysctrl_read_OSC8M_FRANGE_bf(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Sysctrl *)hw)->OSC8M.reg;
     b1e:	6a13      	ldr	r3, [r2, #32]

#if CONF_OSC8M_CONFIG == 1
	calib = hri_sysctrl_read_OSC8M_CALIB_bf(hw);

	hri_sysctrl_write_OSC8M_reg(hw,
	                            SYSCTRL_OSC8M_FRANGE(hri_sysctrl_read_OSC8M_FRANGE_bf(hw)) |
     b20:	0f9b      	lsrs	r3, r3, #30
     b22:	079b      	lsls	r3, r3, #30
#if CONF_OSC8M_OVERWRITE_CALIBRATION == 1
	                                SYSCTRL_OSC8M_CALIB(CONF_OSC8M_CALIB) |
#else
	                                SYSCTRL_OSC8M_CALIB(calib) |
     b24:	0409      	lsls	r1, r1, #16
     b26:	480c      	ldr	r0, [pc, #48]	; (b58 <_sysctrl_init_sources+0x40>)
     b28:	4001      	ands	r1, r0
#endif
	                                SYSCTRL_OSC8M_PRESC(CONF_OSC8M_PRESC)
	                                | (CONF_OSC8M_RUNSTDBY << SYSCTRL_OSC8M_RUNSTDBY_Pos)
     b2a:	430b      	orrs	r3, r1
	hri_sysctrl_write_OSC8M_reg(hw,
     b2c:	2102      	movs	r1, #2
     b2e:	430b      	orrs	r3, r1
}

static inline void hri_sysctrl_write_OSC8M_reg(const void *const hw, hri_sysctrl_osc8m_reg_t data)
{
	SYSCTRL_CRITICAL_SECTION_ENTER();
	((Sysctrl *)hw)->OSC8M.reg = data;
     b30:	6213      	str	r3, [r2, #32]
	((Sysctrl *)hw)->OSC32K.reg |= SYSCTRL_OSC32K_ENABLE;
     b32:	6993      	ldr	r3, [r2, #24]
     b34:	430b      	orrs	r3, r1
     b36:	6193      	str	r3, [r2, #24]
	tmp = ((Sysctrl *)hw)->OSCULP32K.reg;
     b38:	7f13      	ldrb	r3, [r2, #28]
	tmp = (tmp & SYSCTRL_OSCULP32K_CALIB_Msk) >> SYSCTRL_OSCULP32K_CALIB_Pos;
     b3a:	311d      	adds	r1, #29
     b3c:	400b      	ands	r3, r1
	((Sysctrl *)hw)->OSCULP32K.reg = data;
     b3e:	7713      	strb	r3, [r2, #28]
	return (((Sysctrl *)hw)->PCLKSR.reg & SYSCTRL_PCLKSR_OSC8MRDY) >> SYSCTRL_PCLKSR_OSC8MRDY_Pos;
     b40:	4b04      	ldr	r3, [pc, #16]	; (b54 <_sysctrl_init_sources+0x3c>)
     b42:	68db      	ldr	r3, [r3, #12]
#endif
#endif

#if CONF_OSC8M_CONFIG == 1
#if CONF_OSC8M_ENABLE == 1
	while (!hri_sysctrl_get_PCLKSR_OSC8MRDY_bit(hw))
     b44:	071b      	lsls	r3, r3, #28
     b46:	d5fb      	bpl.n	b40 <_sysctrl_init_sources+0x28>
	((Sysctrl *)hw)->OSC8M.reg |= SYSCTRL_OSC8M_ONDEMAND;
     b48:	4a02      	ldr	r2, [pc, #8]	; (b54 <_sysctrl_init_sources+0x3c>)
     b4a:	6a13      	ldr	r3, [r2, #32]
     b4c:	2180      	movs	r1, #128	; 0x80
     b4e:	430b      	orrs	r3, r1
     b50:	6213      	str	r3, [r2, #32]
	hri_sysctrl_set_OSC8M_ONDEMAND_bit(hw);
#endif
#endif

	(void)calib, (void)hw;
}
     b52:	4770      	bx	lr
     b54:	40000800 	.word	0x40000800
     b58:	0fff0000 	.word	0x0fff0000

00000b5c <_sysctrl_init_referenced_generators>:
	((Sysctrl *)hw)->OSC32K.reg &= ~SYSCTRL_OSC32K_ENABLE;
     b5c:	4a02      	ldr	r2, [pc, #8]	; (b68 <_sysctrl_init_referenced_generators+0xc>)
     b5e:	6993      	ldr	r3, [r2, #24]
     b60:	2102      	movs	r1, #2
     b62:	438b      	bics	r3, r1
     b64:	6193      	str	r3, [r2, #24]
	/* Disable after all possible configurations needs sync written. */
	hri_sysctrl_clear_OSC32K_ENABLE_bit(hw);
#endif

	(void)hw;
}
     b66:	4770      	bx	lr
     b68:	40000800 	.word	0x40000800

00000b6c <_system_time_init>:
 * \brief Initialize system time module
 */
void _system_time_init(void *const hw)
{
	(void)hw;
	SysTick->LOAD = (0xFFFFFF << SysTick_LOAD_RELOAD_Pos);
     b6c:	4b02      	ldr	r3, [pc, #8]	; (b78 <_system_time_init+0xc>)
     b6e:	4a03      	ldr	r2, [pc, #12]	; (b7c <_system_time_init+0x10>)
     b70:	605a      	str	r2, [r3, #4]
	SysTick->CTRL = (1 << SysTick_CTRL_ENABLE_Pos) | (CONF_SYSTICK_TICKINT << SysTick_CTRL_TICKINT_Pos)
     b72:	2205      	movs	r2, #5
     b74:	601a      	str	r2, [r3, #0]
	                | (1 << SysTick_CTRL_CLKSOURCE_Pos);
}
     b76:	4770      	bx	lr
     b78:	e000e010 	.word	0xe000e010
     b7c:	00ffffff 	.word	0x00ffffff

00000b80 <_delay_init>:
/**
 * \brief Initialize delay functionality
 */
void _delay_init(void *const hw)
{
     b80:	b510      	push	{r4, lr}
	_system_time_init(hw);
     b82:	4b01      	ldr	r3, [pc, #4]	; (b88 <_delay_init+0x8>)
     b84:	4798      	blx	r3
}
     b86:	bd10      	pop	{r4, pc}
     b88:	00000b6d 	.word	0x00000b6d

00000b8c <_delay_cycles>:
 * \brief Delay loop to delay n number of cycles
 */
void _delay_cycles(void *const hw, uint32_t cycles)
{
	(void)hw;
	uint8_t  n   = cycles >> 24;
     b8c:	0e08      	lsrs	r0, r1, #24
	uint32_t buf = cycles;

	while (n--) {
     b8e:	e00b      	b.n	ba8 <_delay_cycles+0x1c>
		SysTick->LOAD = 0xFFFFFF;
     b90:	4b0b      	ldr	r3, [pc, #44]	; (bc0 <_delay_cycles+0x34>)
     b92:	480c      	ldr	r0, [pc, #48]	; (bc4 <_delay_cycles+0x38>)
     b94:	6058      	str	r0, [r3, #4]
		SysTick->VAL  = 0xFFFFFF;
     b96:	6098      	str	r0, [r3, #8]
		while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk))
     b98:	4b09      	ldr	r3, [pc, #36]	; (bc0 <_delay_cycles+0x34>)
     b9a:	681b      	ldr	r3, [r3, #0]
     b9c:	03db      	lsls	r3, r3, #15
     b9e:	d5fb      	bpl.n	b98 <_delay_cycles+0xc>
			;
		buf -= 0xFFFFFF;
     ba0:	4b09      	ldr	r3, [pc, #36]	; (bc8 <_delay_cycles+0x3c>)
     ba2:	469c      	mov	ip, r3
     ba4:	4461      	add	r1, ip
	while (n--) {
     ba6:	0010      	movs	r0, r2
     ba8:	1e42      	subs	r2, r0, #1
     baa:	b2d2      	uxtb	r2, r2
     bac:	2800      	cmp	r0, #0
     bae:	d1ef      	bne.n	b90 <_delay_cycles+0x4>
	}

	SysTick->LOAD = buf;
     bb0:	4b03      	ldr	r3, [pc, #12]	; (bc0 <_delay_cycles+0x34>)
     bb2:	6059      	str	r1, [r3, #4]
	SysTick->VAL  = buf;
     bb4:	6099      	str	r1, [r3, #8]
	while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk))
     bb6:	4b02      	ldr	r3, [pc, #8]	; (bc0 <_delay_cycles+0x34>)
     bb8:	681b      	ldr	r3, [r3, #0]
     bba:	03db      	lsls	r3, r3, #15
     bbc:	d5fb      	bpl.n	bb6 <_delay_cycles+0x2a>
		;
}
     bbe:	4770      	bx	lr
     bc0:	e000e010 	.word	0xe000e010
     bc4:	00ffffff 	.word	0x00ffffff
     bc8:	ff000001 	.word	0xff000001

00000bcc <main>:
#include <atmel_start.h>
#include "adc_read.h"
int main(void)
{
     bcc:	b5f0      	push	{r4, r5, r6, r7, lr}
     bce:	46ce      	mov	lr, r9
     bd0:	b500      	push	{lr}
     bd2:	b086      	sub	sp, #24
	int ret=0;
	/* Initializes MCU, drivers and middleware */
	atmel_start_init();
     bd4:	4b22      	ldr	r3, [pc, #136]	; (c60 <main+0x94>)
     bd6:	4798      	blx	r3
	

	/* Replace with your application code */
	adc_enable();
     bd8:	4b22      	ldr	r3, [pc, #136]	; (c64 <main+0x98>)
     bda:	4798      	blx	r3
     bdc:	e005      	b.n	bea <main+0x1e>
			delay_ms(250);
			
		}
		else
		{
			printf("Okuma Basarisiz");
     bde:	4822      	ldr	r0, [pc, #136]	; (c68 <main+0x9c>)
     be0:	4b22      	ldr	r3, [pc, #136]	; (c6c <main+0xa0>)
     be2:	4798      	blx	r3
		}
		delay_ms(250);
     be4:	20fa      	movs	r0, #250	; 0xfa
     be6:	4b22      	ldr	r3, [pc, #136]	; (c70 <main+0xa4>)
     be8:	4798      	blx	r3
		ret=ADC_Read(&adc_read);
     bea:	a803      	add	r0, sp, #12
     bec:	4b21      	ldr	r3, [pc, #132]	; (c74 <main+0xa8>)
     bee:	4798      	blx	r3
		if(ret==0){
     bf0:	2800      	cmp	r0, #0
     bf2:	d1f4      	bne.n	bde <main+0x12>
			float PA06_ADC_volts = (adc_read.PA06_ADC_value * 5.0) / 4.095;
     bf4:	ad03      	add	r5, sp, #12
     bf6:	2304      	movs	r3, #4
     bf8:	5ee8      	ldrsh	r0, [r5, r3]
     bfa:	4b1f      	ldr	r3, [pc, #124]	; (c78 <main+0xac>)
     bfc:	4699      	mov	r9, r3
     bfe:	4798      	blx	r3
     c00:	4c1e      	ldr	r4, [pc, #120]	; (c7c <main+0xb0>)
     c02:	2200      	movs	r2, #0
     c04:	4b1e      	ldr	r3, [pc, #120]	; (c80 <main+0xb4>)
     c06:	47a0      	blx	r4
     c08:	4f1e      	ldr	r7, [pc, #120]	; (c84 <main+0xb8>)
     c0a:	4a1f      	ldr	r2, [pc, #124]	; (c88 <main+0xbc>)
     c0c:	4b1f      	ldr	r3, [pc, #124]	; (c8c <main+0xc0>)
     c0e:	47b8      	blx	r7
     c10:	4e1f      	ldr	r6, [pc, #124]	; (c90 <main+0xc4>)
     c12:	47b0      	blx	r6
     c14:	9001      	str	r0, [sp, #4]
			float PA07_ADC_volts = (adc_read.PA07_ADC_value * 5.0) / 4.095;
     c16:	2306      	movs	r3, #6
     c18:	5ee8      	ldrsh	r0, [r5, r3]
     c1a:	47c8      	blx	r9
     c1c:	2200      	movs	r2, #0
     c1e:	4b18      	ldr	r3, [pc, #96]	; (c80 <main+0xb4>)
     c20:	47a0      	blx	r4
     c22:	4a19      	ldr	r2, [pc, #100]	; (c88 <main+0xbc>)
     c24:	4b19      	ldr	r3, [pc, #100]	; (c8c <main+0xc0>)
     c26:	47b8      	blx	r7
     c28:	47b0      	blx	r6
     c2a:	1c07      	adds	r7, r0, #0
			printf("PA06volts=%d\r\n",PA06_ADC_volts);
     c2c:	4e19      	ldr	r6, [pc, #100]	; (c94 <main+0xc8>)
     c2e:	9801      	ldr	r0, [sp, #4]
     c30:	47b0      	blx	r6
     c32:	0002      	movs	r2, r0
     c34:	000b      	movs	r3, r1
     c36:	4818      	ldr	r0, [pc, #96]	; (c98 <main+0xcc>)
     c38:	4c0c      	ldr	r4, [pc, #48]	; (c6c <main+0xa0>)
     c3a:	47a0      	blx	r4
			printf("PA07volst=%d\r\n",PA07_ADC_volts);
     c3c:	1c38      	adds	r0, r7, #0
     c3e:	47b0      	blx	r6
     c40:	0002      	movs	r2, r0
     c42:	000b      	movs	r3, r1
     c44:	4815      	ldr	r0, [pc, #84]	; (c9c <main+0xd0>)
     c46:	47a0      	blx	r4
			printf("PA06=%03d\r\n",adc_read.PA06_ADC_value);
     c48:	2304      	movs	r3, #4
     c4a:	5ee9      	ldrsh	r1, [r5, r3]
     c4c:	4814      	ldr	r0, [pc, #80]	; (ca0 <main+0xd4>)
     c4e:	47a0      	blx	r4
			printf("PA07=%03d\r\n",adc_read.PA07_ADC_value);
     c50:	2306      	movs	r3, #6
     c52:	5ee9      	ldrsh	r1, [r5, r3]
     c54:	4813      	ldr	r0, [pc, #76]	; (ca4 <main+0xd8>)
     c56:	47a0      	blx	r4
			delay_ms(250);
     c58:	20fa      	movs	r0, #250	; 0xfa
     c5a:	4b05      	ldr	r3, [pc, #20]	; (c70 <main+0xa4>)
     c5c:	4798      	blx	r3
     c5e:	e7c1      	b.n	be4 <main+0x18>
     c60:	00000161 	.word	0x00000161
     c64:	00000115 	.word	0x00000115
     c68:	00002fb8 	.word	0x00002fb8
     c6c:	00001eb1 	.word	0x00001eb1
     c70:	000004e1 	.word	0x000004e1
     c74:	00000129 	.word	0x00000129
     c78:	00001be1 	.word	0x00001be1
     c7c:	000016e1 	.word	0x000016e1
     c80:	40140000 	.word	0x40140000
     c84:	00001079 	.word	0x00001079
     c88:	ae147ae1 	.word	0xae147ae1
     c8c:	40106147 	.word	0x40106147
     c90:	00001d09 	.word	0x00001d09
     c94:	00001c65 	.word	0x00001c65
     c98:	00002f80 	.word	0x00002f80
     c9c:	00002f90 	.word	0x00002f90
     ca0:	00002fa0 	.word	0x00002fa0
     ca4:	00002fac 	.word	0x00002fac

00000ca8 <_read>:
#include <stdio.h>

int __attribute__((weak)) _read(int file, char *ptr, int len); /* Remove GCC compiler warning */

int __attribute__((weak)) _read(int file, char *ptr, int len)
{
     ca8:	b510      	push	{r4, lr}
     caa:	000b      	movs	r3, r1
	int n = 0;

	if (file != 0) {
     cac:	2800      	cmp	r0, #0
     cae:	d109      	bne.n	cc4 <_read+0x1c>
		return -1;
	}

	n = stdio_io_read((uint8_t *)ptr, len);
     cb0:	0011      	movs	r1, r2
     cb2:	0018      	movs	r0, r3
     cb4:	4b05      	ldr	r3, [pc, #20]	; (ccc <_read+0x24>)
     cb6:	4798      	blx	r3
	if (n < 0) {
     cb8:	2800      	cmp	r0, #0
     cba:	db00      	blt.n	cbe <_read+0x16>
		return -1;
	}

	return n;
}
     cbc:	bd10      	pop	{r4, pc}
		return -1;
     cbe:	2001      	movs	r0, #1
     cc0:	4240      	negs	r0, r0
     cc2:	e7fb      	b.n	cbc <_read+0x14>
		return -1;
     cc4:	2001      	movs	r0, #1
     cc6:	4240      	negs	r0, r0
     cc8:	e7f8      	b.n	cbc <_read+0x14>
     cca:	46c0      	nop			; (mov r8, r8)
     ccc:	00000d25 	.word	0x00000d25

00000cd0 <_write>:
#include <stdio.h>

int __attribute__((weak)) _write(int file, char *ptr, int len); /* Remove GCC compiler warning */

int __attribute__((weak)) _write(int file, char *ptr, int len)
{
     cd0:	b510      	push	{r4, lr}
     cd2:	000b      	movs	r3, r1
	int n = 0;

	if ((file != 1) && (file != 2) && (file != 3)) {
     cd4:	3801      	subs	r0, #1
     cd6:	2802      	cmp	r0, #2
     cd8:	d809      	bhi.n	cee <_write+0x1e>
		return -1;
	}

	n = stdio_io_write((const uint8_t *)ptr, len);
     cda:	0011      	movs	r1, r2
     cdc:	0018      	movs	r0, r3
     cde:	4b05      	ldr	r3, [pc, #20]	; (cf4 <_write+0x24>)
     ce0:	4798      	blx	r3
	if (n < 0) {
     ce2:	2800      	cmp	r0, #0
     ce4:	db00      	blt.n	ce8 <_write+0x18>
		return -1;
	}

	return n;
}
     ce6:	bd10      	pop	{r4, pc}
		return -1;
     ce8:	2001      	movs	r0, #1
     cea:	4240      	negs	r0, r0
     cec:	e7fb      	b.n	ce6 <_write+0x16>
		return -1;
     cee:	2001      	movs	r0, #1
     cf0:	4240      	negs	r0, r0
     cf2:	e7f8      	b.n	ce6 <_write+0x16>
     cf4:	00000d49 	.word	0x00000d49

00000cf8 <stdio_io_init>:

/** IO descriptor for STDIO access. */
static struct io_descriptor *stdio_io = NULL;

void stdio_io_init(struct io_descriptor *io)
{
     cf8:	b570      	push	{r4, r5, r6, lr}
     cfa:	0006      	movs	r6, r0
#if defined(__GNUC__)
	/* Specify that stdout and stdin should not be buffered. */
	setbuf(stdout, NULL);
     cfc:	4d06      	ldr	r5, [pc, #24]	; (d18 <stdio_io_init+0x20>)
     cfe:	682b      	ldr	r3, [r5, #0]
     d00:	6898      	ldr	r0, [r3, #8]
     d02:	2100      	movs	r1, #0
     d04:	4c05      	ldr	r4, [pc, #20]	; (d1c <stdio_io_init+0x24>)
     d06:	47a0      	blx	r4
	setbuf(stdin, NULL);
     d08:	682b      	ldr	r3, [r5, #0]
     d0a:	6858      	ldr	r0, [r3, #4]
     d0c:	2100      	movs	r1, #0
     d0e:	47a0      	blx	r4
	 * and AVR GCC library:
	 * - printf() emits one character at a time.
	 * - getchar() requests only 1 byte to exit.
	 */
#endif
	stdio_io = io;
     d10:	4b03      	ldr	r3, [pc, #12]	; (d20 <stdio_io_init+0x28>)
     d12:	601e      	str	r6, [r3, #0]
}
     d14:	bd70      	pop	{r4, r5, r6, pc}
     d16:	46c0      	nop			; (mov r8, r8)
     d18:	20000000 	.word	0x20000000
     d1c:	00001ee5 	.word	0x00001ee5
     d20:	20000088 	.word	0x20000088

00000d24 <stdio_io_read>:
{
	stdio_io = io;
}

int32_t stdio_io_read(uint8_t *buf, const int32_t len)
{
     d24:	b510      	push	{r4, lr}
     d26:	0004      	movs	r4, r0
	if (stdio_io == NULL) {
     d28:	4b05      	ldr	r3, [pc, #20]	; (d40 <stdio_io_read+0x1c>)
     d2a:	6818      	ldr	r0, [r3, #0]
     d2c:	2800      	cmp	r0, #0
     d2e:	d004      	beq.n	d3a <stdio_io_read+0x16>
		return 0;
	}
	return io_read(stdio_io, buf, len);
     d30:	b28a      	uxth	r2, r1
     d32:	0021      	movs	r1, r4
     d34:	4b03      	ldr	r3, [pc, #12]	; (d44 <stdio_io_read+0x20>)
     d36:	4798      	blx	r3
}
     d38:	bd10      	pop	{r4, pc}
		return 0;
     d3a:	2000      	movs	r0, #0
     d3c:	e7fc      	b.n	d38 <stdio_io_read+0x14>
     d3e:	46c0      	nop			; (mov r8, r8)
     d40:	20000088 	.word	0x20000088
     d44:	00000539 	.word	0x00000539

00000d48 <stdio_io_write>:

int32_t stdio_io_write(const uint8_t *buf, const int32_t len)
{
     d48:	b510      	push	{r4, lr}
     d4a:	0004      	movs	r4, r0
	if (stdio_io == NULL) {
     d4c:	4b05      	ldr	r3, [pc, #20]	; (d64 <stdio_io_write+0x1c>)
     d4e:	6818      	ldr	r0, [r3, #0]
     d50:	2800      	cmp	r0, #0
     d52:	d004      	beq.n	d5e <stdio_io_write+0x16>
		return 0;
	}
	return io_write(stdio_io, buf, len);
     d54:	b28a      	uxth	r2, r1
     d56:	0021      	movs	r1, r4
     d58:	4b03      	ldr	r3, [pc, #12]	; (d68 <stdio_io_write+0x20>)
     d5a:	4798      	blx	r3
}
     d5c:	bd10      	pop	{r4, pc}
		return 0;
     d5e:	2000      	movs	r0, #0
     d60:	e7fc      	b.n	d5c <stdio_io_write+0x14>
     d62:	46c0      	nop			; (mov r8, r8)
     d64:	20000088 	.word	0x20000088
     d68:	00000501 	.word	0x00000501

00000d6c <stdio_redirect_init>:
	/* Print welcome message */
	printf("\r\nHello ATMEL World!\r\n");
}

void stdio_redirect_init(void)
{
     d6c:	b510      	push	{r4, lr}

	usart_sync_enable(&TARGET_IO);
     d6e:	4c04      	ldr	r4, [pc, #16]	; (d80 <stdio_redirect_init+0x14>)
     d70:	0020      	movs	r0, r4
     d72:	4b04      	ldr	r3, [pc, #16]	; (d84 <stdio_redirect_init+0x18>)
     d74:	4798      	blx	r3
	stdio_io_init(&TARGET_IO.io);
     d76:	0020      	movs	r0, r4
     d78:	4b03      	ldr	r3, [pc, #12]	; (d88 <stdio_redirect_init+0x1c>)
     d7a:	4798      	blx	r3
}
     d7c:	bd10      	pop	{r4, pc}
     d7e:	46c0      	nop			; (mov r8, r8)
     d80:	20000094 	.word	0x20000094
     d84:	0000069d 	.word	0x0000069d
     d88:	00000cf9 	.word	0x00000cf9

00000d8c <__udivsi3>:
     d8c:	2200      	movs	r2, #0
     d8e:	0843      	lsrs	r3, r0, #1
     d90:	428b      	cmp	r3, r1
     d92:	d374      	bcc.n	e7e <__udivsi3+0xf2>
     d94:	0903      	lsrs	r3, r0, #4
     d96:	428b      	cmp	r3, r1
     d98:	d35f      	bcc.n	e5a <__udivsi3+0xce>
     d9a:	0a03      	lsrs	r3, r0, #8
     d9c:	428b      	cmp	r3, r1
     d9e:	d344      	bcc.n	e2a <__udivsi3+0x9e>
     da0:	0b03      	lsrs	r3, r0, #12
     da2:	428b      	cmp	r3, r1
     da4:	d328      	bcc.n	df8 <__udivsi3+0x6c>
     da6:	0c03      	lsrs	r3, r0, #16
     da8:	428b      	cmp	r3, r1
     daa:	d30d      	bcc.n	dc8 <__udivsi3+0x3c>
     dac:	22ff      	movs	r2, #255	; 0xff
     dae:	0209      	lsls	r1, r1, #8
     db0:	ba12      	rev	r2, r2
     db2:	0c03      	lsrs	r3, r0, #16
     db4:	428b      	cmp	r3, r1
     db6:	d302      	bcc.n	dbe <__udivsi3+0x32>
     db8:	1212      	asrs	r2, r2, #8
     dba:	0209      	lsls	r1, r1, #8
     dbc:	d065      	beq.n	e8a <__udivsi3+0xfe>
     dbe:	0b03      	lsrs	r3, r0, #12
     dc0:	428b      	cmp	r3, r1
     dc2:	d319      	bcc.n	df8 <__udivsi3+0x6c>
     dc4:	e000      	b.n	dc8 <__udivsi3+0x3c>
     dc6:	0a09      	lsrs	r1, r1, #8
     dc8:	0bc3      	lsrs	r3, r0, #15
     dca:	428b      	cmp	r3, r1
     dcc:	d301      	bcc.n	dd2 <__udivsi3+0x46>
     dce:	03cb      	lsls	r3, r1, #15
     dd0:	1ac0      	subs	r0, r0, r3
     dd2:	4152      	adcs	r2, r2
     dd4:	0b83      	lsrs	r3, r0, #14
     dd6:	428b      	cmp	r3, r1
     dd8:	d301      	bcc.n	dde <__udivsi3+0x52>
     dda:	038b      	lsls	r3, r1, #14
     ddc:	1ac0      	subs	r0, r0, r3
     dde:	4152      	adcs	r2, r2
     de0:	0b43      	lsrs	r3, r0, #13
     de2:	428b      	cmp	r3, r1
     de4:	d301      	bcc.n	dea <__udivsi3+0x5e>
     de6:	034b      	lsls	r3, r1, #13
     de8:	1ac0      	subs	r0, r0, r3
     dea:	4152      	adcs	r2, r2
     dec:	0b03      	lsrs	r3, r0, #12
     dee:	428b      	cmp	r3, r1
     df0:	d301      	bcc.n	df6 <__udivsi3+0x6a>
     df2:	030b      	lsls	r3, r1, #12
     df4:	1ac0      	subs	r0, r0, r3
     df6:	4152      	adcs	r2, r2
     df8:	0ac3      	lsrs	r3, r0, #11
     dfa:	428b      	cmp	r3, r1
     dfc:	d301      	bcc.n	e02 <__udivsi3+0x76>
     dfe:	02cb      	lsls	r3, r1, #11
     e00:	1ac0      	subs	r0, r0, r3
     e02:	4152      	adcs	r2, r2
     e04:	0a83      	lsrs	r3, r0, #10
     e06:	428b      	cmp	r3, r1
     e08:	d301      	bcc.n	e0e <__udivsi3+0x82>
     e0a:	028b      	lsls	r3, r1, #10
     e0c:	1ac0      	subs	r0, r0, r3
     e0e:	4152      	adcs	r2, r2
     e10:	0a43      	lsrs	r3, r0, #9
     e12:	428b      	cmp	r3, r1
     e14:	d301      	bcc.n	e1a <__udivsi3+0x8e>
     e16:	024b      	lsls	r3, r1, #9
     e18:	1ac0      	subs	r0, r0, r3
     e1a:	4152      	adcs	r2, r2
     e1c:	0a03      	lsrs	r3, r0, #8
     e1e:	428b      	cmp	r3, r1
     e20:	d301      	bcc.n	e26 <__udivsi3+0x9a>
     e22:	020b      	lsls	r3, r1, #8
     e24:	1ac0      	subs	r0, r0, r3
     e26:	4152      	adcs	r2, r2
     e28:	d2cd      	bcs.n	dc6 <__udivsi3+0x3a>
     e2a:	09c3      	lsrs	r3, r0, #7
     e2c:	428b      	cmp	r3, r1
     e2e:	d301      	bcc.n	e34 <__udivsi3+0xa8>
     e30:	01cb      	lsls	r3, r1, #7
     e32:	1ac0      	subs	r0, r0, r3
     e34:	4152      	adcs	r2, r2
     e36:	0983      	lsrs	r3, r0, #6
     e38:	428b      	cmp	r3, r1
     e3a:	d301      	bcc.n	e40 <__udivsi3+0xb4>
     e3c:	018b      	lsls	r3, r1, #6
     e3e:	1ac0      	subs	r0, r0, r3
     e40:	4152      	adcs	r2, r2
     e42:	0943      	lsrs	r3, r0, #5
     e44:	428b      	cmp	r3, r1
     e46:	d301      	bcc.n	e4c <__udivsi3+0xc0>
     e48:	014b      	lsls	r3, r1, #5
     e4a:	1ac0      	subs	r0, r0, r3
     e4c:	4152      	adcs	r2, r2
     e4e:	0903      	lsrs	r3, r0, #4
     e50:	428b      	cmp	r3, r1
     e52:	d301      	bcc.n	e58 <__udivsi3+0xcc>
     e54:	010b      	lsls	r3, r1, #4
     e56:	1ac0      	subs	r0, r0, r3
     e58:	4152      	adcs	r2, r2
     e5a:	08c3      	lsrs	r3, r0, #3
     e5c:	428b      	cmp	r3, r1
     e5e:	d301      	bcc.n	e64 <__udivsi3+0xd8>
     e60:	00cb      	lsls	r3, r1, #3
     e62:	1ac0      	subs	r0, r0, r3
     e64:	4152      	adcs	r2, r2
     e66:	0883      	lsrs	r3, r0, #2
     e68:	428b      	cmp	r3, r1
     e6a:	d301      	bcc.n	e70 <__udivsi3+0xe4>
     e6c:	008b      	lsls	r3, r1, #2
     e6e:	1ac0      	subs	r0, r0, r3
     e70:	4152      	adcs	r2, r2
     e72:	0843      	lsrs	r3, r0, #1
     e74:	428b      	cmp	r3, r1
     e76:	d301      	bcc.n	e7c <__udivsi3+0xf0>
     e78:	004b      	lsls	r3, r1, #1
     e7a:	1ac0      	subs	r0, r0, r3
     e7c:	4152      	adcs	r2, r2
     e7e:	1a41      	subs	r1, r0, r1
     e80:	d200      	bcs.n	e84 <__udivsi3+0xf8>
     e82:	4601      	mov	r1, r0
     e84:	4152      	adcs	r2, r2
     e86:	4610      	mov	r0, r2
     e88:	4770      	bx	lr
     e8a:	e7ff      	b.n	e8c <__udivsi3+0x100>
     e8c:	b501      	push	{r0, lr}
     e8e:	2000      	movs	r0, #0
     e90:	f000 f8f0 	bl	1074 <__aeabi_idiv0>
     e94:	bd02      	pop	{r1, pc}
     e96:	46c0      	nop			; (mov r8, r8)

00000e98 <__aeabi_uidivmod>:
     e98:	2900      	cmp	r1, #0
     e9a:	d0f7      	beq.n	e8c <__udivsi3+0x100>
     e9c:	e776      	b.n	d8c <__udivsi3>
     e9e:	4770      	bx	lr

00000ea0 <__divsi3>:
     ea0:	4603      	mov	r3, r0
     ea2:	430b      	orrs	r3, r1
     ea4:	d47f      	bmi.n	fa6 <__divsi3+0x106>
     ea6:	2200      	movs	r2, #0
     ea8:	0843      	lsrs	r3, r0, #1
     eaa:	428b      	cmp	r3, r1
     eac:	d374      	bcc.n	f98 <__divsi3+0xf8>
     eae:	0903      	lsrs	r3, r0, #4
     eb0:	428b      	cmp	r3, r1
     eb2:	d35f      	bcc.n	f74 <__divsi3+0xd4>
     eb4:	0a03      	lsrs	r3, r0, #8
     eb6:	428b      	cmp	r3, r1
     eb8:	d344      	bcc.n	f44 <__divsi3+0xa4>
     eba:	0b03      	lsrs	r3, r0, #12
     ebc:	428b      	cmp	r3, r1
     ebe:	d328      	bcc.n	f12 <__divsi3+0x72>
     ec0:	0c03      	lsrs	r3, r0, #16
     ec2:	428b      	cmp	r3, r1
     ec4:	d30d      	bcc.n	ee2 <__divsi3+0x42>
     ec6:	22ff      	movs	r2, #255	; 0xff
     ec8:	0209      	lsls	r1, r1, #8
     eca:	ba12      	rev	r2, r2
     ecc:	0c03      	lsrs	r3, r0, #16
     ece:	428b      	cmp	r3, r1
     ed0:	d302      	bcc.n	ed8 <__divsi3+0x38>
     ed2:	1212      	asrs	r2, r2, #8
     ed4:	0209      	lsls	r1, r1, #8
     ed6:	d065      	beq.n	fa4 <__divsi3+0x104>
     ed8:	0b03      	lsrs	r3, r0, #12
     eda:	428b      	cmp	r3, r1
     edc:	d319      	bcc.n	f12 <__divsi3+0x72>
     ede:	e000      	b.n	ee2 <__divsi3+0x42>
     ee0:	0a09      	lsrs	r1, r1, #8
     ee2:	0bc3      	lsrs	r3, r0, #15
     ee4:	428b      	cmp	r3, r1
     ee6:	d301      	bcc.n	eec <__divsi3+0x4c>
     ee8:	03cb      	lsls	r3, r1, #15
     eea:	1ac0      	subs	r0, r0, r3
     eec:	4152      	adcs	r2, r2
     eee:	0b83      	lsrs	r3, r0, #14
     ef0:	428b      	cmp	r3, r1
     ef2:	d301      	bcc.n	ef8 <__divsi3+0x58>
     ef4:	038b      	lsls	r3, r1, #14
     ef6:	1ac0      	subs	r0, r0, r3
     ef8:	4152      	adcs	r2, r2
     efa:	0b43      	lsrs	r3, r0, #13
     efc:	428b      	cmp	r3, r1
     efe:	d301      	bcc.n	f04 <__divsi3+0x64>
     f00:	034b      	lsls	r3, r1, #13
     f02:	1ac0      	subs	r0, r0, r3
     f04:	4152      	adcs	r2, r2
     f06:	0b03      	lsrs	r3, r0, #12
     f08:	428b      	cmp	r3, r1
     f0a:	d301      	bcc.n	f10 <__divsi3+0x70>
     f0c:	030b      	lsls	r3, r1, #12
     f0e:	1ac0      	subs	r0, r0, r3
     f10:	4152      	adcs	r2, r2
     f12:	0ac3      	lsrs	r3, r0, #11
     f14:	428b      	cmp	r3, r1
     f16:	d301      	bcc.n	f1c <__divsi3+0x7c>
     f18:	02cb      	lsls	r3, r1, #11
     f1a:	1ac0      	subs	r0, r0, r3
     f1c:	4152      	adcs	r2, r2
     f1e:	0a83      	lsrs	r3, r0, #10
     f20:	428b      	cmp	r3, r1
     f22:	d301      	bcc.n	f28 <__divsi3+0x88>
     f24:	028b      	lsls	r3, r1, #10
     f26:	1ac0      	subs	r0, r0, r3
     f28:	4152      	adcs	r2, r2
     f2a:	0a43      	lsrs	r3, r0, #9
     f2c:	428b      	cmp	r3, r1
     f2e:	d301      	bcc.n	f34 <__divsi3+0x94>
     f30:	024b      	lsls	r3, r1, #9
     f32:	1ac0      	subs	r0, r0, r3
     f34:	4152      	adcs	r2, r2
     f36:	0a03      	lsrs	r3, r0, #8
     f38:	428b      	cmp	r3, r1
     f3a:	d301      	bcc.n	f40 <__divsi3+0xa0>
     f3c:	020b      	lsls	r3, r1, #8
     f3e:	1ac0      	subs	r0, r0, r3
     f40:	4152      	adcs	r2, r2
     f42:	d2cd      	bcs.n	ee0 <__divsi3+0x40>
     f44:	09c3      	lsrs	r3, r0, #7
     f46:	428b      	cmp	r3, r1
     f48:	d301      	bcc.n	f4e <__divsi3+0xae>
     f4a:	01cb      	lsls	r3, r1, #7
     f4c:	1ac0      	subs	r0, r0, r3
     f4e:	4152      	adcs	r2, r2
     f50:	0983      	lsrs	r3, r0, #6
     f52:	428b      	cmp	r3, r1
     f54:	d301      	bcc.n	f5a <__divsi3+0xba>
     f56:	018b      	lsls	r3, r1, #6
     f58:	1ac0      	subs	r0, r0, r3
     f5a:	4152      	adcs	r2, r2
     f5c:	0943      	lsrs	r3, r0, #5
     f5e:	428b      	cmp	r3, r1
     f60:	d301      	bcc.n	f66 <__divsi3+0xc6>
     f62:	014b      	lsls	r3, r1, #5
     f64:	1ac0      	subs	r0, r0, r3
     f66:	4152      	adcs	r2, r2
     f68:	0903      	lsrs	r3, r0, #4
     f6a:	428b      	cmp	r3, r1
     f6c:	d301      	bcc.n	f72 <__divsi3+0xd2>
     f6e:	010b      	lsls	r3, r1, #4
     f70:	1ac0      	subs	r0, r0, r3
     f72:	4152      	adcs	r2, r2
     f74:	08c3      	lsrs	r3, r0, #3
     f76:	428b      	cmp	r3, r1
     f78:	d301      	bcc.n	f7e <__divsi3+0xde>
     f7a:	00cb      	lsls	r3, r1, #3
     f7c:	1ac0      	subs	r0, r0, r3
     f7e:	4152      	adcs	r2, r2
     f80:	0883      	lsrs	r3, r0, #2
     f82:	428b      	cmp	r3, r1
     f84:	d301      	bcc.n	f8a <__divsi3+0xea>
     f86:	008b      	lsls	r3, r1, #2
     f88:	1ac0      	subs	r0, r0, r3
     f8a:	4152      	adcs	r2, r2
     f8c:	0843      	lsrs	r3, r0, #1
     f8e:	428b      	cmp	r3, r1
     f90:	d301      	bcc.n	f96 <__divsi3+0xf6>
     f92:	004b      	lsls	r3, r1, #1
     f94:	1ac0      	subs	r0, r0, r3
     f96:	4152      	adcs	r2, r2
     f98:	1a41      	subs	r1, r0, r1
     f9a:	d200      	bcs.n	f9e <__divsi3+0xfe>
     f9c:	4601      	mov	r1, r0
     f9e:	4152      	adcs	r2, r2
     fa0:	4610      	mov	r0, r2
     fa2:	4770      	bx	lr
     fa4:	e05d      	b.n	1062 <__divsi3+0x1c2>
     fa6:	0fca      	lsrs	r2, r1, #31
     fa8:	d000      	beq.n	fac <__divsi3+0x10c>
     faa:	4249      	negs	r1, r1
     fac:	1003      	asrs	r3, r0, #32
     fae:	d300      	bcc.n	fb2 <__divsi3+0x112>
     fb0:	4240      	negs	r0, r0
     fb2:	4053      	eors	r3, r2
     fb4:	2200      	movs	r2, #0
     fb6:	469c      	mov	ip, r3
     fb8:	0903      	lsrs	r3, r0, #4
     fba:	428b      	cmp	r3, r1
     fbc:	d32d      	bcc.n	101a <__divsi3+0x17a>
     fbe:	0a03      	lsrs	r3, r0, #8
     fc0:	428b      	cmp	r3, r1
     fc2:	d312      	bcc.n	fea <__divsi3+0x14a>
     fc4:	22fc      	movs	r2, #252	; 0xfc
     fc6:	0189      	lsls	r1, r1, #6
     fc8:	ba12      	rev	r2, r2
     fca:	0a03      	lsrs	r3, r0, #8
     fcc:	428b      	cmp	r3, r1
     fce:	d30c      	bcc.n	fea <__divsi3+0x14a>
     fd0:	0189      	lsls	r1, r1, #6
     fd2:	1192      	asrs	r2, r2, #6
     fd4:	428b      	cmp	r3, r1
     fd6:	d308      	bcc.n	fea <__divsi3+0x14a>
     fd8:	0189      	lsls	r1, r1, #6
     fda:	1192      	asrs	r2, r2, #6
     fdc:	428b      	cmp	r3, r1
     fde:	d304      	bcc.n	fea <__divsi3+0x14a>
     fe0:	0189      	lsls	r1, r1, #6
     fe2:	d03a      	beq.n	105a <__divsi3+0x1ba>
     fe4:	1192      	asrs	r2, r2, #6
     fe6:	e000      	b.n	fea <__divsi3+0x14a>
     fe8:	0989      	lsrs	r1, r1, #6
     fea:	09c3      	lsrs	r3, r0, #7
     fec:	428b      	cmp	r3, r1
     fee:	d301      	bcc.n	ff4 <__divsi3+0x154>
     ff0:	01cb      	lsls	r3, r1, #7
     ff2:	1ac0      	subs	r0, r0, r3
     ff4:	4152      	adcs	r2, r2
     ff6:	0983      	lsrs	r3, r0, #6
     ff8:	428b      	cmp	r3, r1
     ffa:	d301      	bcc.n	1000 <__divsi3+0x160>
     ffc:	018b      	lsls	r3, r1, #6
     ffe:	1ac0      	subs	r0, r0, r3
    1000:	4152      	adcs	r2, r2
    1002:	0943      	lsrs	r3, r0, #5
    1004:	428b      	cmp	r3, r1
    1006:	d301      	bcc.n	100c <__divsi3+0x16c>
    1008:	014b      	lsls	r3, r1, #5
    100a:	1ac0      	subs	r0, r0, r3
    100c:	4152      	adcs	r2, r2
    100e:	0903      	lsrs	r3, r0, #4
    1010:	428b      	cmp	r3, r1
    1012:	d301      	bcc.n	1018 <__divsi3+0x178>
    1014:	010b      	lsls	r3, r1, #4
    1016:	1ac0      	subs	r0, r0, r3
    1018:	4152      	adcs	r2, r2
    101a:	08c3      	lsrs	r3, r0, #3
    101c:	428b      	cmp	r3, r1
    101e:	d301      	bcc.n	1024 <__divsi3+0x184>
    1020:	00cb      	lsls	r3, r1, #3
    1022:	1ac0      	subs	r0, r0, r3
    1024:	4152      	adcs	r2, r2
    1026:	0883      	lsrs	r3, r0, #2
    1028:	428b      	cmp	r3, r1
    102a:	d301      	bcc.n	1030 <__divsi3+0x190>
    102c:	008b      	lsls	r3, r1, #2
    102e:	1ac0      	subs	r0, r0, r3
    1030:	4152      	adcs	r2, r2
    1032:	d2d9      	bcs.n	fe8 <__divsi3+0x148>
    1034:	0843      	lsrs	r3, r0, #1
    1036:	428b      	cmp	r3, r1
    1038:	d301      	bcc.n	103e <__divsi3+0x19e>
    103a:	004b      	lsls	r3, r1, #1
    103c:	1ac0      	subs	r0, r0, r3
    103e:	4152      	adcs	r2, r2
    1040:	1a41      	subs	r1, r0, r1
    1042:	d200      	bcs.n	1046 <__divsi3+0x1a6>
    1044:	4601      	mov	r1, r0
    1046:	4663      	mov	r3, ip
    1048:	4152      	adcs	r2, r2
    104a:	105b      	asrs	r3, r3, #1
    104c:	4610      	mov	r0, r2
    104e:	d301      	bcc.n	1054 <__divsi3+0x1b4>
    1050:	4240      	negs	r0, r0
    1052:	2b00      	cmp	r3, #0
    1054:	d500      	bpl.n	1058 <__divsi3+0x1b8>
    1056:	4249      	negs	r1, r1
    1058:	4770      	bx	lr
    105a:	4663      	mov	r3, ip
    105c:	105b      	asrs	r3, r3, #1
    105e:	d300      	bcc.n	1062 <__divsi3+0x1c2>
    1060:	4240      	negs	r0, r0
    1062:	b501      	push	{r0, lr}
    1064:	2000      	movs	r0, #0
    1066:	f000 f805 	bl	1074 <__aeabi_idiv0>
    106a:	bd02      	pop	{r1, pc}

0000106c <__aeabi_idivmod>:
    106c:	2900      	cmp	r1, #0
    106e:	d0f8      	beq.n	1062 <__divsi3+0x1c2>
    1070:	e716      	b.n	ea0 <__divsi3>
    1072:	4770      	bx	lr

00001074 <__aeabi_idiv0>:
    1074:	4770      	bx	lr
    1076:	46c0      	nop			; (mov r8, r8)

00001078 <__aeabi_ddiv>:
    1078:	b5f0      	push	{r4, r5, r6, r7, lr}
    107a:	4657      	mov	r7, sl
    107c:	4645      	mov	r5, r8
    107e:	46de      	mov	lr, fp
    1080:	464e      	mov	r6, r9
    1082:	b5e0      	push	{r5, r6, r7, lr}
    1084:	004c      	lsls	r4, r1, #1
    1086:	030e      	lsls	r6, r1, #12
    1088:	b087      	sub	sp, #28
    108a:	4683      	mov	fp, r0
    108c:	4692      	mov	sl, r2
    108e:	001d      	movs	r5, r3
    1090:	4680      	mov	r8, r0
    1092:	0b36      	lsrs	r6, r6, #12
    1094:	0d64      	lsrs	r4, r4, #21
    1096:	0fcf      	lsrs	r7, r1, #31
    1098:	2c00      	cmp	r4, #0
    109a:	d04f      	beq.n	113c <__aeabi_ddiv+0xc4>
    109c:	4b6f      	ldr	r3, [pc, #444]	; (125c <__aeabi_ddiv+0x1e4>)
    109e:	429c      	cmp	r4, r3
    10a0:	d035      	beq.n	110e <__aeabi_ddiv+0x96>
    10a2:	2380      	movs	r3, #128	; 0x80
    10a4:	0f42      	lsrs	r2, r0, #29
    10a6:	041b      	lsls	r3, r3, #16
    10a8:	00f6      	lsls	r6, r6, #3
    10aa:	4313      	orrs	r3, r2
    10ac:	4333      	orrs	r3, r6
    10ae:	4699      	mov	r9, r3
    10b0:	00c3      	lsls	r3, r0, #3
    10b2:	4698      	mov	r8, r3
    10b4:	4b6a      	ldr	r3, [pc, #424]	; (1260 <__aeabi_ddiv+0x1e8>)
    10b6:	2600      	movs	r6, #0
    10b8:	469c      	mov	ip, r3
    10ba:	2300      	movs	r3, #0
    10bc:	4464      	add	r4, ip
    10be:	9303      	str	r3, [sp, #12]
    10c0:	032b      	lsls	r3, r5, #12
    10c2:	0b1b      	lsrs	r3, r3, #12
    10c4:	469b      	mov	fp, r3
    10c6:	006b      	lsls	r3, r5, #1
    10c8:	0fed      	lsrs	r5, r5, #31
    10ca:	4650      	mov	r0, sl
    10cc:	0d5b      	lsrs	r3, r3, #21
    10ce:	9501      	str	r5, [sp, #4]
    10d0:	d05e      	beq.n	1190 <__aeabi_ddiv+0x118>
    10d2:	4a62      	ldr	r2, [pc, #392]	; (125c <__aeabi_ddiv+0x1e4>)
    10d4:	4293      	cmp	r3, r2
    10d6:	d053      	beq.n	1180 <__aeabi_ddiv+0x108>
    10d8:	465a      	mov	r2, fp
    10da:	00d1      	lsls	r1, r2, #3
    10dc:	2280      	movs	r2, #128	; 0x80
    10de:	0f40      	lsrs	r0, r0, #29
    10e0:	0412      	lsls	r2, r2, #16
    10e2:	4302      	orrs	r2, r0
    10e4:	430a      	orrs	r2, r1
    10e6:	4693      	mov	fp, r2
    10e8:	4652      	mov	r2, sl
    10ea:	00d1      	lsls	r1, r2, #3
    10ec:	4a5c      	ldr	r2, [pc, #368]	; (1260 <__aeabi_ddiv+0x1e8>)
    10ee:	4694      	mov	ip, r2
    10f0:	2200      	movs	r2, #0
    10f2:	4463      	add	r3, ip
    10f4:	0038      	movs	r0, r7
    10f6:	4068      	eors	r0, r5
    10f8:	4684      	mov	ip, r0
    10fa:	9002      	str	r0, [sp, #8]
    10fc:	1ae4      	subs	r4, r4, r3
    10fe:	4316      	orrs	r6, r2
    1100:	2e0f      	cmp	r6, #15
    1102:	d900      	bls.n	1106 <__aeabi_ddiv+0x8e>
    1104:	e0b4      	b.n	1270 <__aeabi_ddiv+0x1f8>
    1106:	4b57      	ldr	r3, [pc, #348]	; (1264 <__aeabi_ddiv+0x1ec>)
    1108:	00b6      	lsls	r6, r6, #2
    110a:	599b      	ldr	r3, [r3, r6]
    110c:	469f      	mov	pc, r3
    110e:	0003      	movs	r3, r0
    1110:	4333      	orrs	r3, r6
    1112:	4699      	mov	r9, r3
    1114:	d16c      	bne.n	11f0 <__aeabi_ddiv+0x178>
    1116:	2300      	movs	r3, #0
    1118:	4698      	mov	r8, r3
    111a:	3302      	adds	r3, #2
    111c:	2608      	movs	r6, #8
    111e:	9303      	str	r3, [sp, #12]
    1120:	e7ce      	b.n	10c0 <__aeabi_ddiv+0x48>
    1122:	46cb      	mov	fp, r9
    1124:	4641      	mov	r1, r8
    1126:	9a03      	ldr	r2, [sp, #12]
    1128:	9701      	str	r7, [sp, #4]
    112a:	2a02      	cmp	r2, #2
    112c:	d165      	bne.n	11fa <__aeabi_ddiv+0x182>
    112e:	9b01      	ldr	r3, [sp, #4]
    1130:	4c4a      	ldr	r4, [pc, #296]	; (125c <__aeabi_ddiv+0x1e4>)
    1132:	469c      	mov	ip, r3
    1134:	2300      	movs	r3, #0
    1136:	2200      	movs	r2, #0
    1138:	4698      	mov	r8, r3
    113a:	e06b      	b.n	1214 <__aeabi_ddiv+0x19c>
    113c:	0003      	movs	r3, r0
    113e:	4333      	orrs	r3, r6
    1140:	4699      	mov	r9, r3
    1142:	d04e      	beq.n	11e2 <__aeabi_ddiv+0x16a>
    1144:	2e00      	cmp	r6, #0
    1146:	d100      	bne.n	114a <__aeabi_ddiv+0xd2>
    1148:	e1bc      	b.n	14c4 <__aeabi_ddiv+0x44c>
    114a:	0030      	movs	r0, r6
    114c:	f000 fe66 	bl	1e1c <__clzsi2>
    1150:	0003      	movs	r3, r0
    1152:	3b0b      	subs	r3, #11
    1154:	2b1c      	cmp	r3, #28
    1156:	dd00      	ble.n	115a <__aeabi_ddiv+0xe2>
    1158:	e1ac      	b.n	14b4 <__aeabi_ddiv+0x43c>
    115a:	221d      	movs	r2, #29
    115c:	1ad3      	subs	r3, r2, r3
    115e:	465a      	mov	r2, fp
    1160:	0001      	movs	r1, r0
    1162:	40da      	lsrs	r2, r3
    1164:	3908      	subs	r1, #8
    1166:	408e      	lsls	r6, r1
    1168:	0013      	movs	r3, r2
    116a:	4333      	orrs	r3, r6
    116c:	4699      	mov	r9, r3
    116e:	465b      	mov	r3, fp
    1170:	408b      	lsls	r3, r1
    1172:	4698      	mov	r8, r3
    1174:	2300      	movs	r3, #0
    1176:	4c3c      	ldr	r4, [pc, #240]	; (1268 <__aeabi_ddiv+0x1f0>)
    1178:	2600      	movs	r6, #0
    117a:	1a24      	subs	r4, r4, r0
    117c:	9303      	str	r3, [sp, #12]
    117e:	e79f      	b.n	10c0 <__aeabi_ddiv+0x48>
    1180:	4651      	mov	r1, sl
    1182:	465a      	mov	r2, fp
    1184:	4311      	orrs	r1, r2
    1186:	d129      	bne.n	11dc <__aeabi_ddiv+0x164>
    1188:	2200      	movs	r2, #0
    118a:	4693      	mov	fp, r2
    118c:	3202      	adds	r2, #2
    118e:	e7b1      	b.n	10f4 <__aeabi_ddiv+0x7c>
    1190:	4659      	mov	r1, fp
    1192:	4301      	orrs	r1, r0
    1194:	d01e      	beq.n	11d4 <__aeabi_ddiv+0x15c>
    1196:	465b      	mov	r3, fp
    1198:	2b00      	cmp	r3, #0
    119a:	d100      	bne.n	119e <__aeabi_ddiv+0x126>
    119c:	e19e      	b.n	14dc <__aeabi_ddiv+0x464>
    119e:	4658      	mov	r0, fp
    11a0:	f000 fe3c 	bl	1e1c <__clzsi2>
    11a4:	0003      	movs	r3, r0
    11a6:	3b0b      	subs	r3, #11
    11a8:	2b1c      	cmp	r3, #28
    11aa:	dd00      	ble.n	11ae <__aeabi_ddiv+0x136>
    11ac:	e18f      	b.n	14ce <__aeabi_ddiv+0x456>
    11ae:	0002      	movs	r2, r0
    11b0:	4659      	mov	r1, fp
    11b2:	3a08      	subs	r2, #8
    11b4:	4091      	lsls	r1, r2
    11b6:	468b      	mov	fp, r1
    11b8:	211d      	movs	r1, #29
    11ba:	1acb      	subs	r3, r1, r3
    11bc:	4651      	mov	r1, sl
    11be:	40d9      	lsrs	r1, r3
    11c0:	000b      	movs	r3, r1
    11c2:	4659      	mov	r1, fp
    11c4:	430b      	orrs	r3, r1
    11c6:	4651      	mov	r1, sl
    11c8:	469b      	mov	fp, r3
    11ca:	4091      	lsls	r1, r2
    11cc:	4b26      	ldr	r3, [pc, #152]	; (1268 <__aeabi_ddiv+0x1f0>)
    11ce:	2200      	movs	r2, #0
    11d0:	1a1b      	subs	r3, r3, r0
    11d2:	e78f      	b.n	10f4 <__aeabi_ddiv+0x7c>
    11d4:	2300      	movs	r3, #0
    11d6:	2201      	movs	r2, #1
    11d8:	469b      	mov	fp, r3
    11da:	e78b      	b.n	10f4 <__aeabi_ddiv+0x7c>
    11dc:	4651      	mov	r1, sl
    11de:	2203      	movs	r2, #3
    11e0:	e788      	b.n	10f4 <__aeabi_ddiv+0x7c>
    11e2:	2300      	movs	r3, #0
    11e4:	4698      	mov	r8, r3
    11e6:	3301      	adds	r3, #1
    11e8:	2604      	movs	r6, #4
    11ea:	2400      	movs	r4, #0
    11ec:	9303      	str	r3, [sp, #12]
    11ee:	e767      	b.n	10c0 <__aeabi_ddiv+0x48>
    11f0:	2303      	movs	r3, #3
    11f2:	46b1      	mov	r9, r6
    11f4:	9303      	str	r3, [sp, #12]
    11f6:	260c      	movs	r6, #12
    11f8:	e762      	b.n	10c0 <__aeabi_ddiv+0x48>
    11fa:	2a03      	cmp	r2, #3
    11fc:	d100      	bne.n	1200 <__aeabi_ddiv+0x188>
    11fe:	e25c      	b.n	16ba <__aeabi_ddiv+0x642>
    1200:	9b01      	ldr	r3, [sp, #4]
    1202:	2a01      	cmp	r2, #1
    1204:	d000      	beq.n	1208 <__aeabi_ddiv+0x190>
    1206:	e1e4      	b.n	15d2 <__aeabi_ddiv+0x55a>
    1208:	4013      	ands	r3, r2
    120a:	469c      	mov	ip, r3
    120c:	2300      	movs	r3, #0
    120e:	2400      	movs	r4, #0
    1210:	2200      	movs	r2, #0
    1212:	4698      	mov	r8, r3
    1214:	2100      	movs	r1, #0
    1216:	0312      	lsls	r2, r2, #12
    1218:	0b13      	lsrs	r3, r2, #12
    121a:	0d0a      	lsrs	r2, r1, #20
    121c:	0512      	lsls	r2, r2, #20
    121e:	431a      	orrs	r2, r3
    1220:	0523      	lsls	r3, r4, #20
    1222:	4c12      	ldr	r4, [pc, #72]	; (126c <__aeabi_ddiv+0x1f4>)
    1224:	4640      	mov	r0, r8
    1226:	4022      	ands	r2, r4
    1228:	4313      	orrs	r3, r2
    122a:	4662      	mov	r2, ip
    122c:	005b      	lsls	r3, r3, #1
    122e:	07d2      	lsls	r2, r2, #31
    1230:	085b      	lsrs	r3, r3, #1
    1232:	4313      	orrs	r3, r2
    1234:	0019      	movs	r1, r3
    1236:	b007      	add	sp, #28
    1238:	bc3c      	pop	{r2, r3, r4, r5}
    123a:	4690      	mov	r8, r2
    123c:	4699      	mov	r9, r3
    123e:	46a2      	mov	sl, r4
    1240:	46ab      	mov	fp, r5
    1242:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1244:	2300      	movs	r3, #0
    1246:	2280      	movs	r2, #128	; 0x80
    1248:	469c      	mov	ip, r3
    124a:	0312      	lsls	r2, r2, #12
    124c:	4698      	mov	r8, r3
    124e:	4c03      	ldr	r4, [pc, #12]	; (125c <__aeabi_ddiv+0x1e4>)
    1250:	e7e0      	b.n	1214 <__aeabi_ddiv+0x19c>
    1252:	2300      	movs	r3, #0
    1254:	4c01      	ldr	r4, [pc, #4]	; (125c <__aeabi_ddiv+0x1e4>)
    1256:	2200      	movs	r2, #0
    1258:	4698      	mov	r8, r3
    125a:	e7db      	b.n	1214 <__aeabi_ddiv+0x19c>
    125c:	000007ff 	.word	0x000007ff
    1260:	fffffc01 	.word	0xfffffc01
    1264:	00002fc8 	.word	0x00002fc8
    1268:	fffffc0d 	.word	0xfffffc0d
    126c:	800fffff 	.word	0x800fffff
    1270:	45d9      	cmp	r9, fp
    1272:	d900      	bls.n	1276 <__aeabi_ddiv+0x1fe>
    1274:	e139      	b.n	14ea <__aeabi_ddiv+0x472>
    1276:	d100      	bne.n	127a <__aeabi_ddiv+0x202>
    1278:	e134      	b.n	14e4 <__aeabi_ddiv+0x46c>
    127a:	2300      	movs	r3, #0
    127c:	4646      	mov	r6, r8
    127e:	464d      	mov	r5, r9
    1280:	469a      	mov	sl, r3
    1282:	3c01      	subs	r4, #1
    1284:	465b      	mov	r3, fp
    1286:	0e0a      	lsrs	r2, r1, #24
    1288:	021b      	lsls	r3, r3, #8
    128a:	431a      	orrs	r2, r3
    128c:	020b      	lsls	r3, r1, #8
    128e:	0c17      	lsrs	r7, r2, #16
    1290:	9303      	str	r3, [sp, #12]
    1292:	0413      	lsls	r3, r2, #16
    1294:	0c1b      	lsrs	r3, r3, #16
    1296:	0039      	movs	r1, r7
    1298:	0028      	movs	r0, r5
    129a:	4690      	mov	r8, r2
    129c:	9301      	str	r3, [sp, #4]
    129e:	f7ff fd75 	bl	d8c <__udivsi3>
    12a2:	0002      	movs	r2, r0
    12a4:	9b01      	ldr	r3, [sp, #4]
    12a6:	4683      	mov	fp, r0
    12a8:	435a      	muls	r2, r3
    12aa:	0028      	movs	r0, r5
    12ac:	0039      	movs	r1, r7
    12ae:	4691      	mov	r9, r2
    12b0:	f7ff fdf2 	bl	e98 <__aeabi_uidivmod>
    12b4:	0c35      	lsrs	r5, r6, #16
    12b6:	0409      	lsls	r1, r1, #16
    12b8:	430d      	orrs	r5, r1
    12ba:	45a9      	cmp	r9, r5
    12bc:	d90d      	bls.n	12da <__aeabi_ddiv+0x262>
    12be:	465b      	mov	r3, fp
    12c0:	4445      	add	r5, r8
    12c2:	3b01      	subs	r3, #1
    12c4:	45a8      	cmp	r8, r5
    12c6:	d900      	bls.n	12ca <__aeabi_ddiv+0x252>
    12c8:	e13a      	b.n	1540 <__aeabi_ddiv+0x4c8>
    12ca:	45a9      	cmp	r9, r5
    12cc:	d800      	bhi.n	12d0 <__aeabi_ddiv+0x258>
    12ce:	e137      	b.n	1540 <__aeabi_ddiv+0x4c8>
    12d0:	2302      	movs	r3, #2
    12d2:	425b      	negs	r3, r3
    12d4:	469c      	mov	ip, r3
    12d6:	4445      	add	r5, r8
    12d8:	44e3      	add	fp, ip
    12da:	464b      	mov	r3, r9
    12dc:	1aeb      	subs	r3, r5, r3
    12de:	0039      	movs	r1, r7
    12e0:	0018      	movs	r0, r3
    12e2:	9304      	str	r3, [sp, #16]
    12e4:	f7ff fd52 	bl	d8c <__udivsi3>
    12e8:	9b01      	ldr	r3, [sp, #4]
    12ea:	0005      	movs	r5, r0
    12ec:	4343      	muls	r3, r0
    12ee:	0039      	movs	r1, r7
    12f0:	9804      	ldr	r0, [sp, #16]
    12f2:	4699      	mov	r9, r3
    12f4:	f7ff fdd0 	bl	e98 <__aeabi_uidivmod>
    12f8:	0433      	lsls	r3, r6, #16
    12fa:	0409      	lsls	r1, r1, #16
    12fc:	0c1b      	lsrs	r3, r3, #16
    12fe:	430b      	orrs	r3, r1
    1300:	4599      	cmp	r9, r3
    1302:	d909      	bls.n	1318 <__aeabi_ddiv+0x2a0>
    1304:	4443      	add	r3, r8
    1306:	1e6a      	subs	r2, r5, #1
    1308:	4598      	cmp	r8, r3
    130a:	d900      	bls.n	130e <__aeabi_ddiv+0x296>
    130c:	e11a      	b.n	1544 <__aeabi_ddiv+0x4cc>
    130e:	4599      	cmp	r9, r3
    1310:	d800      	bhi.n	1314 <__aeabi_ddiv+0x29c>
    1312:	e117      	b.n	1544 <__aeabi_ddiv+0x4cc>
    1314:	3d02      	subs	r5, #2
    1316:	4443      	add	r3, r8
    1318:	464a      	mov	r2, r9
    131a:	1a9b      	subs	r3, r3, r2
    131c:	465a      	mov	r2, fp
    131e:	0412      	lsls	r2, r2, #16
    1320:	432a      	orrs	r2, r5
    1322:	9903      	ldr	r1, [sp, #12]
    1324:	4693      	mov	fp, r2
    1326:	0c10      	lsrs	r0, r2, #16
    1328:	0c0a      	lsrs	r2, r1, #16
    132a:	4691      	mov	r9, r2
    132c:	0409      	lsls	r1, r1, #16
    132e:	465a      	mov	r2, fp
    1330:	0c09      	lsrs	r1, r1, #16
    1332:	464e      	mov	r6, r9
    1334:	000d      	movs	r5, r1
    1336:	0412      	lsls	r2, r2, #16
    1338:	0c12      	lsrs	r2, r2, #16
    133a:	4345      	muls	r5, r0
    133c:	9105      	str	r1, [sp, #20]
    133e:	4351      	muls	r1, r2
    1340:	4372      	muls	r2, r6
    1342:	4370      	muls	r0, r6
    1344:	1952      	adds	r2, r2, r5
    1346:	0c0e      	lsrs	r6, r1, #16
    1348:	18b2      	adds	r2, r6, r2
    134a:	4295      	cmp	r5, r2
    134c:	d903      	bls.n	1356 <__aeabi_ddiv+0x2de>
    134e:	2580      	movs	r5, #128	; 0x80
    1350:	026d      	lsls	r5, r5, #9
    1352:	46ac      	mov	ip, r5
    1354:	4460      	add	r0, ip
    1356:	0c15      	lsrs	r5, r2, #16
    1358:	0409      	lsls	r1, r1, #16
    135a:	0412      	lsls	r2, r2, #16
    135c:	0c09      	lsrs	r1, r1, #16
    135e:	1828      	adds	r0, r5, r0
    1360:	1852      	adds	r2, r2, r1
    1362:	4283      	cmp	r3, r0
    1364:	d200      	bcs.n	1368 <__aeabi_ddiv+0x2f0>
    1366:	e0ce      	b.n	1506 <__aeabi_ddiv+0x48e>
    1368:	d100      	bne.n	136c <__aeabi_ddiv+0x2f4>
    136a:	e0c8      	b.n	14fe <__aeabi_ddiv+0x486>
    136c:	1a1d      	subs	r5, r3, r0
    136e:	4653      	mov	r3, sl
    1370:	1a9e      	subs	r6, r3, r2
    1372:	45b2      	cmp	sl, r6
    1374:	4192      	sbcs	r2, r2
    1376:	4252      	negs	r2, r2
    1378:	1aab      	subs	r3, r5, r2
    137a:	469a      	mov	sl, r3
    137c:	4598      	cmp	r8, r3
    137e:	d100      	bne.n	1382 <__aeabi_ddiv+0x30a>
    1380:	e117      	b.n	15b2 <__aeabi_ddiv+0x53a>
    1382:	0039      	movs	r1, r7
    1384:	0018      	movs	r0, r3
    1386:	f7ff fd01 	bl	d8c <__udivsi3>
    138a:	9b01      	ldr	r3, [sp, #4]
    138c:	0005      	movs	r5, r0
    138e:	4343      	muls	r3, r0
    1390:	0039      	movs	r1, r7
    1392:	4650      	mov	r0, sl
    1394:	9304      	str	r3, [sp, #16]
    1396:	f7ff fd7f 	bl	e98 <__aeabi_uidivmod>
    139a:	9804      	ldr	r0, [sp, #16]
    139c:	040b      	lsls	r3, r1, #16
    139e:	0c31      	lsrs	r1, r6, #16
    13a0:	4319      	orrs	r1, r3
    13a2:	4288      	cmp	r0, r1
    13a4:	d909      	bls.n	13ba <__aeabi_ddiv+0x342>
    13a6:	4441      	add	r1, r8
    13a8:	1e6b      	subs	r3, r5, #1
    13aa:	4588      	cmp	r8, r1
    13ac:	d900      	bls.n	13b0 <__aeabi_ddiv+0x338>
    13ae:	e107      	b.n	15c0 <__aeabi_ddiv+0x548>
    13b0:	4288      	cmp	r0, r1
    13b2:	d800      	bhi.n	13b6 <__aeabi_ddiv+0x33e>
    13b4:	e104      	b.n	15c0 <__aeabi_ddiv+0x548>
    13b6:	3d02      	subs	r5, #2
    13b8:	4441      	add	r1, r8
    13ba:	9b04      	ldr	r3, [sp, #16]
    13bc:	1acb      	subs	r3, r1, r3
    13be:	0018      	movs	r0, r3
    13c0:	0039      	movs	r1, r7
    13c2:	9304      	str	r3, [sp, #16]
    13c4:	f7ff fce2 	bl	d8c <__udivsi3>
    13c8:	9b01      	ldr	r3, [sp, #4]
    13ca:	4682      	mov	sl, r0
    13cc:	4343      	muls	r3, r0
    13ce:	0039      	movs	r1, r7
    13d0:	9804      	ldr	r0, [sp, #16]
    13d2:	9301      	str	r3, [sp, #4]
    13d4:	f7ff fd60 	bl	e98 <__aeabi_uidivmod>
    13d8:	9801      	ldr	r0, [sp, #4]
    13da:	040b      	lsls	r3, r1, #16
    13dc:	0431      	lsls	r1, r6, #16
    13de:	0c09      	lsrs	r1, r1, #16
    13e0:	4319      	orrs	r1, r3
    13e2:	4288      	cmp	r0, r1
    13e4:	d90d      	bls.n	1402 <__aeabi_ddiv+0x38a>
    13e6:	4653      	mov	r3, sl
    13e8:	4441      	add	r1, r8
    13ea:	3b01      	subs	r3, #1
    13ec:	4588      	cmp	r8, r1
    13ee:	d900      	bls.n	13f2 <__aeabi_ddiv+0x37a>
    13f0:	e0e8      	b.n	15c4 <__aeabi_ddiv+0x54c>
    13f2:	4288      	cmp	r0, r1
    13f4:	d800      	bhi.n	13f8 <__aeabi_ddiv+0x380>
    13f6:	e0e5      	b.n	15c4 <__aeabi_ddiv+0x54c>
    13f8:	2302      	movs	r3, #2
    13fa:	425b      	negs	r3, r3
    13fc:	469c      	mov	ip, r3
    13fe:	4441      	add	r1, r8
    1400:	44e2      	add	sl, ip
    1402:	9b01      	ldr	r3, [sp, #4]
    1404:	042d      	lsls	r5, r5, #16
    1406:	1ace      	subs	r6, r1, r3
    1408:	4651      	mov	r1, sl
    140a:	4329      	orrs	r1, r5
    140c:	9d05      	ldr	r5, [sp, #20]
    140e:	464f      	mov	r7, r9
    1410:	002a      	movs	r2, r5
    1412:	040b      	lsls	r3, r1, #16
    1414:	0c08      	lsrs	r0, r1, #16
    1416:	0c1b      	lsrs	r3, r3, #16
    1418:	435a      	muls	r2, r3
    141a:	4345      	muls	r5, r0
    141c:	437b      	muls	r3, r7
    141e:	4378      	muls	r0, r7
    1420:	195b      	adds	r3, r3, r5
    1422:	0c17      	lsrs	r7, r2, #16
    1424:	18fb      	adds	r3, r7, r3
    1426:	429d      	cmp	r5, r3
    1428:	d903      	bls.n	1432 <__aeabi_ddiv+0x3ba>
    142a:	2580      	movs	r5, #128	; 0x80
    142c:	026d      	lsls	r5, r5, #9
    142e:	46ac      	mov	ip, r5
    1430:	4460      	add	r0, ip
    1432:	0c1d      	lsrs	r5, r3, #16
    1434:	0412      	lsls	r2, r2, #16
    1436:	041b      	lsls	r3, r3, #16
    1438:	0c12      	lsrs	r2, r2, #16
    143a:	1828      	adds	r0, r5, r0
    143c:	189b      	adds	r3, r3, r2
    143e:	4286      	cmp	r6, r0
    1440:	d200      	bcs.n	1444 <__aeabi_ddiv+0x3cc>
    1442:	e093      	b.n	156c <__aeabi_ddiv+0x4f4>
    1444:	d100      	bne.n	1448 <__aeabi_ddiv+0x3d0>
    1446:	e08e      	b.n	1566 <__aeabi_ddiv+0x4ee>
    1448:	2301      	movs	r3, #1
    144a:	4319      	orrs	r1, r3
    144c:	4ba0      	ldr	r3, [pc, #640]	; (16d0 <__aeabi_ddiv+0x658>)
    144e:	18e3      	adds	r3, r4, r3
    1450:	2b00      	cmp	r3, #0
    1452:	dc00      	bgt.n	1456 <__aeabi_ddiv+0x3de>
    1454:	e099      	b.n	158a <__aeabi_ddiv+0x512>
    1456:	074a      	lsls	r2, r1, #29
    1458:	d000      	beq.n	145c <__aeabi_ddiv+0x3e4>
    145a:	e09e      	b.n	159a <__aeabi_ddiv+0x522>
    145c:	465a      	mov	r2, fp
    145e:	01d2      	lsls	r2, r2, #7
    1460:	d506      	bpl.n	1470 <__aeabi_ddiv+0x3f8>
    1462:	465a      	mov	r2, fp
    1464:	4b9b      	ldr	r3, [pc, #620]	; (16d4 <__aeabi_ddiv+0x65c>)
    1466:	401a      	ands	r2, r3
    1468:	2380      	movs	r3, #128	; 0x80
    146a:	4693      	mov	fp, r2
    146c:	00db      	lsls	r3, r3, #3
    146e:	18e3      	adds	r3, r4, r3
    1470:	4a99      	ldr	r2, [pc, #612]	; (16d8 <__aeabi_ddiv+0x660>)
    1472:	4293      	cmp	r3, r2
    1474:	dd68      	ble.n	1548 <__aeabi_ddiv+0x4d0>
    1476:	2301      	movs	r3, #1
    1478:	9a02      	ldr	r2, [sp, #8]
    147a:	4c98      	ldr	r4, [pc, #608]	; (16dc <__aeabi_ddiv+0x664>)
    147c:	401a      	ands	r2, r3
    147e:	2300      	movs	r3, #0
    1480:	4694      	mov	ip, r2
    1482:	4698      	mov	r8, r3
    1484:	2200      	movs	r2, #0
    1486:	e6c5      	b.n	1214 <__aeabi_ddiv+0x19c>
    1488:	2280      	movs	r2, #128	; 0x80
    148a:	464b      	mov	r3, r9
    148c:	0312      	lsls	r2, r2, #12
    148e:	4213      	tst	r3, r2
    1490:	d00a      	beq.n	14a8 <__aeabi_ddiv+0x430>
    1492:	465b      	mov	r3, fp
    1494:	4213      	tst	r3, r2
    1496:	d106      	bne.n	14a6 <__aeabi_ddiv+0x42e>
    1498:	431a      	orrs	r2, r3
    149a:	0312      	lsls	r2, r2, #12
    149c:	0b12      	lsrs	r2, r2, #12
    149e:	46ac      	mov	ip, r5
    14a0:	4688      	mov	r8, r1
    14a2:	4c8e      	ldr	r4, [pc, #568]	; (16dc <__aeabi_ddiv+0x664>)
    14a4:	e6b6      	b.n	1214 <__aeabi_ddiv+0x19c>
    14a6:	464b      	mov	r3, r9
    14a8:	431a      	orrs	r2, r3
    14aa:	0312      	lsls	r2, r2, #12
    14ac:	0b12      	lsrs	r2, r2, #12
    14ae:	46bc      	mov	ip, r7
    14b0:	4c8a      	ldr	r4, [pc, #552]	; (16dc <__aeabi_ddiv+0x664>)
    14b2:	e6af      	b.n	1214 <__aeabi_ddiv+0x19c>
    14b4:	0003      	movs	r3, r0
    14b6:	465a      	mov	r2, fp
    14b8:	3b28      	subs	r3, #40	; 0x28
    14ba:	409a      	lsls	r2, r3
    14bc:	2300      	movs	r3, #0
    14be:	4691      	mov	r9, r2
    14c0:	4698      	mov	r8, r3
    14c2:	e657      	b.n	1174 <__aeabi_ddiv+0xfc>
    14c4:	4658      	mov	r0, fp
    14c6:	f000 fca9 	bl	1e1c <__clzsi2>
    14ca:	3020      	adds	r0, #32
    14cc:	e640      	b.n	1150 <__aeabi_ddiv+0xd8>
    14ce:	0003      	movs	r3, r0
    14d0:	4652      	mov	r2, sl
    14d2:	3b28      	subs	r3, #40	; 0x28
    14d4:	409a      	lsls	r2, r3
    14d6:	2100      	movs	r1, #0
    14d8:	4693      	mov	fp, r2
    14da:	e677      	b.n	11cc <__aeabi_ddiv+0x154>
    14dc:	f000 fc9e 	bl	1e1c <__clzsi2>
    14e0:	3020      	adds	r0, #32
    14e2:	e65f      	b.n	11a4 <__aeabi_ddiv+0x12c>
    14e4:	4588      	cmp	r8, r1
    14e6:	d200      	bcs.n	14ea <__aeabi_ddiv+0x472>
    14e8:	e6c7      	b.n	127a <__aeabi_ddiv+0x202>
    14ea:	464b      	mov	r3, r9
    14ec:	07de      	lsls	r6, r3, #31
    14ee:	085d      	lsrs	r5, r3, #1
    14f0:	4643      	mov	r3, r8
    14f2:	085b      	lsrs	r3, r3, #1
    14f4:	431e      	orrs	r6, r3
    14f6:	4643      	mov	r3, r8
    14f8:	07db      	lsls	r3, r3, #31
    14fa:	469a      	mov	sl, r3
    14fc:	e6c2      	b.n	1284 <__aeabi_ddiv+0x20c>
    14fe:	2500      	movs	r5, #0
    1500:	4592      	cmp	sl, r2
    1502:	d300      	bcc.n	1506 <__aeabi_ddiv+0x48e>
    1504:	e733      	b.n	136e <__aeabi_ddiv+0x2f6>
    1506:	9e03      	ldr	r6, [sp, #12]
    1508:	4659      	mov	r1, fp
    150a:	46b4      	mov	ip, r6
    150c:	44e2      	add	sl, ip
    150e:	45b2      	cmp	sl, r6
    1510:	41ad      	sbcs	r5, r5
    1512:	426d      	negs	r5, r5
    1514:	4445      	add	r5, r8
    1516:	18eb      	adds	r3, r5, r3
    1518:	3901      	subs	r1, #1
    151a:	4598      	cmp	r8, r3
    151c:	d207      	bcs.n	152e <__aeabi_ddiv+0x4b6>
    151e:	4298      	cmp	r0, r3
    1520:	d900      	bls.n	1524 <__aeabi_ddiv+0x4ac>
    1522:	e07f      	b.n	1624 <__aeabi_ddiv+0x5ac>
    1524:	d100      	bne.n	1528 <__aeabi_ddiv+0x4b0>
    1526:	e0bc      	b.n	16a2 <__aeabi_ddiv+0x62a>
    1528:	1a1d      	subs	r5, r3, r0
    152a:	468b      	mov	fp, r1
    152c:	e71f      	b.n	136e <__aeabi_ddiv+0x2f6>
    152e:	4598      	cmp	r8, r3
    1530:	d1fa      	bne.n	1528 <__aeabi_ddiv+0x4b0>
    1532:	9d03      	ldr	r5, [sp, #12]
    1534:	4555      	cmp	r5, sl
    1536:	d9f2      	bls.n	151e <__aeabi_ddiv+0x4a6>
    1538:	4643      	mov	r3, r8
    153a:	468b      	mov	fp, r1
    153c:	1a1d      	subs	r5, r3, r0
    153e:	e716      	b.n	136e <__aeabi_ddiv+0x2f6>
    1540:	469b      	mov	fp, r3
    1542:	e6ca      	b.n	12da <__aeabi_ddiv+0x262>
    1544:	0015      	movs	r5, r2
    1546:	e6e7      	b.n	1318 <__aeabi_ddiv+0x2a0>
    1548:	465a      	mov	r2, fp
    154a:	08c9      	lsrs	r1, r1, #3
    154c:	0752      	lsls	r2, r2, #29
    154e:	430a      	orrs	r2, r1
    1550:	055b      	lsls	r3, r3, #21
    1552:	4690      	mov	r8, r2
    1554:	0d5c      	lsrs	r4, r3, #21
    1556:	465a      	mov	r2, fp
    1558:	2301      	movs	r3, #1
    155a:	9902      	ldr	r1, [sp, #8]
    155c:	0252      	lsls	r2, r2, #9
    155e:	4019      	ands	r1, r3
    1560:	0b12      	lsrs	r2, r2, #12
    1562:	468c      	mov	ip, r1
    1564:	e656      	b.n	1214 <__aeabi_ddiv+0x19c>
    1566:	2b00      	cmp	r3, #0
    1568:	d100      	bne.n	156c <__aeabi_ddiv+0x4f4>
    156a:	e76f      	b.n	144c <__aeabi_ddiv+0x3d4>
    156c:	4446      	add	r6, r8
    156e:	1e4a      	subs	r2, r1, #1
    1570:	45b0      	cmp	r8, r6
    1572:	d929      	bls.n	15c8 <__aeabi_ddiv+0x550>
    1574:	0011      	movs	r1, r2
    1576:	4286      	cmp	r6, r0
    1578:	d000      	beq.n	157c <__aeabi_ddiv+0x504>
    157a:	e765      	b.n	1448 <__aeabi_ddiv+0x3d0>
    157c:	9a03      	ldr	r2, [sp, #12]
    157e:	4293      	cmp	r3, r2
    1580:	d000      	beq.n	1584 <__aeabi_ddiv+0x50c>
    1582:	e761      	b.n	1448 <__aeabi_ddiv+0x3d0>
    1584:	e762      	b.n	144c <__aeabi_ddiv+0x3d4>
    1586:	2101      	movs	r1, #1
    1588:	4249      	negs	r1, r1
    158a:	2001      	movs	r0, #1
    158c:	1ac2      	subs	r2, r0, r3
    158e:	2a38      	cmp	r2, #56	; 0x38
    1590:	dd21      	ble.n	15d6 <__aeabi_ddiv+0x55e>
    1592:	9b02      	ldr	r3, [sp, #8]
    1594:	4003      	ands	r3, r0
    1596:	469c      	mov	ip, r3
    1598:	e638      	b.n	120c <__aeabi_ddiv+0x194>
    159a:	220f      	movs	r2, #15
    159c:	400a      	ands	r2, r1
    159e:	2a04      	cmp	r2, #4
    15a0:	d100      	bne.n	15a4 <__aeabi_ddiv+0x52c>
    15a2:	e75b      	b.n	145c <__aeabi_ddiv+0x3e4>
    15a4:	000a      	movs	r2, r1
    15a6:	1d11      	adds	r1, r2, #4
    15a8:	4291      	cmp	r1, r2
    15aa:	4192      	sbcs	r2, r2
    15ac:	4252      	negs	r2, r2
    15ae:	4493      	add	fp, r2
    15b0:	e754      	b.n	145c <__aeabi_ddiv+0x3e4>
    15b2:	4b47      	ldr	r3, [pc, #284]	; (16d0 <__aeabi_ddiv+0x658>)
    15b4:	18e3      	adds	r3, r4, r3
    15b6:	2b00      	cmp	r3, #0
    15b8:	dde5      	ble.n	1586 <__aeabi_ddiv+0x50e>
    15ba:	2201      	movs	r2, #1
    15bc:	4252      	negs	r2, r2
    15be:	e7f2      	b.n	15a6 <__aeabi_ddiv+0x52e>
    15c0:	001d      	movs	r5, r3
    15c2:	e6fa      	b.n	13ba <__aeabi_ddiv+0x342>
    15c4:	469a      	mov	sl, r3
    15c6:	e71c      	b.n	1402 <__aeabi_ddiv+0x38a>
    15c8:	42b0      	cmp	r0, r6
    15ca:	d839      	bhi.n	1640 <__aeabi_ddiv+0x5c8>
    15cc:	d06e      	beq.n	16ac <__aeabi_ddiv+0x634>
    15ce:	0011      	movs	r1, r2
    15d0:	e73a      	b.n	1448 <__aeabi_ddiv+0x3d0>
    15d2:	9302      	str	r3, [sp, #8]
    15d4:	e73a      	b.n	144c <__aeabi_ddiv+0x3d4>
    15d6:	2a1f      	cmp	r2, #31
    15d8:	dc3c      	bgt.n	1654 <__aeabi_ddiv+0x5dc>
    15da:	2320      	movs	r3, #32
    15dc:	1a9b      	subs	r3, r3, r2
    15de:	000c      	movs	r4, r1
    15e0:	4658      	mov	r0, fp
    15e2:	4099      	lsls	r1, r3
    15e4:	4098      	lsls	r0, r3
    15e6:	1e4b      	subs	r3, r1, #1
    15e8:	4199      	sbcs	r1, r3
    15ea:	465b      	mov	r3, fp
    15ec:	40d4      	lsrs	r4, r2
    15ee:	40d3      	lsrs	r3, r2
    15f0:	4320      	orrs	r0, r4
    15f2:	4308      	orrs	r0, r1
    15f4:	001a      	movs	r2, r3
    15f6:	0743      	lsls	r3, r0, #29
    15f8:	d009      	beq.n	160e <__aeabi_ddiv+0x596>
    15fa:	230f      	movs	r3, #15
    15fc:	4003      	ands	r3, r0
    15fe:	2b04      	cmp	r3, #4
    1600:	d005      	beq.n	160e <__aeabi_ddiv+0x596>
    1602:	0001      	movs	r1, r0
    1604:	1d08      	adds	r0, r1, #4
    1606:	4288      	cmp	r0, r1
    1608:	419b      	sbcs	r3, r3
    160a:	425b      	negs	r3, r3
    160c:	18d2      	adds	r2, r2, r3
    160e:	0213      	lsls	r3, r2, #8
    1610:	d53a      	bpl.n	1688 <__aeabi_ddiv+0x610>
    1612:	2301      	movs	r3, #1
    1614:	9a02      	ldr	r2, [sp, #8]
    1616:	2401      	movs	r4, #1
    1618:	401a      	ands	r2, r3
    161a:	2300      	movs	r3, #0
    161c:	4694      	mov	ip, r2
    161e:	4698      	mov	r8, r3
    1620:	2200      	movs	r2, #0
    1622:	e5f7      	b.n	1214 <__aeabi_ddiv+0x19c>
    1624:	2102      	movs	r1, #2
    1626:	4249      	negs	r1, r1
    1628:	468c      	mov	ip, r1
    162a:	9d03      	ldr	r5, [sp, #12]
    162c:	44e3      	add	fp, ip
    162e:	46ac      	mov	ip, r5
    1630:	44e2      	add	sl, ip
    1632:	45aa      	cmp	sl, r5
    1634:	41ad      	sbcs	r5, r5
    1636:	426d      	negs	r5, r5
    1638:	4445      	add	r5, r8
    163a:	18ed      	adds	r5, r5, r3
    163c:	1a2d      	subs	r5, r5, r0
    163e:	e696      	b.n	136e <__aeabi_ddiv+0x2f6>
    1640:	1e8a      	subs	r2, r1, #2
    1642:	9903      	ldr	r1, [sp, #12]
    1644:	004d      	lsls	r5, r1, #1
    1646:	428d      	cmp	r5, r1
    1648:	4189      	sbcs	r1, r1
    164a:	4249      	negs	r1, r1
    164c:	4441      	add	r1, r8
    164e:	1876      	adds	r6, r6, r1
    1650:	9503      	str	r5, [sp, #12]
    1652:	e78f      	b.n	1574 <__aeabi_ddiv+0x4fc>
    1654:	201f      	movs	r0, #31
    1656:	4240      	negs	r0, r0
    1658:	1ac3      	subs	r3, r0, r3
    165a:	4658      	mov	r0, fp
    165c:	40d8      	lsrs	r0, r3
    165e:	0003      	movs	r3, r0
    1660:	2a20      	cmp	r2, #32
    1662:	d028      	beq.n	16b6 <__aeabi_ddiv+0x63e>
    1664:	2040      	movs	r0, #64	; 0x40
    1666:	465d      	mov	r5, fp
    1668:	1a82      	subs	r2, r0, r2
    166a:	4095      	lsls	r5, r2
    166c:	4329      	orrs	r1, r5
    166e:	1e4a      	subs	r2, r1, #1
    1670:	4191      	sbcs	r1, r2
    1672:	4319      	orrs	r1, r3
    1674:	2307      	movs	r3, #7
    1676:	2200      	movs	r2, #0
    1678:	400b      	ands	r3, r1
    167a:	d009      	beq.n	1690 <__aeabi_ddiv+0x618>
    167c:	230f      	movs	r3, #15
    167e:	2200      	movs	r2, #0
    1680:	400b      	ands	r3, r1
    1682:	0008      	movs	r0, r1
    1684:	2b04      	cmp	r3, #4
    1686:	d1bd      	bne.n	1604 <__aeabi_ddiv+0x58c>
    1688:	0001      	movs	r1, r0
    168a:	0753      	lsls	r3, r2, #29
    168c:	0252      	lsls	r2, r2, #9
    168e:	0b12      	lsrs	r2, r2, #12
    1690:	08c9      	lsrs	r1, r1, #3
    1692:	4319      	orrs	r1, r3
    1694:	2301      	movs	r3, #1
    1696:	4688      	mov	r8, r1
    1698:	9902      	ldr	r1, [sp, #8]
    169a:	2400      	movs	r4, #0
    169c:	4019      	ands	r1, r3
    169e:	468c      	mov	ip, r1
    16a0:	e5b8      	b.n	1214 <__aeabi_ddiv+0x19c>
    16a2:	4552      	cmp	r2, sl
    16a4:	d8be      	bhi.n	1624 <__aeabi_ddiv+0x5ac>
    16a6:	468b      	mov	fp, r1
    16a8:	2500      	movs	r5, #0
    16aa:	e660      	b.n	136e <__aeabi_ddiv+0x2f6>
    16ac:	9d03      	ldr	r5, [sp, #12]
    16ae:	429d      	cmp	r5, r3
    16b0:	d3c6      	bcc.n	1640 <__aeabi_ddiv+0x5c8>
    16b2:	0011      	movs	r1, r2
    16b4:	e762      	b.n	157c <__aeabi_ddiv+0x504>
    16b6:	2500      	movs	r5, #0
    16b8:	e7d8      	b.n	166c <__aeabi_ddiv+0x5f4>
    16ba:	2280      	movs	r2, #128	; 0x80
    16bc:	465b      	mov	r3, fp
    16be:	0312      	lsls	r2, r2, #12
    16c0:	431a      	orrs	r2, r3
    16c2:	9b01      	ldr	r3, [sp, #4]
    16c4:	0312      	lsls	r2, r2, #12
    16c6:	0b12      	lsrs	r2, r2, #12
    16c8:	469c      	mov	ip, r3
    16ca:	4688      	mov	r8, r1
    16cc:	4c03      	ldr	r4, [pc, #12]	; (16dc <__aeabi_ddiv+0x664>)
    16ce:	e5a1      	b.n	1214 <__aeabi_ddiv+0x19c>
    16d0:	000003ff 	.word	0x000003ff
    16d4:	feffffff 	.word	0xfeffffff
    16d8:	000007fe 	.word	0x000007fe
    16dc:	000007ff 	.word	0x000007ff

000016e0 <__aeabi_dmul>:
    16e0:	b5f0      	push	{r4, r5, r6, r7, lr}
    16e2:	4657      	mov	r7, sl
    16e4:	4645      	mov	r5, r8
    16e6:	46de      	mov	lr, fp
    16e8:	464e      	mov	r6, r9
    16ea:	b5e0      	push	{r5, r6, r7, lr}
    16ec:	030c      	lsls	r4, r1, #12
    16ee:	4698      	mov	r8, r3
    16f0:	004e      	lsls	r6, r1, #1
    16f2:	0b23      	lsrs	r3, r4, #12
    16f4:	b087      	sub	sp, #28
    16f6:	0007      	movs	r7, r0
    16f8:	4692      	mov	sl, r2
    16fa:	469b      	mov	fp, r3
    16fc:	0d76      	lsrs	r6, r6, #21
    16fe:	0fcd      	lsrs	r5, r1, #31
    1700:	2e00      	cmp	r6, #0
    1702:	d06b      	beq.n	17dc <__aeabi_dmul+0xfc>
    1704:	4b6d      	ldr	r3, [pc, #436]	; (18bc <__aeabi_dmul+0x1dc>)
    1706:	429e      	cmp	r6, r3
    1708:	d035      	beq.n	1776 <__aeabi_dmul+0x96>
    170a:	2480      	movs	r4, #128	; 0x80
    170c:	465b      	mov	r3, fp
    170e:	0f42      	lsrs	r2, r0, #29
    1710:	0424      	lsls	r4, r4, #16
    1712:	00db      	lsls	r3, r3, #3
    1714:	4314      	orrs	r4, r2
    1716:	431c      	orrs	r4, r3
    1718:	00c3      	lsls	r3, r0, #3
    171a:	4699      	mov	r9, r3
    171c:	4b68      	ldr	r3, [pc, #416]	; (18c0 <__aeabi_dmul+0x1e0>)
    171e:	46a3      	mov	fp, r4
    1720:	469c      	mov	ip, r3
    1722:	2300      	movs	r3, #0
    1724:	2700      	movs	r7, #0
    1726:	4466      	add	r6, ip
    1728:	9302      	str	r3, [sp, #8]
    172a:	4643      	mov	r3, r8
    172c:	031c      	lsls	r4, r3, #12
    172e:	005a      	lsls	r2, r3, #1
    1730:	0fdb      	lsrs	r3, r3, #31
    1732:	4650      	mov	r0, sl
    1734:	0b24      	lsrs	r4, r4, #12
    1736:	0d52      	lsrs	r2, r2, #21
    1738:	4698      	mov	r8, r3
    173a:	d100      	bne.n	173e <__aeabi_dmul+0x5e>
    173c:	e076      	b.n	182c <__aeabi_dmul+0x14c>
    173e:	4b5f      	ldr	r3, [pc, #380]	; (18bc <__aeabi_dmul+0x1dc>)
    1740:	429a      	cmp	r2, r3
    1742:	d06d      	beq.n	1820 <__aeabi_dmul+0x140>
    1744:	2380      	movs	r3, #128	; 0x80
    1746:	0f41      	lsrs	r1, r0, #29
    1748:	041b      	lsls	r3, r3, #16
    174a:	430b      	orrs	r3, r1
    174c:	495c      	ldr	r1, [pc, #368]	; (18c0 <__aeabi_dmul+0x1e0>)
    174e:	00e4      	lsls	r4, r4, #3
    1750:	468c      	mov	ip, r1
    1752:	431c      	orrs	r4, r3
    1754:	00c3      	lsls	r3, r0, #3
    1756:	2000      	movs	r0, #0
    1758:	4462      	add	r2, ip
    175a:	4641      	mov	r1, r8
    175c:	18b6      	adds	r6, r6, r2
    175e:	4069      	eors	r1, r5
    1760:	1c72      	adds	r2, r6, #1
    1762:	9101      	str	r1, [sp, #4]
    1764:	4694      	mov	ip, r2
    1766:	4307      	orrs	r7, r0
    1768:	2f0f      	cmp	r7, #15
    176a:	d900      	bls.n	176e <__aeabi_dmul+0x8e>
    176c:	e0b0      	b.n	18d0 <__aeabi_dmul+0x1f0>
    176e:	4a55      	ldr	r2, [pc, #340]	; (18c4 <__aeabi_dmul+0x1e4>)
    1770:	00bf      	lsls	r7, r7, #2
    1772:	59d2      	ldr	r2, [r2, r7]
    1774:	4697      	mov	pc, r2
    1776:	465b      	mov	r3, fp
    1778:	4303      	orrs	r3, r0
    177a:	4699      	mov	r9, r3
    177c:	d000      	beq.n	1780 <__aeabi_dmul+0xa0>
    177e:	e087      	b.n	1890 <__aeabi_dmul+0x1b0>
    1780:	2300      	movs	r3, #0
    1782:	469b      	mov	fp, r3
    1784:	3302      	adds	r3, #2
    1786:	2708      	movs	r7, #8
    1788:	9302      	str	r3, [sp, #8]
    178a:	e7ce      	b.n	172a <__aeabi_dmul+0x4a>
    178c:	4642      	mov	r2, r8
    178e:	9201      	str	r2, [sp, #4]
    1790:	2802      	cmp	r0, #2
    1792:	d067      	beq.n	1864 <__aeabi_dmul+0x184>
    1794:	2803      	cmp	r0, #3
    1796:	d100      	bne.n	179a <__aeabi_dmul+0xba>
    1798:	e20e      	b.n	1bb8 <__aeabi_dmul+0x4d8>
    179a:	2801      	cmp	r0, #1
    179c:	d000      	beq.n	17a0 <__aeabi_dmul+0xc0>
    179e:	e162      	b.n	1a66 <__aeabi_dmul+0x386>
    17a0:	2300      	movs	r3, #0
    17a2:	2400      	movs	r4, #0
    17a4:	2200      	movs	r2, #0
    17a6:	4699      	mov	r9, r3
    17a8:	9901      	ldr	r1, [sp, #4]
    17aa:	4001      	ands	r1, r0
    17ac:	b2cd      	uxtb	r5, r1
    17ae:	2100      	movs	r1, #0
    17b0:	0312      	lsls	r2, r2, #12
    17b2:	0d0b      	lsrs	r3, r1, #20
    17b4:	0b12      	lsrs	r2, r2, #12
    17b6:	051b      	lsls	r3, r3, #20
    17b8:	4313      	orrs	r3, r2
    17ba:	4a43      	ldr	r2, [pc, #268]	; (18c8 <__aeabi_dmul+0x1e8>)
    17bc:	0524      	lsls	r4, r4, #20
    17be:	4013      	ands	r3, r2
    17c0:	431c      	orrs	r4, r3
    17c2:	0064      	lsls	r4, r4, #1
    17c4:	07ed      	lsls	r5, r5, #31
    17c6:	0864      	lsrs	r4, r4, #1
    17c8:	432c      	orrs	r4, r5
    17ca:	4648      	mov	r0, r9
    17cc:	0021      	movs	r1, r4
    17ce:	b007      	add	sp, #28
    17d0:	bc3c      	pop	{r2, r3, r4, r5}
    17d2:	4690      	mov	r8, r2
    17d4:	4699      	mov	r9, r3
    17d6:	46a2      	mov	sl, r4
    17d8:	46ab      	mov	fp, r5
    17da:	bdf0      	pop	{r4, r5, r6, r7, pc}
    17dc:	4303      	orrs	r3, r0
    17de:	4699      	mov	r9, r3
    17e0:	d04f      	beq.n	1882 <__aeabi_dmul+0x1a2>
    17e2:	465b      	mov	r3, fp
    17e4:	2b00      	cmp	r3, #0
    17e6:	d100      	bne.n	17ea <__aeabi_dmul+0x10a>
    17e8:	e189      	b.n	1afe <__aeabi_dmul+0x41e>
    17ea:	4658      	mov	r0, fp
    17ec:	f000 fb16 	bl	1e1c <__clzsi2>
    17f0:	0003      	movs	r3, r0
    17f2:	3b0b      	subs	r3, #11
    17f4:	2b1c      	cmp	r3, #28
    17f6:	dd00      	ble.n	17fa <__aeabi_dmul+0x11a>
    17f8:	e17a      	b.n	1af0 <__aeabi_dmul+0x410>
    17fa:	221d      	movs	r2, #29
    17fc:	1ad3      	subs	r3, r2, r3
    17fe:	003a      	movs	r2, r7
    1800:	0001      	movs	r1, r0
    1802:	465c      	mov	r4, fp
    1804:	40da      	lsrs	r2, r3
    1806:	3908      	subs	r1, #8
    1808:	408c      	lsls	r4, r1
    180a:	0013      	movs	r3, r2
    180c:	408f      	lsls	r7, r1
    180e:	4323      	orrs	r3, r4
    1810:	469b      	mov	fp, r3
    1812:	46b9      	mov	r9, r7
    1814:	2300      	movs	r3, #0
    1816:	4e2d      	ldr	r6, [pc, #180]	; (18cc <__aeabi_dmul+0x1ec>)
    1818:	2700      	movs	r7, #0
    181a:	1a36      	subs	r6, r6, r0
    181c:	9302      	str	r3, [sp, #8]
    181e:	e784      	b.n	172a <__aeabi_dmul+0x4a>
    1820:	4653      	mov	r3, sl
    1822:	4323      	orrs	r3, r4
    1824:	d12a      	bne.n	187c <__aeabi_dmul+0x19c>
    1826:	2400      	movs	r4, #0
    1828:	2002      	movs	r0, #2
    182a:	e796      	b.n	175a <__aeabi_dmul+0x7a>
    182c:	4653      	mov	r3, sl
    182e:	4323      	orrs	r3, r4
    1830:	d020      	beq.n	1874 <__aeabi_dmul+0x194>
    1832:	2c00      	cmp	r4, #0
    1834:	d100      	bne.n	1838 <__aeabi_dmul+0x158>
    1836:	e157      	b.n	1ae8 <__aeabi_dmul+0x408>
    1838:	0020      	movs	r0, r4
    183a:	f000 faef 	bl	1e1c <__clzsi2>
    183e:	0003      	movs	r3, r0
    1840:	3b0b      	subs	r3, #11
    1842:	2b1c      	cmp	r3, #28
    1844:	dd00      	ble.n	1848 <__aeabi_dmul+0x168>
    1846:	e149      	b.n	1adc <__aeabi_dmul+0x3fc>
    1848:	211d      	movs	r1, #29
    184a:	1acb      	subs	r3, r1, r3
    184c:	4651      	mov	r1, sl
    184e:	0002      	movs	r2, r0
    1850:	40d9      	lsrs	r1, r3
    1852:	4653      	mov	r3, sl
    1854:	3a08      	subs	r2, #8
    1856:	4094      	lsls	r4, r2
    1858:	4093      	lsls	r3, r2
    185a:	430c      	orrs	r4, r1
    185c:	4a1b      	ldr	r2, [pc, #108]	; (18cc <__aeabi_dmul+0x1ec>)
    185e:	1a12      	subs	r2, r2, r0
    1860:	2000      	movs	r0, #0
    1862:	e77a      	b.n	175a <__aeabi_dmul+0x7a>
    1864:	2501      	movs	r5, #1
    1866:	9b01      	ldr	r3, [sp, #4]
    1868:	4c14      	ldr	r4, [pc, #80]	; (18bc <__aeabi_dmul+0x1dc>)
    186a:	401d      	ands	r5, r3
    186c:	2300      	movs	r3, #0
    186e:	2200      	movs	r2, #0
    1870:	4699      	mov	r9, r3
    1872:	e79c      	b.n	17ae <__aeabi_dmul+0xce>
    1874:	2400      	movs	r4, #0
    1876:	2200      	movs	r2, #0
    1878:	2001      	movs	r0, #1
    187a:	e76e      	b.n	175a <__aeabi_dmul+0x7a>
    187c:	4653      	mov	r3, sl
    187e:	2003      	movs	r0, #3
    1880:	e76b      	b.n	175a <__aeabi_dmul+0x7a>
    1882:	2300      	movs	r3, #0
    1884:	469b      	mov	fp, r3
    1886:	3301      	adds	r3, #1
    1888:	2704      	movs	r7, #4
    188a:	2600      	movs	r6, #0
    188c:	9302      	str	r3, [sp, #8]
    188e:	e74c      	b.n	172a <__aeabi_dmul+0x4a>
    1890:	2303      	movs	r3, #3
    1892:	4681      	mov	r9, r0
    1894:	270c      	movs	r7, #12
    1896:	9302      	str	r3, [sp, #8]
    1898:	e747      	b.n	172a <__aeabi_dmul+0x4a>
    189a:	2280      	movs	r2, #128	; 0x80
    189c:	2300      	movs	r3, #0
    189e:	2500      	movs	r5, #0
    18a0:	0312      	lsls	r2, r2, #12
    18a2:	4699      	mov	r9, r3
    18a4:	4c05      	ldr	r4, [pc, #20]	; (18bc <__aeabi_dmul+0x1dc>)
    18a6:	e782      	b.n	17ae <__aeabi_dmul+0xce>
    18a8:	465c      	mov	r4, fp
    18aa:	464b      	mov	r3, r9
    18ac:	9802      	ldr	r0, [sp, #8]
    18ae:	e76f      	b.n	1790 <__aeabi_dmul+0xb0>
    18b0:	465c      	mov	r4, fp
    18b2:	464b      	mov	r3, r9
    18b4:	9501      	str	r5, [sp, #4]
    18b6:	9802      	ldr	r0, [sp, #8]
    18b8:	e76a      	b.n	1790 <__aeabi_dmul+0xb0>
    18ba:	46c0      	nop			; (mov r8, r8)
    18bc:	000007ff 	.word	0x000007ff
    18c0:	fffffc01 	.word	0xfffffc01
    18c4:	00003008 	.word	0x00003008
    18c8:	800fffff 	.word	0x800fffff
    18cc:	fffffc0d 	.word	0xfffffc0d
    18d0:	464a      	mov	r2, r9
    18d2:	4649      	mov	r1, r9
    18d4:	0c17      	lsrs	r7, r2, #16
    18d6:	0c1a      	lsrs	r2, r3, #16
    18d8:	041b      	lsls	r3, r3, #16
    18da:	0c1b      	lsrs	r3, r3, #16
    18dc:	0408      	lsls	r0, r1, #16
    18de:	0019      	movs	r1, r3
    18e0:	0c00      	lsrs	r0, r0, #16
    18e2:	4341      	muls	r1, r0
    18e4:	0015      	movs	r5, r2
    18e6:	4688      	mov	r8, r1
    18e8:	0019      	movs	r1, r3
    18ea:	437d      	muls	r5, r7
    18ec:	4379      	muls	r1, r7
    18ee:	9503      	str	r5, [sp, #12]
    18f0:	4689      	mov	r9, r1
    18f2:	0029      	movs	r1, r5
    18f4:	0015      	movs	r5, r2
    18f6:	4345      	muls	r5, r0
    18f8:	444d      	add	r5, r9
    18fa:	9502      	str	r5, [sp, #8]
    18fc:	4645      	mov	r5, r8
    18fe:	0c2d      	lsrs	r5, r5, #16
    1900:	46aa      	mov	sl, r5
    1902:	9d02      	ldr	r5, [sp, #8]
    1904:	4455      	add	r5, sl
    1906:	45a9      	cmp	r9, r5
    1908:	d906      	bls.n	1918 <__aeabi_dmul+0x238>
    190a:	468a      	mov	sl, r1
    190c:	2180      	movs	r1, #128	; 0x80
    190e:	0249      	lsls	r1, r1, #9
    1910:	4689      	mov	r9, r1
    1912:	44ca      	add	sl, r9
    1914:	4651      	mov	r1, sl
    1916:	9103      	str	r1, [sp, #12]
    1918:	0c29      	lsrs	r1, r5, #16
    191a:	9104      	str	r1, [sp, #16]
    191c:	4641      	mov	r1, r8
    191e:	0409      	lsls	r1, r1, #16
    1920:	042d      	lsls	r5, r5, #16
    1922:	0c09      	lsrs	r1, r1, #16
    1924:	4688      	mov	r8, r1
    1926:	0029      	movs	r1, r5
    1928:	0c25      	lsrs	r5, r4, #16
    192a:	0424      	lsls	r4, r4, #16
    192c:	4441      	add	r1, r8
    192e:	0c24      	lsrs	r4, r4, #16
    1930:	9105      	str	r1, [sp, #20]
    1932:	0021      	movs	r1, r4
    1934:	4341      	muls	r1, r0
    1936:	4688      	mov	r8, r1
    1938:	0021      	movs	r1, r4
    193a:	4379      	muls	r1, r7
    193c:	468a      	mov	sl, r1
    193e:	4368      	muls	r0, r5
    1940:	4641      	mov	r1, r8
    1942:	4450      	add	r0, sl
    1944:	4681      	mov	r9, r0
    1946:	0c08      	lsrs	r0, r1, #16
    1948:	4448      	add	r0, r9
    194a:	436f      	muls	r7, r5
    194c:	4582      	cmp	sl, r0
    194e:	d903      	bls.n	1958 <__aeabi_dmul+0x278>
    1950:	2180      	movs	r1, #128	; 0x80
    1952:	0249      	lsls	r1, r1, #9
    1954:	4689      	mov	r9, r1
    1956:	444f      	add	r7, r9
    1958:	0c01      	lsrs	r1, r0, #16
    195a:	4689      	mov	r9, r1
    195c:	0039      	movs	r1, r7
    195e:	4449      	add	r1, r9
    1960:	9102      	str	r1, [sp, #8]
    1962:	4641      	mov	r1, r8
    1964:	040f      	lsls	r7, r1, #16
    1966:	9904      	ldr	r1, [sp, #16]
    1968:	0c3f      	lsrs	r7, r7, #16
    196a:	4688      	mov	r8, r1
    196c:	0400      	lsls	r0, r0, #16
    196e:	19c0      	adds	r0, r0, r7
    1970:	4480      	add	r8, r0
    1972:	4641      	mov	r1, r8
    1974:	9104      	str	r1, [sp, #16]
    1976:	4659      	mov	r1, fp
    1978:	0c0f      	lsrs	r7, r1, #16
    197a:	0409      	lsls	r1, r1, #16
    197c:	0c09      	lsrs	r1, r1, #16
    197e:	4688      	mov	r8, r1
    1980:	4359      	muls	r1, r3
    1982:	468a      	mov	sl, r1
    1984:	0039      	movs	r1, r7
    1986:	4351      	muls	r1, r2
    1988:	4689      	mov	r9, r1
    198a:	4641      	mov	r1, r8
    198c:	434a      	muls	r2, r1
    198e:	4651      	mov	r1, sl
    1990:	0c09      	lsrs	r1, r1, #16
    1992:	468b      	mov	fp, r1
    1994:	437b      	muls	r3, r7
    1996:	18d2      	adds	r2, r2, r3
    1998:	445a      	add	r2, fp
    199a:	4293      	cmp	r3, r2
    199c:	d903      	bls.n	19a6 <__aeabi_dmul+0x2c6>
    199e:	2380      	movs	r3, #128	; 0x80
    19a0:	025b      	lsls	r3, r3, #9
    19a2:	469b      	mov	fp, r3
    19a4:	44d9      	add	r9, fp
    19a6:	4651      	mov	r1, sl
    19a8:	0409      	lsls	r1, r1, #16
    19aa:	0c09      	lsrs	r1, r1, #16
    19ac:	468a      	mov	sl, r1
    19ae:	4641      	mov	r1, r8
    19b0:	4361      	muls	r1, r4
    19b2:	437c      	muls	r4, r7
    19b4:	0c13      	lsrs	r3, r2, #16
    19b6:	0412      	lsls	r2, r2, #16
    19b8:	444b      	add	r3, r9
    19ba:	4452      	add	r2, sl
    19bc:	46a1      	mov	r9, r4
    19be:	468a      	mov	sl, r1
    19c0:	003c      	movs	r4, r7
    19c2:	4641      	mov	r1, r8
    19c4:	436c      	muls	r4, r5
    19c6:	434d      	muls	r5, r1
    19c8:	4651      	mov	r1, sl
    19ca:	444d      	add	r5, r9
    19cc:	0c0f      	lsrs	r7, r1, #16
    19ce:	197d      	adds	r5, r7, r5
    19d0:	45a9      	cmp	r9, r5
    19d2:	d903      	bls.n	19dc <__aeabi_dmul+0x2fc>
    19d4:	2180      	movs	r1, #128	; 0x80
    19d6:	0249      	lsls	r1, r1, #9
    19d8:	4688      	mov	r8, r1
    19da:	4444      	add	r4, r8
    19dc:	9f04      	ldr	r7, [sp, #16]
    19de:	9903      	ldr	r1, [sp, #12]
    19e0:	46b8      	mov	r8, r7
    19e2:	4441      	add	r1, r8
    19e4:	468b      	mov	fp, r1
    19e6:	4583      	cmp	fp, r0
    19e8:	4180      	sbcs	r0, r0
    19ea:	4241      	negs	r1, r0
    19ec:	4688      	mov	r8, r1
    19ee:	4651      	mov	r1, sl
    19f0:	0408      	lsls	r0, r1, #16
    19f2:	042f      	lsls	r7, r5, #16
    19f4:	0c00      	lsrs	r0, r0, #16
    19f6:	183f      	adds	r7, r7, r0
    19f8:	4658      	mov	r0, fp
    19fa:	9902      	ldr	r1, [sp, #8]
    19fc:	1810      	adds	r0, r2, r0
    19fe:	4689      	mov	r9, r1
    1a00:	4290      	cmp	r0, r2
    1a02:	4192      	sbcs	r2, r2
    1a04:	444f      	add	r7, r9
    1a06:	46ba      	mov	sl, r7
    1a08:	4252      	negs	r2, r2
    1a0a:	4699      	mov	r9, r3
    1a0c:	4693      	mov	fp, r2
    1a0e:	44c2      	add	sl, r8
    1a10:	44d1      	add	r9, sl
    1a12:	44cb      	add	fp, r9
    1a14:	428f      	cmp	r7, r1
    1a16:	41bf      	sbcs	r7, r7
    1a18:	45c2      	cmp	sl, r8
    1a1a:	4189      	sbcs	r1, r1
    1a1c:	4599      	cmp	r9, r3
    1a1e:	419b      	sbcs	r3, r3
    1a20:	4593      	cmp	fp, r2
    1a22:	4192      	sbcs	r2, r2
    1a24:	427f      	negs	r7, r7
    1a26:	4249      	negs	r1, r1
    1a28:	0c2d      	lsrs	r5, r5, #16
    1a2a:	4252      	negs	r2, r2
    1a2c:	430f      	orrs	r7, r1
    1a2e:	425b      	negs	r3, r3
    1a30:	4313      	orrs	r3, r2
    1a32:	197f      	adds	r7, r7, r5
    1a34:	18ff      	adds	r7, r7, r3
    1a36:	465b      	mov	r3, fp
    1a38:	193c      	adds	r4, r7, r4
    1a3a:	0ddb      	lsrs	r3, r3, #23
    1a3c:	9a05      	ldr	r2, [sp, #20]
    1a3e:	0264      	lsls	r4, r4, #9
    1a40:	431c      	orrs	r4, r3
    1a42:	0243      	lsls	r3, r0, #9
    1a44:	4313      	orrs	r3, r2
    1a46:	1e5d      	subs	r5, r3, #1
    1a48:	41ab      	sbcs	r3, r5
    1a4a:	465a      	mov	r2, fp
    1a4c:	0dc0      	lsrs	r0, r0, #23
    1a4e:	4303      	orrs	r3, r0
    1a50:	0252      	lsls	r2, r2, #9
    1a52:	4313      	orrs	r3, r2
    1a54:	01e2      	lsls	r2, r4, #7
    1a56:	d556      	bpl.n	1b06 <__aeabi_dmul+0x426>
    1a58:	2001      	movs	r0, #1
    1a5a:	085a      	lsrs	r2, r3, #1
    1a5c:	4003      	ands	r3, r0
    1a5e:	4313      	orrs	r3, r2
    1a60:	07e2      	lsls	r2, r4, #31
    1a62:	4313      	orrs	r3, r2
    1a64:	0864      	lsrs	r4, r4, #1
    1a66:	485a      	ldr	r0, [pc, #360]	; (1bd0 <__aeabi_dmul+0x4f0>)
    1a68:	4460      	add	r0, ip
    1a6a:	2800      	cmp	r0, #0
    1a6c:	dd4d      	ble.n	1b0a <__aeabi_dmul+0x42a>
    1a6e:	075a      	lsls	r2, r3, #29
    1a70:	d009      	beq.n	1a86 <__aeabi_dmul+0x3a6>
    1a72:	220f      	movs	r2, #15
    1a74:	401a      	ands	r2, r3
    1a76:	2a04      	cmp	r2, #4
    1a78:	d005      	beq.n	1a86 <__aeabi_dmul+0x3a6>
    1a7a:	1d1a      	adds	r2, r3, #4
    1a7c:	429a      	cmp	r2, r3
    1a7e:	419b      	sbcs	r3, r3
    1a80:	425b      	negs	r3, r3
    1a82:	18e4      	adds	r4, r4, r3
    1a84:	0013      	movs	r3, r2
    1a86:	01e2      	lsls	r2, r4, #7
    1a88:	d504      	bpl.n	1a94 <__aeabi_dmul+0x3b4>
    1a8a:	2080      	movs	r0, #128	; 0x80
    1a8c:	4a51      	ldr	r2, [pc, #324]	; (1bd4 <__aeabi_dmul+0x4f4>)
    1a8e:	00c0      	lsls	r0, r0, #3
    1a90:	4014      	ands	r4, r2
    1a92:	4460      	add	r0, ip
    1a94:	4a50      	ldr	r2, [pc, #320]	; (1bd8 <__aeabi_dmul+0x4f8>)
    1a96:	4290      	cmp	r0, r2
    1a98:	dd00      	ble.n	1a9c <__aeabi_dmul+0x3bc>
    1a9a:	e6e3      	b.n	1864 <__aeabi_dmul+0x184>
    1a9c:	2501      	movs	r5, #1
    1a9e:	08db      	lsrs	r3, r3, #3
    1aa0:	0762      	lsls	r2, r4, #29
    1aa2:	431a      	orrs	r2, r3
    1aa4:	0264      	lsls	r4, r4, #9
    1aa6:	9b01      	ldr	r3, [sp, #4]
    1aa8:	4691      	mov	r9, r2
    1aaa:	0b22      	lsrs	r2, r4, #12
    1aac:	0544      	lsls	r4, r0, #21
    1aae:	0d64      	lsrs	r4, r4, #21
    1ab0:	401d      	ands	r5, r3
    1ab2:	e67c      	b.n	17ae <__aeabi_dmul+0xce>
    1ab4:	2280      	movs	r2, #128	; 0x80
    1ab6:	4659      	mov	r1, fp
    1ab8:	0312      	lsls	r2, r2, #12
    1aba:	4211      	tst	r1, r2
    1abc:	d008      	beq.n	1ad0 <__aeabi_dmul+0x3f0>
    1abe:	4214      	tst	r4, r2
    1ac0:	d106      	bne.n	1ad0 <__aeabi_dmul+0x3f0>
    1ac2:	4322      	orrs	r2, r4
    1ac4:	0312      	lsls	r2, r2, #12
    1ac6:	0b12      	lsrs	r2, r2, #12
    1ac8:	4645      	mov	r5, r8
    1aca:	4699      	mov	r9, r3
    1acc:	4c43      	ldr	r4, [pc, #268]	; (1bdc <__aeabi_dmul+0x4fc>)
    1ace:	e66e      	b.n	17ae <__aeabi_dmul+0xce>
    1ad0:	465b      	mov	r3, fp
    1ad2:	431a      	orrs	r2, r3
    1ad4:	0312      	lsls	r2, r2, #12
    1ad6:	0b12      	lsrs	r2, r2, #12
    1ad8:	4c40      	ldr	r4, [pc, #256]	; (1bdc <__aeabi_dmul+0x4fc>)
    1ada:	e668      	b.n	17ae <__aeabi_dmul+0xce>
    1adc:	0003      	movs	r3, r0
    1ade:	4654      	mov	r4, sl
    1ae0:	3b28      	subs	r3, #40	; 0x28
    1ae2:	409c      	lsls	r4, r3
    1ae4:	2300      	movs	r3, #0
    1ae6:	e6b9      	b.n	185c <__aeabi_dmul+0x17c>
    1ae8:	f000 f998 	bl	1e1c <__clzsi2>
    1aec:	3020      	adds	r0, #32
    1aee:	e6a6      	b.n	183e <__aeabi_dmul+0x15e>
    1af0:	0003      	movs	r3, r0
    1af2:	3b28      	subs	r3, #40	; 0x28
    1af4:	409f      	lsls	r7, r3
    1af6:	2300      	movs	r3, #0
    1af8:	46bb      	mov	fp, r7
    1afa:	4699      	mov	r9, r3
    1afc:	e68a      	b.n	1814 <__aeabi_dmul+0x134>
    1afe:	f000 f98d 	bl	1e1c <__clzsi2>
    1b02:	3020      	adds	r0, #32
    1b04:	e674      	b.n	17f0 <__aeabi_dmul+0x110>
    1b06:	46b4      	mov	ip, r6
    1b08:	e7ad      	b.n	1a66 <__aeabi_dmul+0x386>
    1b0a:	2501      	movs	r5, #1
    1b0c:	1a2a      	subs	r2, r5, r0
    1b0e:	2a38      	cmp	r2, #56	; 0x38
    1b10:	dd06      	ble.n	1b20 <__aeabi_dmul+0x440>
    1b12:	9b01      	ldr	r3, [sp, #4]
    1b14:	2400      	movs	r4, #0
    1b16:	401d      	ands	r5, r3
    1b18:	2300      	movs	r3, #0
    1b1a:	2200      	movs	r2, #0
    1b1c:	4699      	mov	r9, r3
    1b1e:	e646      	b.n	17ae <__aeabi_dmul+0xce>
    1b20:	2a1f      	cmp	r2, #31
    1b22:	dc21      	bgt.n	1b68 <__aeabi_dmul+0x488>
    1b24:	2520      	movs	r5, #32
    1b26:	0020      	movs	r0, r4
    1b28:	1aad      	subs	r5, r5, r2
    1b2a:	001e      	movs	r6, r3
    1b2c:	40ab      	lsls	r3, r5
    1b2e:	40a8      	lsls	r0, r5
    1b30:	40d6      	lsrs	r6, r2
    1b32:	1e5d      	subs	r5, r3, #1
    1b34:	41ab      	sbcs	r3, r5
    1b36:	4330      	orrs	r0, r6
    1b38:	4318      	orrs	r0, r3
    1b3a:	40d4      	lsrs	r4, r2
    1b3c:	0743      	lsls	r3, r0, #29
    1b3e:	d009      	beq.n	1b54 <__aeabi_dmul+0x474>
    1b40:	230f      	movs	r3, #15
    1b42:	4003      	ands	r3, r0
    1b44:	2b04      	cmp	r3, #4
    1b46:	d005      	beq.n	1b54 <__aeabi_dmul+0x474>
    1b48:	0003      	movs	r3, r0
    1b4a:	1d18      	adds	r0, r3, #4
    1b4c:	4298      	cmp	r0, r3
    1b4e:	419b      	sbcs	r3, r3
    1b50:	425b      	negs	r3, r3
    1b52:	18e4      	adds	r4, r4, r3
    1b54:	0223      	lsls	r3, r4, #8
    1b56:	d521      	bpl.n	1b9c <__aeabi_dmul+0x4bc>
    1b58:	2501      	movs	r5, #1
    1b5a:	9b01      	ldr	r3, [sp, #4]
    1b5c:	2401      	movs	r4, #1
    1b5e:	401d      	ands	r5, r3
    1b60:	2300      	movs	r3, #0
    1b62:	2200      	movs	r2, #0
    1b64:	4699      	mov	r9, r3
    1b66:	e622      	b.n	17ae <__aeabi_dmul+0xce>
    1b68:	251f      	movs	r5, #31
    1b6a:	0021      	movs	r1, r4
    1b6c:	426d      	negs	r5, r5
    1b6e:	1a28      	subs	r0, r5, r0
    1b70:	40c1      	lsrs	r1, r0
    1b72:	0008      	movs	r0, r1
    1b74:	2a20      	cmp	r2, #32
    1b76:	d01d      	beq.n	1bb4 <__aeabi_dmul+0x4d4>
    1b78:	355f      	adds	r5, #95	; 0x5f
    1b7a:	1aaa      	subs	r2, r5, r2
    1b7c:	4094      	lsls	r4, r2
    1b7e:	4323      	orrs	r3, r4
    1b80:	1e5c      	subs	r4, r3, #1
    1b82:	41a3      	sbcs	r3, r4
    1b84:	2507      	movs	r5, #7
    1b86:	4303      	orrs	r3, r0
    1b88:	401d      	ands	r5, r3
    1b8a:	2200      	movs	r2, #0
    1b8c:	2d00      	cmp	r5, #0
    1b8e:	d009      	beq.n	1ba4 <__aeabi_dmul+0x4c4>
    1b90:	220f      	movs	r2, #15
    1b92:	2400      	movs	r4, #0
    1b94:	401a      	ands	r2, r3
    1b96:	0018      	movs	r0, r3
    1b98:	2a04      	cmp	r2, #4
    1b9a:	d1d6      	bne.n	1b4a <__aeabi_dmul+0x46a>
    1b9c:	0003      	movs	r3, r0
    1b9e:	0765      	lsls	r5, r4, #29
    1ba0:	0264      	lsls	r4, r4, #9
    1ba2:	0b22      	lsrs	r2, r4, #12
    1ba4:	08db      	lsrs	r3, r3, #3
    1ba6:	432b      	orrs	r3, r5
    1ba8:	2501      	movs	r5, #1
    1baa:	4699      	mov	r9, r3
    1bac:	9b01      	ldr	r3, [sp, #4]
    1bae:	2400      	movs	r4, #0
    1bb0:	401d      	ands	r5, r3
    1bb2:	e5fc      	b.n	17ae <__aeabi_dmul+0xce>
    1bb4:	2400      	movs	r4, #0
    1bb6:	e7e2      	b.n	1b7e <__aeabi_dmul+0x49e>
    1bb8:	2280      	movs	r2, #128	; 0x80
    1bba:	2501      	movs	r5, #1
    1bbc:	0312      	lsls	r2, r2, #12
    1bbe:	4322      	orrs	r2, r4
    1bc0:	9901      	ldr	r1, [sp, #4]
    1bc2:	0312      	lsls	r2, r2, #12
    1bc4:	0b12      	lsrs	r2, r2, #12
    1bc6:	400d      	ands	r5, r1
    1bc8:	4699      	mov	r9, r3
    1bca:	4c04      	ldr	r4, [pc, #16]	; (1bdc <__aeabi_dmul+0x4fc>)
    1bcc:	e5ef      	b.n	17ae <__aeabi_dmul+0xce>
    1bce:	46c0      	nop			; (mov r8, r8)
    1bd0:	000003ff 	.word	0x000003ff
    1bd4:	feffffff 	.word	0xfeffffff
    1bd8:	000007fe 	.word	0x000007fe
    1bdc:	000007ff 	.word	0x000007ff

00001be0 <__aeabi_i2d>:
    1be0:	b570      	push	{r4, r5, r6, lr}
    1be2:	2800      	cmp	r0, #0
    1be4:	d030      	beq.n	1c48 <__aeabi_i2d+0x68>
    1be6:	17c3      	asrs	r3, r0, #31
    1be8:	18c4      	adds	r4, r0, r3
    1bea:	405c      	eors	r4, r3
    1bec:	0fc5      	lsrs	r5, r0, #31
    1bee:	0020      	movs	r0, r4
    1bf0:	f000 f914 	bl	1e1c <__clzsi2>
    1bf4:	4b17      	ldr	r3, [pc, #92]	; (1c54 <__aeabi_i2d+0x74>)
    1bf6:	4a18      	ldr	r2, [pc, #96]	; (1c58 <__aeabi_i2d+0x78>)
    1bf8:	1a1b      	subs	r3, r3, r0
    1bfa:	1ad2      	subs	r2, r2, r3
    1bfc:	2a1f      	cmp	r2, #31
    1bfe:	dd18      	ble.n	1c32 <__aeabi_i2d+0x52>
    1c00:	4a16      	ldr	r2, [pc, #88]	; (1c5c <__aeabi_i2d+0x7c>)
    1c02:	1ad2      	subs	r2, r2, r3
    1c04:	4094      	lsls	r4, r2
    1c06:	2200      	movs	r2, #0
    1c08:	0324      	lsls	r4, r4, #12
    1c0a:	055b      	lsls	r3, r3, #21
    1c0c:	0b24      	lsrs	r4, r4, #12
    1c0e:	0d5b      	lsrs	r3, r3, #21
    1c10:	2100      	movs	r1, #0
    1c12:	0010      	movs	r0, r2
    1c14:	0324      	lsls	r4, r4, #12
    1c16:	0d0a      	lsrs	r2, r1, #20
    1c18:	0b24      	lsrs	r4, r4, #12
    1c1a:	0512      	lsls	r2, r2, #20
    1c1c:	4322      	orrs	r2, r4
    1c1e:	4c10      	ldr	r4, [pc, #64]	; (1c60 <__aeabi_i2d+0x80>)
    1c20:	051b      	lsls	r3, r3, #20
    1c22:	4022      	ands	r2, r4
    1c24:	4313      	orrs	r3, r2
    1c26:	005b      	lsls	r3, r3, #1
    1c28:	07ed      	lsls	r5, r5, #31
    1c2a:	085b      	lsrs	r3, r3, #1
    1c2c:	432b      	orrs	r3, r5
    1c2e:	0019      	movs	r1, r3
    1c30:	bd70      	pop	{r4, r5, r6, pc}
    1c32:	0021      	movs	r1, r4
    1c34:	4091      	lsls	r1, r2
    1c36:	000a      	movs	r2, r1
    1c38:	210b      	movs	r1, #11
    1c3a:	1a08      	subs	r0, r1, r0
    1c3c:	40c4      	lsrs	r4, r0
    1c3e:	055b      	lsls	r3, r3, #21
    1c40:	0324      	lsls	r4, r4, #12
    1c42:	0b24      	lsrs	r4, r4, #12
    1c44:	0d5b      	lsrs	r3, r3, #21
    1c46:	e7e3      	b.n	1c10 <__aeabi_i2d+0x30>
    1c48:	2500      	movs	r5, #0
    1c4a:	2300      	movs	r3, #0
    1c4c:	2400      	movs	r4, #0
    1c4e:	2200      	movs	r2, #0
    1c50:	e7de      	b.n	1c10 <__aeabi_i2d+0x30>
    1c52:	46c0      	nop			; (mov r8, r8)
    1c54:	0000041e 	.word	0x0000041e
    1c58:	00000433 	.word	0x00000433
    1c5c:	00000413 	.word	0x00000413
    1c60:	800fffff 	.word	0x800fffff

00001c64 <__aeabi_f2d>:
    1c64:	0041      	lsls	r1, r0, #1
    1c66:	0e09      	lsrs	r1, r1, #24
    1c68:	1c4b      	adds	r3, r1, #1
    1c6a:	b570      	push	{r4, r5, r6, lr}
    1c6c:	b2db      	uxtb	r3, r3
    1c6e:	0246      	lsls	r6, r0, #9
    1c70:	0a75      	lsrs	r5, r6, #9
    1c72:	0fc4      	lsrs	r4, r0, #31
    1c74:	2b01      	cmp	r3, #1
    1c76:	dd14      	ble.n	1ca2 <__aeabi_f2d+0x3e>
    1c78:	23e0      	movs	r3, #224	; 0xe0
    1c7a:	009b      	lsls	r3, r3, #2
    1c7c:	076d      	lsls	r5, r5, #29
    1c7e:	0b36      	lsrs	r6, r6, #12
    1c80:	18cb      	adds	r3, r1, r3
    1c82:	2100      	movs	r1, #0
    1c84:	0d0a      	lsrs	r2, r1, #20
    1c86:	0028      	movs	r0, r5
    1c88:	0512      	lsls	r2, r2, #20
    1c8a:	4d1c      	ldr	r5, [pc, #112]	; (1cfc <__aeabi_f2d+0x98>)
    1c8c:	4332      	orrs	r2, r6
    1c8e:	055b      	lsls	r3, r3, #21
    1c90:	402a      	ands	r2, r5
    1c92:	085b      	lsrs	r3, r3, #1
    1c94:	4313      	orrs	r3, r2
    1c96:	005b      	lsls	r3, r3, #1
    1c98:	07e4      	lsls	r4, r4, #31
    1c9a:	085b      	lsrs	r3, r3, #1
    1c9c:	4323      	orrs	r3, r4
    1c9e:	0019      	movs	r1, r3
    1ca0:	bd70      	pop	{r4, r5, r6, pc}
    1ca2:	2900      	cmp	r1, #0
    1ca4:	d114      	bne.n	1cd0 <__aeabi_f2d+0x6c>
    1ca6:	2d00      	cmp	r5, #0
    1ca8:	d01e      	beq.n	1ce8 <__aeabi_f2d+0x84>
    1caa:	0028      	movs	r0, r5
    1cac:	f000 f8b6 	bl	1e1c <__clzsi2>
    1cb0:	280a      	cmp	r0, #10
    1cb2:	dc1c      	bgt.n	1cee <__aeabi_f2d+0x8a>
    1cb4:	230b      	movs	r3, #11
    1cb6:	002a      	movs	r2, r5
    1cb8:	1a1b      	subs	r3, r3, r0
    1cba:	40da      	lsrs	r2, r3
    1cbc:	0003      	movs	r3, r0
    1cbe:	3315      	adds	r3, #21
    1cc0:	409d      	lsls	r5, r3
    1cc2:	4b0f      	ldr	r3, [pc, #60]	; (1d00 <__aeabi_f2d+0x9c>)
    1cc4:	0312      	lsls	r2, r2, #12
    1cc6:	1a1b      	subs	r3, r3, r0
    1cc8:	055b      	lsls	r3, r3, #21
    1cca:	0b16      	lsrs	r6, r2, #12
    1ccc:	0d5b      	lsrs	r3, r3, #21
    1cce:	e7d8      	b.n	1c82 <__aeabi_f2d+0x1e>
    1cd0:	2d00      	cmp	r5, #0
    1cd2:	d006      	beq.n	1ce2 <__aeabi_f2d+0x7e>
    1cd4:	0b32      	lsrs	r2, r6, #12
    1cd6:	2680      	movs	r6, #128	; 0x80
    1cd8:	0336      	lsls	r6, r6, #12
    1cda:	076d      	lsls	r5, r5, #29
    1cdc:	4316      	orrs	r6, r2
    1cde:	4b09      	ldr	r3, [pc, #36]	; (1d04 <__aeabi_f2d+0xa0>)
    1ce0:	e7cf      	b.n	1c82 <__aeabi_f2d+0x1e>
    1ce2:	4b08      	ldr	r3, [pc, #32]	; (1d04 <__aeabi_f2d+0xa0>)
    1ce4:	2600      	movs	r6, #0
    1ce6:	e7cc      	b.n	1c82 <__aeabi_f2d+0x1e>
    1ce8:	2300      	movs	r3, #0
    1cea:	2600      	movs	r6, #0
    1cec:	e7c9      	b.n	1c82 <__aeabi_f2d+0x1e>
    1cee:	0003      	movs	r3, r0
    1cf0:	002a      	movs	r2, r5
    1cf2:	3b0b      	subs	r3, #11
    1cf4:	409a      	lsls	r2, r3
    1cf6:	2500      	movs	r5, #0
    1cf8:	e7e3      	b.n	1cc2 <__aeabi_f2d+0x5e>
    1cfa:	46c0      	nop			; (mov r8, r8)
    1cfc:	800fffff 	.word	0x800fffff
    1d00:	00000389 	.word	0x00000389
    1d04:	000007ff 	.word	0x000007ff

00001d08 <__aeabi_d2f>:
    1d08:	b5f0      	push	{r4, r5, r6, r7, lr}
    1d0a:	004c      	lsls	r4, r1, #1
    1d0c:	0d64      	lsrs	r4, r4, #21
    1d0e:	030b      	lsls	r3, r1, #12
    1d10:	1c62      	adds	r2, r4, #1
    1d12:	0f45      	lsrs	r5, r0, #29
    1d14:	0a5b      	lsrs	r3, r3, #9
    1d16:	0552      	lsls	r2, r2, #21
    1d18:	432b      	orrs	r3, r5
    1d1a:	0fc9      	lsrs	r1, r1, #31
    1d1c:	00c5      	lsls	r5, r0, #3
    1d1e:	0d52      	lsrs	r2, r2, #21
    1d20:	2a01      	cmp	r2, #1
    1d22:	dd28      	ble.n	1d76 <__aeabi_d2f+0x6e>
    1d24:	4a3a      	ldr	r2, [pc, #232]	; (1e10 <__aeabi_d2f+0x108>)
    1d26:	18a6      	adds	r6, r4, r2
    1d28:	2efe      	cmp	r6, #254	; 0xfe
    1d2a:	dc1b      	bgt.n	1d64 <__aeabi_d2f+0x5c>
    1d2c:	2e00      	cmp	r6, #0
    1d2e:	dd3e      	ble.n	1dae <__aeabi_d2f+0xa6>
    1d30:	0180      	lsls	r0, r0, #6
    1d32:	0002      	movs	r2, r0
    1d34:	1e50      	subs	r0, r2, #1
    1d36:	4182      	sbcs	r2, r0
    1d38:	0f6d      	lsrs	r5, r5, #29
    1d3a:	432a      	orrs	r2, r5
    1d3c:	00db      	lsls	r3, r3, #3
    1d3e:	4313      	orrs	r3, r2
    1d40:	075a      	lsls	r2, r3, #29
    1d42:	d004      	beq.n	1d4e <__aeabi_d2f+0x46>
    1d44:	220f      	movs	r2, #15
    1d46:	401a      	ands	r2, r3
    1d48:	2a04      	cmp	r2, #4
    1d4a:	d000      	beq.n	1d4e <__aeabi_d2f+0x46>
    1d4c:	3304      	adds	r3, #4
    1d4e:	2280      	movs	r2, #128	; 0x80
    1d50:	04d2      	lsls	r2, r2, #19
    1d52:	401a      	ands	r2, r3
    1d54:	d05a      	beq.n	1e0c <__aeabi_d2f+0x104>
    1d56:	3601      	adds	r6, #1
    1d58:	2eff      	cmp	r6, #255	; 0xff
    1d5a:	d003      	beq.n	1d64 <__aeabi_d2f+0x5c>
    1d5c:	019b      	lsls	r3, r3, #6
    1d5e:	0a5b      	lsrs	r3, r3, #9
    1d60:	b2f4      	uxtb	r4, r6
    1d62:	e001      	b.n	1d68 <__aeabi_d2f+0x60>
    1d64:	24ff      	movs	r4, #255	; 0xff
    1d66:	2300      	movs	r3, #0
    1d68:	0258      	lsls	r0, r3, #9
    1d6a:	05e4      	lsls	r4, r4, #23
    1d6c:	0a40      	lsrs	r0, r0, #9
    1d6e:	07c9      	lsls	r1, r1, #31
    1d70:	4320      	orrs	r0, r4
    1d72:	4308      	orrs	r0, r1
    1d74:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1d76:	2c00      	cmp	r4, #0
    1d78:	d007      	beq.n	1d8a <__aeabi_d2f+0x82>
    1d7a:	431d      	orrs	r5, r3
    1d7c:	d0f2      	beq.n	1d64 <__aeabi_d2f+0x5c>
    1d7e:	2080      	movs	r0, #128	; 0x80
    1d80:	00db      	lsls	r3, r3, #3
    1d82:	0480      	lsls	r0, r0, #18
    1d84:	4303      	orrs	r3, r0
    1d86:	26ff      	movs	r6, #255	; 0xff
    1d88:	e7da      	b.n	1d40 <__aeabi_d2f+0x38>
    1d8a:	432b      	orrs	r3, r5
    1d8c:	d003      	beq.n	1d96 <__aeabi_d2f+0x8e>
    1d8e:	2305      	movs	r3, #5
    1d90:	08db      	lsrs	r3, r3, #3
    1d92:	2cff      	cmp	r4, #255	; 0xff
    1d94:	d003      	beq.n	1d9e <__aeabi_d2f+0x96>
    1d96:	025b      	lsls	r3, r3, #9
    1d98:	0a5b      	lsrs	r3, r3, #9
    1d9a:	b2e4      	uxtb	r4, r4
    1d9c:	e7e4      	b.n	1d68 <__aeabi_d2f+0x60>
    1d9e:	2b00      	cmp	r3, #0
    1da0:	d032      	beq.n	1e08 <__aeabi_d2f+0x100>
    1da2:	2080      	movs	r0, #128	; 0x80
    1da4:	03c0      	lsls	r0, r0, #15
    1da6:	4303      	orrs	r3, r0
    1da8:	025b      	lsls	r3, r3, #9
    1daa:	0a5b      	lsrs	r3, r3, #9
    1dac:	e7dc      	b.n	1d68 <__aeabi_d2f+0x60>
    1dae:	0032      	movs	r2, r6
    1db0:	3217      	adds	r2, #23
    1db2:	db14      	blt.n	1dde <__aeabi_d2f+0xd6>
    1db4:	2280      	movs	r2, #128	; 0x80
    1db6:	271e      	movs	r7, #30
    1db8:	0412      	lsls	r2, r2, #16
    1dba:	4313      	orrs	r3, r2
    1dbc:	1bbf      	subs	r7, r7, r6
    1dbe:	2f1f      	cmp	r7, #31
    1dc0:	dc0f      	bgt.n	1de2 <__aeabi_d2f+0xda>
    1dc2:	4a14      	ldr	r2, [pc, #80]	; (1e14 <__aeabi_d2f+0x10c>)
    1dc4:	4694      	mov	ip, r2
    1dc6:	4464      	add	r4, ip
    1dc8:	002a      	movs	r2, r5
    1dca:	40a5      	lsls	r5, r4
    1dcc:	002e      	movs	r6, r5
    1dce:	40a3      	lsls	r3, r4
    1dd0:	1e75      	subs	r5, r6, #1
    1dd2:	41ae      	sbcs	r6, r5
    1dd4:	40fa      	lsrs	r2, r7
    1dd6:	4333      	orrs	r3, r6
    1dd8:	4313      	orrs	r3, r2
    1dda:	2600      	movs	r6, #0
    1ddc:	e7b0      	b.n	1d40 <__aeabi_d2f+0x38>
    1dde:	2400      	movs	r4, #0
    1de0:	e7d5      	b.n	1d8e <__aeabi_d2f+0x86>
    1de2:	2202      	movs	r2, #2
    1de4:	4252      	negs	r2, r2
    1de6:	1b96      	subs	r6, r2, r6
    1de8:	001a      	movs	r2, r3
    1dea:	40f2      	lsrs	r2, r6
    1dec:	2f20      	cmp	r7, #32
    1dee:	d009      	beq.n	1e04 <__aeabi_d2f+0xfc>
    1df0:	4809      	ldr	r0, [pc, #36]	; (1e18 <__aeabi_d2f+0x110>)
    1df2:	4684      	mov	ip, r0
    1df4:	4464      	add	r4, ip
    1df6:	40a3      	lsls	r3, r4
    1df8:	432b      	orrs	r3, r5
    1dfa:	1e5d      	subs	r5, r3, #1
    1dfc:	41ab      	sbcs	r3, r5
    1dfe:	2600      	movs	r6, #0
    1e00:	4313      	orrs	r3, r2
    1e02:	e79d      	b.n	1d40 <__aeabi_d2f+0x38>
    1e04:	2300      	movs	r3, #0
    1e06:	e7f7      	b.n	1df8 <__aeabi_d2f+0xf0>
    1e08:	2300      	movs	r3, #0
    1e0a:	e7ad      	b.n	1d68 <__aeabi_d2f+0x60>
    1e0c:	0034      	movs	r4, r6
    1e0e:	e7bf      	b.n	1d90 <__aeabi_d2f+0x88>
    1e10:	fffffc80 	.word	0xfffffc80
    1e14:	fffffc82 	.word	0xfffffc82
    1e18:	fffffca2 	.word	0xfffffca2

00001e1c <__clzsi2>:
    1e1c:	211c      	movs	r1, #28
    1e1e:	2301      	movs	r3, #1
    1e20:	041b      	lsls	r3, r3, #16
    1e22:	4298      	cmp	r0, r3
    1e24:	d301      	bcc.n	1e2a <__clzsi2+0xe>
    1e26:	0c00      	lsrs	r0, r0, #16
    1e28:	3910      	subs	r1, #16
    1e2a:	0a1b      	lsrs	r3, r3, #8
    1e2c:	4298      	cmp	r0, r3
    1e2e:	d301      	bcc.n	1e34 <__clzsi2+0x18>
    1e30:	0a00      	lsrs	r0, r0, #8
    1e32:	3908      	subs	r1, #8
    1e34:	091b      	lsrs	r3, r3, #4
    1e36:	4298      	cmp	r0, r3
    1e38:	d301      	bcc.n	1e3e <__clzsi2+0x22>
    1e3a:	0900      	lsrs	r0, r0, #4
    1e3c:	3904      	subs	r1, #4
    1e3e:	a202      	add	r2, pc, #8	; (adr r2, 1e48 <__clzsi2+0x2c>)
    1e40:	5c10      	ldrb	r0, [r2, r0]
    1e42:	1840      	adds	r0, r0, r1
    1e44:	4770      	bx	lr
    1e46:	46c0      	nop			; (mov r8, r8)
    1e48:	02020304 	.word	0x02020304
    1e4c:	01010101 	.word	0x01010101
	...

00001e58 <__libc_init_array>:
    1e58:	b570      	push	{r4, r5, r6, lr}
    1e5a:	2600      	movs	r6, #0
    1e5c:	4d0c      	ldr	r5, [pc, #48]	; (1e90 <__libc_init_array+0x38>)
    1e5e:	4c0d      	ldr	r4, [pc, #52]	; (1e94 <__libc_init_array+0x3c>)
    1e60:	1b64      	subs	r4, r4, r5
    1e62:	10a4      	asrs	r4, r4, #2
    1e64:	42a6      	cmp	r6, r4
    1e66:	d109      	bne.n	1e7c <__libc_init_array+0x24>
    1e68:	2600      	movs	r6, #0
    1e6a:	f001 f939 	bl	30e0 <_init>
    1e6e:	4d0a      	ldr	r5, [pc, #40]	; (1e98 <__libc_init_array+0x40>)
    1e70:	4c0a      	ldr	r4, [pc, #40]	; (1e9c <__libc_init_array+0x44>)
    1e72:	1b64      	subs	r4, r4, r5
    1e74:	10a4      	asrs	r4, r4, #2
    1e76:	42a6      	cmp	r6, r4
    1e78:	d105      	bne.n	1e86 <__libc_init_array+0x2e>
    1e7a:	bd70      	pop	{r4, r5, r6, pc}
    1e7c:	00b3      	lsls	r3, r6, #2
    1e7e:	58eb      	ldr	r3, [r5, r3]
    1e80:	4798      	blx	r3
    1e82:	3601      	adds	r6, #1
    1e84:	e7ee      	b.n	1e64 <__libc_init_array+0xc>
    1e86:	00b3      	lsls	r3, r6, #2
    1e88:	58eb      	ldr	r3, [r5, r3]
    1e8a:	4798      	blx	r3
    1e8c:	3601      	adds	r6, #1
    1e8e:	e7f2      	b.n	1e76 <__libc_init_array+0x1e>
    1e90:	000030ec 	.word	0x000030ec
    1e94:	000030ec 	.word	0x000030ec
    1e98:	000030ec 	.word	0x000030ec
    1e9c:	000030f0 	.word	0x000030f0

00001ea0 <memset>:
    1ea0:	0003      	movs	r3, r0
    1ea2:	1882      	adds	r2, r0, r2
    1ea4:	4293      	cmp	r3, r2
    1ea6:	d100      	bne.n	1eaa <memset+0xa>
    1ea8:	4770      	bx	lr
    1eaa:	7019      	strb	r1, [r3, #0]
    1eac:	3301      	adds	r3, #1
    1eae:	e7f9      	b.n	1ea4 <memset+0x4>

00001eb0 <iprintf>:
    1eb0:	b40f      	push	{r0, r1, r2, r3}
    1eb2:	4b0b      	ldr	r3, [pc, #44]	; (1ee0 <iprintf+0x30>)
    1eb4:	b513      	push	{r0, r1, r4, lr}
    1eb6:	681c      	ldr	r4, [r3, #0]
    1eb8:	2c00      	cmp	r4, #0
    1eba:	d005      	beq.n	1ec8 <iprintf+0x18>
    1ebc:	69a3      	ldr	r3, [r4, #24]
    1ebe:	2b00      	cmp	r3, #0
    1ec0:	d102      	bne.n	1ec8 <iprintf+0x18>
    1ec2:	0020      	movs	r0, r4
    1ec4:	f000 fa88 	bl	23d8 <__sinit>
    1ec8:	ab05      	add	r3, sp, #20
    1eca:	9a04      	ldr	r2, [sp, #16]
    1ecc:	68a1      	ldr	r1, [r4, #8]
    1ece:	0020      	movs	r0, r4
    1ed0:	9301      	str	r3, [sp, #4]
    1ed2:	f000 fc5d 	bl	2790 <_vfiprintf_r>
    1ed6:	bc16      	pop	{r1, r2, r4}
    1ed8:	bc08      	pop	{r3}
    1eda:	b004      	add	sp, #16
    1edc:	4718      	bx	r3
    1ede:	46c0      	nop			; (mov r8, r8)
    1ee0:	20000000 	.word	0x20000000

00001ee4 <setbuf>:
    1ee4:	424a      	negs	r2, r1
    1ee6:	414a      	adcs	r2, r1
    1ee8:	2380      	movs	r3, #128	; 0x80
    1eea:	b510      	push	{r4, lr}
    1eec:	0052      	lsls	r2, r2, #1
    1eee:	00db      	lsls	r3, r3, #3
    1ef0:	f000 f802 	bl	1ef8 <setvbuf>
    1ef4:	bd10      	pop	{r4, pc}
	...

00001ef8 <setvbuf>:
    1ef8:	b5f0      	push	{r4, r5, r6, r7, lr}
    1efa:	001d      	movs	r5, r3
    1efc:	4b4f      	ldr	r3, [pc, #316]	; (203c <STACK_SIZE+0x3c>)
    1efe:	b085      	sub	sp, #20
    1f00:	681e      	ldr	r6, [r3, #0]
    1f02:	0004      	movs	r4, r0
    1f04:	000f      	movs	r7, r1
    1f06:	9200      	str	r2, [sp, #0]
    1f08:	2e00      	cmp	r6, #0
    1f0a:	d005      	beq.n	1f18 <setvbuf+0x20>
    1f0c:	69b3      	ldr	r3, [r6, #24]
    1f0e:	2b00      	cmp	r3, #0
    1f10:	d102      	bne.n	1f18 <setvbuf+0x20>
    1f12:	0030      	movs	r0, r6
    1f14:	f000 fa60 	bl	23d8 <__sinit>
    1f18:	4b49      	ldr	r3, [pc, #292]	; (2040 <STACK_SIZE+0x40>)
    1f1a:	429c      	cmp	r4, r3
    1f1c:	d150      	bne.n	1fc0 <setvbuf+0xc8>
    1f1e:	6874      	ldr	r4, [r6, #4]
    1f20:	9b00      	ldr	r3, [sp, #0]
    1f22:	2b02      	cmp	r3, #2
    1f24:	d005      	beq.n	1f32 <setvbuf+0x3a>
    1f26:	2b01      	cmp	r3, #1
    1f28:	d900      	bls.n	1f2c <setvbuf+0x34>
    1f2a:	e084      	b.n	2036 <STACK_SIZE+0x36>
    1f2c:	2d00      	cmp	r5, #0
    1f2e:	da00      	bge.n	1f32 <setvbuf+0x3a>
    1f30:	e081      	b.n	2036 <STACK_SIZE+0x36>
    1f32:	0021      	movs	r1, r4
    1f34:	0030      	movs	r0, r6
    1f36:	f000 f9e1 	bl	22fc <_fflush_r>
    1f3a:	6b61      	ldr	r1, [r4, #52]	; 0x34
    1f3c:	2900      	cmp	r1, #0
    1f3e:	d008      	beq.n	1f52 <setvbuf+0x5a>
    1f40:	0023      	movs	r3, r4
    1f42:	3344      	adds	r3, #68	; 0x44
    1f44:	4299      	cmp	r1, r3
    1f46:	d002      	beq.n	1f4e <setvbuf+0x56>
    1f48:	0030      	movs	r0, r6
    1f4a:	f000 fb51 	bl	25f0 <_free_r>
    1f4e:	2300      	movs	r3, #0
    1f50:	6363      	str	r3, [r4, #52]	; 0x34
    1f52:	2300      	movs	r3, #0
    1f54:	61a3      	str	r3, [r4, #24]
    1f56:	6063      	str	r3, [r4, #4]
    1f58:	89a3      	ldrh	r3, [r4, #12]
    1f5a:	061b      	lsls	r3, r3, #24
    1f5c:	d503      	bpl.n	1f66 <setvbuf+0x6e>
    1f5e:	6921      	ldr	r1, [r4, #16]
    1f60:	0030      	movs	r0, r6
    1f62:	f000 fb45 	bl	25f0 <_free_r>
    1f66:	89a3      	ldrh	r3, [r4, #12]
    1f68:	4a36      	ldr	r2, [pc, #216]	; (2044 <STACK_SIZE+0x44>)
    1f6a:	4013      	ands	r3, r2
    1f6c:	81a3      	strh	r3, [r4, #12]
    1f6e:	9b00      	ldr	r3, [sp, #0]
    1f70:	2b02      	cmp	r3, #2
    1f72:	d05a      	beq.n	202a <STACK_SIZE+0x2a>
    1f74:	ab03      	add	r3, sp, #12
    1f76:	aa02      	add	r2, sp, #8
    1f78:	0021      	movs	r1, r4
    1f7a:	0030      	movs	r0, r6
    1f7c:	f000 fac2 	bl	2504 <__swhatbuf_r>
    1f80:	89a3      	ldrh	r3, [r4, #12]
    1f82:	4318      	orrs	r0, r3
    1f84:	81a0      	strh	r0, [r4, #12]
    1f86:	2d00      	cmp	r5, #0
    1f88:	d124      	bne.n	1fd4 <setvbuf+0xdc>
    1f8a:	9d02      	ldr	r5, [sp, #8]
    1f8c:	0028      	movs	r0, r5
    1f8e:	f000 fb25 	bl	25dc <malloc>
    1f92:	9501      	str	r5, [sp, #4]
    1f94:	1e07      	subs	r7, r0, #0
    1f96:	d142      	bne.n	201e <STACK_SIZE+0x1e>
    1f98:	9b02      	ldr	r3, [sp, #8]
    1f9a:	9301      	str	r3, [sp, #4]
    1f9c:	42ab      	cmp	r3, r5
    1f9e:	d139      	bne.n	2014 <STACK_SIZE+0x14>
    1fa0:	2001      	movs	r0, #1
    1fa2:	4240      	negs	r0, r0
    1fa4:	2302      	movs	r3, #2
    1fa6:	89a2      	ldrh	r2, [r4, #12]
    1fa8:	4313      	orrs	r3, r2
    1faa:	81a3      	strh	r3, [r4, #12]
    1fac:	2300      	movs	r3, #0
    1fae:	60a3      	str	r3, [r4, #8]
    1fb0:	0023      	movs	r3, r4
    1fb2:	3347      	adds	r3, #71	; 0x47
    1fb4:	6023      	str	r3, [r4, #0]
    1fb6:	6123      	str	r3, [r4, #16]
    1fb8:	2301      	movs	r3, #1
    1fba:	6163      	str	r3, [r4, #20]
    1fbc:	b005      	add	sp, #20
    1fbe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1fc0:	4b21      	ldr	r3, [pc, #132]	; (2048 <STACK_SIZE+0x48>)
    1fc2:	429c      	cmp	r4, r3
    1fc4:	d101      	bne.n	1fca <setvbuf+0xd2>
    1fc6:	68b4      	ldr	r4, [r6, #8]
    1fc8:	e7aa      	b.n	1f20 <setvbuf+0x28>
    1fca:	4b20      	ldr	r3, [pc, #128]	; (204c <STACK_SIZE+0x4c>)
    1fcc:	429c      	cmp	r4, r3
    1fce:	d1a7      	bne.n	1f20 <setvbuf+0x28>
    1fd0:	68f4      	ldr	r4, [r6, #12]
    1fd2:	e7a5      	b.n	1f20 <setvbuf+0x28>
    1fd4:	2f00      	cmp	r7, #0
    1fd6:	d0d9      	beq.n	1f8c <setvbuf+0x94>
    1fd8:	69b3      	ldr	r3, [r6, #24]
    1fda:	2b00      	cmp	r3, #0
    1fdc:	d102      	bne.n	1fe4 <setvbuf+0xec>
    1fde:	0030      	movs	r0, r6
    1fe0:	f000 f9fa 	bl	23d8 <__sinit>
    1fe4:	9b00      	ldr	r3, [sp, #0]
    1fe6:	2b01      	cmp	r3, #1
    1fe8:	d103      	bne.n	1ff2 <setvbuf+0xfa>
    1fea:	89a3      	ldrh	r3, [r4, #12]
    1fec:	9a00      	ldr	r2, [sp, #0]
    1fee:	431a      	orrs	r2, r3
    1ff0:	81a2      	strh	r2, [r4, #12]
    1ff2:	2008      	movs	r0, #8
    1ff4:	89a3      	ldrh	r3, [r4, #12]
    1ff6:	6027      	str	r7, [r4, #0]
    1ff8:	6127      	str	r7, [r4, #16]
    1ffa:	6165      	str	r5, [r4, #20]
    1ffc:	4018      	ands	r0, r3
    1ffe:	d018      	beq.n	2032 <STACK_SIZE+0x32>
    2000:	2001      	movs	r0, #1
    2002:	4018      	ands	r0, r3
    2004:	2300      	movs	r3, #0
    2006:	4298      	cmp	r0, r3
    2008:	d011      	beq.n	202e <STACK_SIZE+0x2e>
    200a:	426d      	negs	r5, r5
    200c:	60a3      	str	r3, [r4, #8]
    200e:	61a5      	str	r5, [r4, #24]
    2010:	0018      	movs	r0, r3
    2012:	e7d3      	b.n	1fbc <setvbuf+0xc4>
    2014:	9801      	ldr	r0, [sp, #4]
    2016:	f000 fae1 	bl	25dc <malloc>
    201a:	1e07      	subs	r7, r0, #0
    201c:	d0c0      	beq.n	1fa0 <setvbuf+0xa8>
    201e:	2380      	movs	r3, #128	; 0x80
    2020:	89a2      	ldrh	r2, [r4, #12]
    2022:	9d01      	ldr	r5, [sp, #4]
    2024:	4313      	orrs	r3, r2
    2026:	81a3      	strh	r3, [r4, #12]
    2028:	e7d6      	b.n	1fd8 <setvbuf+0xe0>
    202a:	2000      	movs	r0, #0
    202c:	e7ba      	b.n	1fa4 <setvbuf+0xac>
    202e:	60a5      	str	r5, [r4, #8]
    2030:	e7c4      	b.n	1fbc <setvbuf+0xc4>
    2032:	60a0      	str	r0, [r4, #8]
    2034:	e7c2      	b.n	1fbc <setvbuf+0xc4>
    2036:	2001      	movs	r0, #1
    2038:	4240      	negs	r0, r0
    203a:	e7bf      	b.n	1fbc <setvbuf+0xc4>
    203c:	20000000 	.word	0x20000000
    2040:	0000306c 	.word	0x0000306c
    2044:	fffff35c 	.word	0xfffff35c
    2048:	0000308c 	.word	0x0000308c
    204c:	0000304c 	.word	0x0000304c

00002050 <__swbuf_r>:
    2050:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2052:	0005      	movs	r5, r0
    2054:	000e      	movs	r6, r1
    2056:	0014      	movs	r4, r2
    2058:	2800      	cmp	r0, #0
    205a:	d004      	beq.n	2066 <__swbuf_r+0x16>
    205c:	6983      	ldr	r3, [r0, #24]
    205e:	2b00      	cmp	r3, #0
    2060:	d101      	bne.n	2066 <__swbuf_r+0x16>
    2062:	f000 f9b9 	bl	23d8 <__sinit>
    2066:	4b22      	ldr	r3, [pc, #136]	; (20f0 <__swbuf_r+0xa0>)
    2068:	429c      	cmp	r4, r3
    206a:	d12d      	bne.n	20c8 <__swbuf_r+0x78>
    206c:	686c      	ldr	r4, [r5, #4]
    206e:	69a3      	ldr	r3, [r4, #24]
    2070:	60a3      	str	r3, [r4, #8]
    2072:	89a3      	ldrh	r3, [r4, #12]
    2074:	071b      	lsls	r3, r3, #28
    2076:	d531      	bpl.n	20dc <__swbuf_r+0x8c>
    2078:	6923      	ldr	r3, [r4, #16]
    207a:	2b00      	cmp	r3, #0
    207c:	d02e      	beq.n	20dc <__swbuf_r+0x8c>
    207e:	6823      	ldr	r3, [r4, #0]
    2080:	6922      	ldr	r2, [r4, #16]
    2082:	b2f7      	uxtb	r7, r6
    2084:	1a98      	subs	r0, r3, r2
    2086:	6963      	ldr	r3, [r4, #20]
    2088:	b2f6      	uxtb	r6, r6
    208a:	4298      	cmp	r0, r3
    208c:	db05      	blt.n	209a <__swbuf_r+0x4a>
    208e:	0021      	movs	r1, r4
    2090:	0028      	movs	r0, r5
    2092:	f000 f933 	bl	22fc <_fflush_r>
    2096:	2800      	cmp	r0, #0
    2098:	d126      	bne.n	20e8 <__swbuf_r+0x98>
    209a:	68a3      	ldr	r3, [r4, #8]
    209c:	3001      	adds	r0, #1
    209e:	3b01      	subs	r3, #1
    20a0:	60a3      	str	r3, [r4, #8]
    20a2:	6823      	ldr	r3, [r4, #0]
    20a4:	1c5a      	adds	r2, r3, #1
    20a6:	6022      	str	r2, [r4, #0]
    20a8:	701f      	strb	r7, [r3, #0]
    20aa:	6963      	ldr	r3, [r4, #20]
    20ac:	4298      	cmp	r0, r3
    20ae:	d004      	beq.n	20ba <__swbuf_r+0x6a>
    20b0:	89a3      	ldrh	r3, [r4, #12]
    20b2:	07db      	lsls	r3, r3, #31
    20b4:	d51a      	bpl.n	20ec <__swbuf_r+0x9c>
    20b6:	2e0a      	cmp	r6, #10
    20b8:	d118      	bne.n	20ec <__swbuf_r+0x9c>
    20ba:	0021      	movs	r1, r4
    20bc:	0028      	movs	r0, r5
    20be:	f000 f91d 	bl	22fc <_fflush_r>
    20c2:	2800      	cmp	r0, #0
    20c4:	d012      	beq.n	20ec <__swbuf_r+0x9c>
    20c6:	e00f      	b.n	20e8 <__swbuf_r+0x98>
    20c8:	4b0a      	ldr	r3, [pc, #40]	; (20f4 <__swbuf_r+0xa4>)
    20ca:	429c      	cmp	r4, r3
    20cc:	d101      	bne.n	20d2 <__swbuf_r+0x82>
    20ce:	68ac      	ldr	r4, [r5, #8]
    20d0:	e7cd      	b.n	206e <__swbuf_r+0x1e>
    20d2:	4b09      	ldr	r3, [pc, #36]	; (20f8 <__swbuf_r+0xa8>)
    20d4:	429c      	cmp	r4, r3
    20d6:	d1ca      	bne.n	206e <__swbuf_r+0x1e>
    20d8:	68ec      	ldr	r4, [r5, #12]
    20da:	e7c8      	b.n	206e <__swbuf_r+0x1e>
    20dc:	0021      	movs	r1, r4
    20de:	0028      	movs	r0, r5
    20e0:	f000 f80c 	bl	20fc <__swsetup_r>
    20e4:	2800      	cmp	r0, #0
    20e6:	d0ca      	beq.n	207e <__swbuf_r+0x2e>
    20e8:	2601      	movs	r6, #1
    20ea:	4276      	negs	r6, r6
    20ec:	0030      	movs	r0, r6
    20ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    20f0:	0000306c 	.word	0x0000306c
    20f4:	0000308c 	.word	0x0000308c
    20f8:	0000304c 	.word	0x0000304c

000020fc <__swsetup_r>:
    20fc:	4b36      	ldr	r3, [pc, #216]	; (21d8 <__swsetup_r+0xdc>)
    20fe:	b570      	push	{r4, r5, r6, lr}
    2100:	681d      	ldr	r5, [r3, #0]
    2102:	0006      	movs	r6, r0
    2104:	000c      	movs	r4, r1
    2106:	2d00      	cmp	r5, #0
    2108:	d005      	beq.n	2116 <__swsetup_r+0x1a>
    210a:	69ab      	ldr	r3, [r5, #24]
    210c:	2b00      	cmp	r3, #0
    210e:	d102      	bne.n	2116 <__swsetup_r+0x1a>
    2110:	0028      	movs	r0, r5
    2112:	f000 f961 	bl	23d8 <__sinit>
    2116:	4b31      	ldr	r3, [pc, #196]	; (21dc <__swsetup_r+0xe0>)
    2118:	429c      	cmp	r4, r3
    211a:	d10f      	bne.n	213c <__swsetup_r+0x40>
    211c:	686c      	ldr	r4, [r5, #4]
    211e:	230c      	movs	r3, #12
    2120:	5ee2      	ldrsh	r2, [r4, r3]
    2122:	b293      	uxth	r3, r2
    2124:	0719      	lsls	r1, r3, #28
    2126:	d42d      	bmi.n	2184 <__swsetup_r+0x88>
    2128:	06d9      	lsls	r1, r3, #27
    212a:	d411      	bmi.n	2150 <__swsetup_r+0x54>
    212c:	2309      	movs	r3, #9
    212e:	2001      	movs	r0, #1
    2130:	6033      	str	r3, [r6, #0]
    2132:	3337      	adds	r3, #55	; 0x37
    2134:	4313      	orrs	r3, r2
    2136:	81a3      	strh	r3, [r4, #12]
    2138:	4240      	negs	r0, r0
    213a:	bd70      	pop	{r4, r5, r6, pc}
    213c:	4b28      	ldr	r3, [pc, #160]	; (21e0 <__swsetup_r+0xe4>)
    213e:	429c      	cmp	r4, r3
    2140:	d101      	bne.n	2146 <__swsetup_r+0x4a>
    2142:	68ac      	ldr	r4, [r5, #8]
    2144:	e7eb      	b.n	211e <__swsetup_r+0x22>
    2146:	4b27      	ldr	r3, [pc, #156]	; (21e4 <__swsetup_r+0xe8>)
    2148:	429c      	cmp	r4, r3
    214a:	d1e8      	bne.n	211e <__swsetup_r+0x22>
    214c:	68ec      	ldr	r4, [r5, #12]
    214e:	e7e6      	b.n	211e <__swsetup_r+0x22>
    2150:	075b      	lsls	r3, r3, #29
    2152:	d513      	bpl.n	217c <__swsetup_r+0x80>
    2154:	6b61      	ldr	r1, [r4, #52]	; 0x34
    2156:	2900      	cmp	r1, #0
    2158:	d008      	beq.n	216c <__swsetup_r+0x70>
    215a:	0023      	movs	r3, r4
    215c:	3344      	adds	r3, #68	; 0x44
    215e:	4299      	cmp	r1, r3
    2160:	d002      	beq.n	2168 <__swsetup_r+0x6c>
    2162:	0030      	movs	r0, r6
    2164:	f000 fa44 	bl	25f0 <_free_r>
    2168:	2300      	movs	r3, #0
    216a:	6363      	str	r3, [r4, #52]	; 0x34
    216c:	2224      	movs	r2, #36	; 0x24
    216e:	89a3      	ldrh	r3, [r4, #12]
    2170:	4393      	bics	r3, r2
    2172:	81a3      	strh	r3, [r4, #12]
    2174:	2300      	movs	r3, #0
    2176:	6063      	str	r3, [r4, #4]
    2178:	6923      	ldr	r3, [r4, #16]
    217a:	6023      	str	r3, [r4, #0]
    217c:	2308      	movs	r3, #8
    217e:	89a2      	ldrh	r2, [r4, #12]
    2180:	4313      	orrs	r3, r2
    2182:	81a3      	strh	r3, [r4, #12]
    2184:	6923      	ldr	r3, [r4, #16]
    2186:	2b00      	cmp	r3, #0
    2188:	d10b      	bne.n	21a2 <__swsetup_r+0xa6>
    218a:	21a0      	movs	r1, #160	; 0xa0
    218c:	2280      	movs	r2, #128	; 0x80
    218e:	89a3      	ldrh	r3, [r4, #12]
    2190:	0089      	lsls	r1, r1, #2
    2192:	0092      	lsls	r2, r2, #2
    2194:	400b      	ands	r3, r1
    2196:	4293      	cmp	r3, r2
    2198:	d003      	beq.n	21a2 <__swsetup_r+0xa6>
    219a:	0021      	movs	r1, r4
    219c:	0030      	movs	r0, r6
    219e:	f000 f9d9 	bl	2554 <__smakebuf_r>
    21a2:	2301      	movs	r3, #1
    21a4:	89a2      	ldrh	r2, [r4, #12]
    21a6:	4013      	ands	r3, r2
    21a8:	d011      	beq.n	21ce <__swsetup_r+0xd2>
    21aa:	2300      	movs	r3, #0
    21ac:	60a3      	str	r3, [r4, #8]
    21ae:	6963      	ldr	r3, [r4, #20]
    21b0:	425b      	negs	r3, r3
    21b2:	61a3      	str	r3, [r4, #24]
    21b4:	2000      	movs	r0, #0
    21b6:	6923      	ldr	r3, [r4, #16]
    21b8:	4283      	cmp	r3, r0
    21ba:	d1be      	bne.n	213a <__swsetup_r+0x3e>
    21bc:	230c      	movs	r3, #12
    21be:	5ee2      	ldrsh	r2, [r4, r3]
    21c0:	0613      	lsls	r3, r2, #24
    21c2:	d5ba      	bpl.n	213a <__swsetup_r+0x3e>
    21c4:	2340      	movs	r3, #64	; 0x40
    21c6:	4313      	orrs	r3, r2
    21c8:	81a3      	strh	r3, [r4, #12]
    21ca:	3801      	subs	r0, #1
    21cc:	e7b5      	b.n	213a <__swsetup_r+0x3e>
    21ce:	0792      	lsls	r2, r2, #30
    21d0:	d400      	bmi.n	21d4 <__swsetup_r+0xd8>
    21d2:	6963      	ldr	r3, [r4, #20]
    21d4:	60a3      	str	r3, [r4, #8]
    21d6:	e7ed      	b.n	21b4 <__swsetup_r+0xb8>
    21d8:	20000000 	.word	0x20000000
    21dc:	0000306c 	.word	0x0000306c
    21e0:	0000308c 	.word	0x0000308c
    21e4:	0000304c 	.word	0x0000304c

000021e8 <__sflush_r>:
    21e8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    21ea:	898a      	ldrh	r2, [r1, #12]
    21ec:	0005      	movs	r5, r0
    21ee:	000c      	movs	r4, r1
    21f0:	0713      	lsls	r3, r2, #28
    21f2:	d460      	bmi.n	22b6 <__sflush_r+0xce>
    21f4:	684b      	ldr	r3, [r1, #4]
    21f6:	2b00      	cmp	r3, #0
    21f8:	dc04      	bgt.n	2204 <__sflush_r+0x1c>
    21fa:	6c0b      	ldr	r3, [r1, #64]	; 0x40
    21fc:	2b00      	cmp	r3, #0
    21fe:	dc01      	bgt.n	2204 <__sflush_r+0x1c>
    2200:	2000      	movs	r0, #0
    2202:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    2204:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    2206:	2f00      	cmp	r7, #0
    2208:	d0fa      	beq.n	2200 <__sflush_r+0x18>
    220a:	2300      	movs	r3, #0
    220c:	682e      	ldr	r6, [r5, #0]
    220e:	602b      	str	r3, [r5, #0]
    2210:	2380      	movs	r3, #128	; 0x80
    2212:	015b      	lsls	r3, r3, #5
    2214:	401a      	ands	r2, r3
    2216:	d034      	beq.n	2282 <__sflush_r+0x9a>
    2218:	6d60      	ldr	r0, [r4, #84]	; 0x54
    221a:	89a3      	ldrh	r3, [r4, #12]
    221c:	075b      	lsls	r3, r3, #29
    221e:	d506      	bpl.n	222e <__sflush_r+0x46>
    2220:	6863      	ldr	r3, [r4, #4]
    2222:	1ac0      	subs	r0, r0, r3
    2224:	6b63      	ldr	r3, [r4, #52]	; 0x34
    2226:	2b00      	cmp	r3, #0
    2228:	d001      	beq.n	222e <__sflush_r+0x46>
    222a:	6c23      	ldr	r3, [r4, #64]	; 0x40
    222c:	1ac0      	subs	r0, r0, r3
    222e:	0002      	movs	r2, r0
    2230:	6a21      	ldr	r1, [r4, #32]
    2232:	2300      	movs	r3, #0
    2234:	0028      	movs	r0, r5
    2236:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    2238:	47b8      	blx	r7
    223a:	89a1      	ldrh	r1, [r4, #12]
    223c:	1c43      	adds	r3, r0, #1
    223e:	d106      	bne.n	224e <__sflush_r+0x66>
    2240:	682b      	ldr	r3, [r5, #0]
    2242:	2b1d      	cmp	r3, #29
    2244:	d831      	bhi.n	22aa <__sflush_r+0xc2>
    2246:	4a2c      	ldr	r2, [pc, #176]	; (22f8 <__sflush_r+0x110>)
    2248:	40da      	lsrs	r2, r3
    224a:	07d3      	lsls	r3, r2, #31
    224c:	d52d      	bpl.n	22aa <__sflush_r+0xc2>
    224e:	2300      	movs	r3, #0
    2250:	6063      	str	r3, [r4, #4]
    2252:	6923      	ldr	r3, [r4, #16]
    2254:	6023      	str	r3, [r4, #0]
    2256:	04cb      	lsls	r3, r1, #19
    2258:	d505      	bpl.n	2266 <__sflush_r+0x7e>
    225a:	1c43      	adds	r3, r0, #1
    225c:	d102      	bne.n	2264 <__sflush_r+0x7c>
    225e:	682b      	ldr	r3, [r5, #0]
    2260:	2b00      	cmp	r3, #0
    2262:	d100      	bne.n	2266 <__sflush_r+0x7e>
    2264:	6560      	str	r0, [r4, #84]	; 0x54
    2266:	6b61      	ldr	r1, [r4, #52]	; 0x34
    2268:	602e      	str	r6, [r5, #0]
    226a:	2900      	cmp	r1, #0
    226c:	d0c8      	beq.n	2200 <__sflush_r+0x18>
    226e:	0023      	movs	r3, r4
    2270:	3344      	adds	r3, #68	; 0x44
    2272:	4299      	cmp	r1, r3
    2274:	d002      	beq.n	227c <__sflush_r+0x94>
    2276:	0028      	movs	r0, r5
    2278:	f000 f9ba 	bl	25f0 <_free_r>
    227c:	2000      	movs	r0, #0
    227e:	6360      	str	r0, [r4, #52]	; 0x34
    2280:	e7bf      	b.n	2202 <__sflush_r+0x1a>
    2282:	2301      	movs	r3, #1
    2284:	6a21      	ldr	r1, [r4, #32]
    2286:	0028      	movs	r0, r5
    2288:	47b8      	blx	r7
    228a:	1c43      	adds	r3, r0, #1
    228c:	d1c5      	bne.n	221a <__sflush_r+0x32>
    228e:	682b      	ldr	r3, [r5, #0]
    2290:	2b00      	cmp	r3, #0
    2292:	d0c2      	beq.n	221a <__sflush_r+0x32>
    2294:	2b1d      	cmp	r3, #29
    2296:	d001      	beq.n	229c <__sflush_r+0xb4>
    2298:	2b16      	cmp	r3, #22
    229a:	d101      	bne.n	22a0 <__sflush_r+0xb8>
    229c:	602e      	str	r6, [r5, #0]
    229e:	e7af      	b.n	2200 <__sflush_r+0x18>
    22a0:	2340      	movs	r3, #64	; 0x40
    22a2:	89a2      	ldrh	r2, [r4, #12]
    22a4:	4313      	orrs	r3, r2
    22a6:	81a3      	strh	r3, [r4, #12]
    22a8:	e7ab      	b.n	2202 <__sflush_r+0x1a>
    22aa:	2340      	movs	r3, #64	; 0x40
    22ac:	430b      	orrs	r3, r1
    22ae:	2001      	movs	r0, #1
    22b0:	81a3      	strh	r3, [r4, #12]
    22b2:	4240      	negs	r0, r0
    22b4:	e7a5      	b.n	2202 <__sflush_r+0x1a>
    22b6:	690f      	ldr	r7, [r1, #16]
    22b8:	2f00      	cmp	r7, #0
    22ba:	d0a1      	beq.n	2200 <__sflush_r+0x18>
    22bc:	680b      	ldr	r3, [r1, #0]
    22be:	600f      	str	r7, [r1, #0]
    22c0:	1bdb      	subs	r3, r3, r7
    22c2:	9301      	str	r3, [sp, #4]
    22c4:	2300      	movs	r3, #0
    22c6:	0792      	lsls	r2, r2, #30
    22c8:	d100      	bne.n	22cc <__sflush_r+0xe4>
    22ca:	694b      	ldr	r3, [r1, #20]
    22cc:	60a3      	str	r3, [r4, #8]
    22ce:	9b01      	ldr	r3, [sp, #4]
    22d0:	2b00      	cmp	r3, #0
    22d2:	dc00      	bgt.n	22d6 <__sflush_r+0xee>
    22d4:	e794      	b.n	2200 <__sflush_r+0x18>
    22d6:	9b01      	ldr	r3, [sp, #4]
    22d8:	003a      	movs	r2, r7
    22da:	6a21      	ldr	r1, [r4, #32]
    22dc:	0028      	movs	r0, r5
    22de:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    22e0:	47b0      	blx	r6
    22e2:	2800      	cmp	r0, #0
    22e4:	dc03      	bgt.n	22ee <__sflush_r+0x106>
    22e6:	2340      	movs	r3, #64	; 0x40
    22e8:	89a2      	ldrh	r2, [r4, #12]
    22ea:	4313      	orrs	r3, r2
    22ec:	e7df      	b.n	22ae <__sflush_r+0xc6>
    22ee:	9b01      	ldr	r3, [sp, #4]
    22f0:	183f      	adds	r7, r7, r0
    22f2:	1a1b      	subs	r3, r3, r0
    22f4:	9301      	str	r3, [sp, #4]
    22f6:	e7ea      	b.n	22ce <__sflush_r+0xe6>
    22f8:	20400001 	.word	0x20400001

000022fc <_fflush_r>:
    22fc:	690b      	ldr	r3, [r1, #16]
    22fe:	b570      	push	{r4, r5, r6, lr}
    2300:	0005      	movs	r5, r0
    2302:	000c      	movs	r4, r1
    2304:	2b00      	cmp	r3, #0
    2306:	d101      	bne.n	230c <_fflush_r+0x10>
    2308:	2000      	movs	r0, #0
    230a:	bd70      	pop	{r4, r5, r6, pc}
    230c:	2800      	cmp	r0, #0
    230e:	d004      	beq.n	231a <_fflush_r+0x1e>
    2310:	6983      	ldr	r3, [r0, #24]
    2312:	2b00      	cmp	r3, #0
    2314:	d101      	bne.n	231a <_fflush_r+0x1e>
    2316:	f000 f85f 	bl	23d8 <__sinit>
    231a:	4b0b      	ldr	r3, [pc, #44]	; (2348 <_fflush_r+0x4c>)
    231c:	429c      	cmp	r4, r3
    231e:	d109      	bne.n	2334 <_fflush_r+0x38>
    2320:	686c      	ldr	r4, [r5, #4]
    2322:	220c      	movs	r2, #12
    2324:	5ea3      	ldrsh	r3, [r4, r2]
    2326:	2b00      	cmp	r3, #0
    2328:	d0ee      	beq.n	2308 <_fflush_r+0xc>
    232a:	0021      	movs	r1, r4
    232c:	0028      	movs	r0, r5
    232e:	f7ff ff5b 	bl	21e8 <__sflush_r>
    2332:	e7ea      	b.n	230a <_fflush_r+0xe>
    2334:	4b05      	ldr	r3, [pc, #20]	; (234c <_fflush_r+0x50>)
    2336:	429c      	cmp	r4, r3
    2338:	d101      	bne.n	233e <_fflush_r+0x42>
    233a:	68ac      	ldr	r4, [r5, #8]
    233c:	e7f1      	b.n	2322 <_fflush_r+0x26>
    233e:	4b04      	ldr	r3, [pc, #16]	; (2350 <_fflush_r+0x54>)
    2340:	429c      	cmp	r4, r3
    2342:	d1ee      	bne.n	2322 <_fflush_r+0x26>
    2344:	68ec      	ldr	r4, [r5, #12]
    2346:	e7ec      	b.n	2322 <_fflush_r+0x26>
    2348:	0000306c 	.word	0x0000306c
    234c:	0000308c 	.word	0x0000308c
    2350:	0000304c 	.word	0x0000304c

00002354 <_cleanup_r>:
    2354:	b510      	push	{r4, lr}
    2356:	4902      	ldr	r1, [pc, #8]	; (2360 <_cleanup_r+0xc>)
    2358:	f000 f8b2 	bl	24c0 <_fwalk_reent>
    235c:	bd10      	pop	{r4, pc}
    235e:	46c0      	nop			; (mov r8, r8)
    2360:	000022fd 	.word	0x000022fd

00002364 <std.isra.0>:
    2364:	2300      	movs	r3, #0
    2366:	b510      	push	{r4, lr}
    2368:	0004      	movs	r4, r0
    236a:	6003      	str	r3, [r0, #0]
    236c:	6043      	str	r3, [r0, #4]
    236e:	6083      	str	r3, [r0, #8]
    2370:	8181      	strh	r1, [r0, #12]
    2372:	6643      	str	r3, [r0, #100]	; 0x64
    2374:	81c2      	strh	r2, [r0, #14]
    2376:	6103      	str	r3, [r0, #16]
    2378:	6143      	str	r3, [r0, #20]
    237a:	6183      	str	r3, [r0, #24]
    237c:	0019      	movs	r1, r3
    237e:	2208      	movs	r2, #8
    2380:	305c      	adds	r0, #92	; 0x5c
    2382:	f7ff fd8d 	bl	1ea0 <memset>
    2386:	4b05      	ldr	r3, [pc, #20]	; (239c <std.isra.0+0x38>)
    2388:	6224      	str	r4, [r4, #32]
    238a:	6263      	str	r3, [r4, #36]	; 0x24
    238c:	4b04      	ldr	r3, [pc, #16]	; (23a0 <std.isra.0+0x3c>)
    238e:	62a3      	str	r3, [r4, #40]	; 0x28
    2390:	4b04      	ldr	r3, [pc, #16]	; (23a4 <std.isra.0+0x40>)
    2392:	62e3      	str	r3, [r4, #44]	; 0x2c
    2394:	4b04      	ldr	r3, [pc, #16]	; (23a8 <std.isra.0+0x44>)
    2396:	6323      	str	r3, [r4, #48]	; 0x30
    2398:	bd10      	pop	{r4, pc}
    239a:	46c0      	nop			; (mov r8, r8)
    239c:	00002cfd 	.word	0x00002cfd
    23a0:	00002d25 	.word	0x00002d25
    23a4:	00002d5d 	.word	0x00002d5d
    23a8:	00002d89 	.word	0x00002d89

000023ac <__sfmoreglue>:
    23ac:	b570      	push	{r4, r5, r6, lr}
    23ae:	2568      	movs	r5, #104	; 0x68
    23b0:	1e4a      	subs	r2, r1, #1
    23b2:	4355      	muls	r5, r2
    23b4:	000e      	movs	r6, r1
    23b6:	0029      	movs	r1, r5
    23b8:	3174      	adds	r1, #116	; 0x74
    23ba:	f000 f963 	bl	2684 <_malloc_r>
    23be:	1e04      	subs	r4, r0, #0
    23c0:	d008      	beq.n	23d4 <__sfmoreglue+0x28>
    23c2:	2100      	movs	r1, #0
    23c4:	002a      	movs	r2, r5
    23c6:	6001      	str	r1, [r0, #0]
    23c8:	6046      	str	r6, [r0, #4]
    23ca:	300c      	adds	r0, #12
    23cc:	60a0      	str	r0, [r4, #8]
    23ce:	3268      	adds	r2, #104	; 0x68
    23d0:	f7ff fd66 	bl	1ea0 <memset>
    23d4:	0020      	movs	r0, r4
    23d6:	bd70      	pop	{r4, r5, r6, pc}

000023d8 <__sinit>:
    23d8:	6983      	ldr	r3, [r0, #24]
    23da:	b513      	push	{r0, r1, r4, lr}
    23dc:	0004      	movs	r4, r0
    23de:	2b00      	cmp	r3, #0
    23e0:	d128      	bne.n	2434 <__sinit+0x5c>
    23e2:	6483      	str	r3, [r0, #72]	; 0x48
    23e4:	64c3      	str	r3, [r0, #76]	; 0x4c
    23e6:	6503      	str	r3, [r0, #80]	; 0x50
    23e8:	4b13      	ldr	r3, [pc, #76]	; (2438 <__sinit+0x60>)
    23ea:	4a14      	ldr	r2, [pc, #80]	; (243c <__sinit+0x64>)
    23ec:	681b      	ldr	r3, [r3, #0]
    23ee:	6282      	str	r2, [r0, #40]	; 0x28
    23f0:	9301      	str	r3, [sp, #4]
    23f2:	4298      	cmp	r0, r3
    23f4:	d101      	bne.n	23fa <__sinit+0x22>
    23f6:	2301      	movs	r3, #1
    23f8:	6183      	str	r3, [r0, #24]
    23fa:	0020      	movs	r0, r4
    23fc:	f000 f820 	bl	2440 <__sfp>
    2400:	6060      	str	r0, [r4, #4]
    2402:	0020      	movs	r0, r4
    2404:	f000 f81c 	bl	2440 <__sfp>
    2408:	60a0      	str	r0, [r4, #8]
    240a:	0020      	movs	r0, r4
    240c:	f000 f818 	bl	2440 <__sfp>
    2410:	2200      	movs	r2, #0
    2412:	60e0      	str	r0, [r4, #12]
    2414:	2104      	movs	r1, #4
    2416:	6860      	ldr	r0, [r4, #4]
    2418:	f7ff ffa4 	bl	2364 <std.isra.0>
    241c:	2201      	movs	r2, #1
    241e:	2109      	movs	r1, #9
    2420:	68a0      	ldr	r0, [r4, #8]
    2422:	f7ff ff9f 	bl	2364 <std.isra.0>
    2426:	2202      	movs	r2, #2
    2428:	2112      	movs	r1, #18
    242a:	68e0      	ldr	r0, [r4, #12]
    242c:	f7ff ff9a 	bl	2364 <std.isra.0>
    2430:	2301      	movs	r3, #1
    2432:	61a3      	str	r3, [r4, #24]
    2434:	bd13      	pop	{r0, r1, r4, pc}
    2436:	46c0      	nop			; (mov r8, r8)
    2438:	00003048 	.word	0x00003048
    243c:	00002355 	.word	0x00002355

00002440 <__sfp>:
    2440:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2442:	4b1e      	ldr	r3, [pc, #120]	; (24bc <__sfp+0x7c>)
    2444:	0007      	movs	r7, r0
    2446:	681e      	ldr	r6, [r3, #0]
    2448:	69b3      	ldr	r3, [r6, #24]
    244a:	2b00      	cmp	r3, #0
    244c:	d102      	bne.n	2454 <__sfp+0x14>
    244e:	0030      	movs	r0, r6
    2450:	f7ff ffc2 	bl	23d8 <__sinit>
    2454:	3648      	adds	r6, #72	; 0x48
    2456:	68b4      	ldr	r4, [r6, #8]
    2458:	6873      	ldr	r3, [r6, #4]
    245a:	3b01      	subs	r3, #1
    245c:	d504      	bpl.n	2468 <__sfp+0x28>
    245e:	6833      	ldr	r3, [r6, #0]
    2460:	2b00      	cmp	r3, #0
    2462:	d007      	beq.n	2474 <__sfp+0x34>
    2464:	6836      	ldr	r6, [r6, #0]
    2466:	e7f6      	b.n	2456 <__sfp+0x16>
    2468:	220c      	movs	r2, #12
    246a:	5ea5      	ldrsh	r5, [r4, r2]
    246c:	2d00      	cmp	r5, #0
    246e:	d00d      	beq.n	248c <__sfp+0x4c>
    2470:	3468      	adds	r4, #104	; 0x68
    2472:	e7f2      	b.n	245a <__sfp+0x1a>
    2474:	2104      	movs	r1, #4
    2476:	0038      	movs	r0, r7
    2478:	f7ff ff98 	bl	23ac <__sfmoreglue>
    247c:	6030      	str	r0, [r6, #0]
    247e:	2800      	cmp	r0, #0
    2480:	d1f0      	bne.n	2464 <__sfp+0x24>
    2482:	230c      	movs	r3, #12
    2484:	0004      	movs	r4, r0
    2486:	603b      	str	r3, [r7, #0]
    2488:	0020      	movs	r0, r4
    248a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    248c:	2301      	movs	r3, #1
    248e:	0020      	movs	r0, r4
    2490:	425b      	negs	r3, r3
    2492:	81e3      	strh	r3, [r4, #14]
    2494:	3302      	adds	r3, #2
    2496:	81a3      	strh	r3, [r4, #12]
    2498:	6665      	str	r5, [r4, #100]	; 0x64
    249a:	6025      	str	r5, [r4, #0]
    249c:	60a5      	str	r5, [r4, #8]
    249e:	6065      	str	r5, [r4, #4]
    24a0:	6125      	str	r5, [r4, #16]
    24a2:	6165      	str	r5, [r4, #20]
    24a4:	61a5      	str	r5, [r4, #24]
    24a6:	2208      	movs	r2, #8
    24a8:	0029      	movs	r1, r5
    24aa:	305c      	adds	r0, #92	; 0x5c
    24ac:	f7ff fcf8 	bl	1ea0 <memset>
    24b0:	6365      	str	r5, [r4, #52]	; 0x34
    24b2:	63a5      	str	r5, [r4, #56]	; 0x38
    24b4:	64a5      	str	r5, [r4, #72]	; 0x48
    24b6:	64e5      	str	r5, [r4, #76]	; 0x4c
    24b8:	e7e6      	b.n	2488 <__sfp+0x48>
    24ba:	46c0      	nop			; (mov r8, r8)
    24bc:	00003048 	.word	0x00003048

000024c0 <_fwalk_reent>:
    24c0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    24c2:	0004      	movs	r4, r0
    24c4:	0007      	movs	r7, r0
    24c6:	2600      	movs	r6, #0
    24c8:	9101      	str	r1, [sp, #4]
    24ca:	3448      	adds	r4, #72	; 0x48
    24cc:	2c00      	cmp	r4, #0
    24ce:	d101      	bne.n	24d4 <_fwalk_reent+0x14>
    24d0:	0030      	movs	r0, r6
    24d2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    24d4:	6863      	ldr	r3, [r4, #4]
    24d6:	68a5      	ldr	r5, [r4, #8]
    24d8:	9300      	str	r3, [sp, #0]
    24da:	9b00      	ldr	r3, [sp, #0]
    24dc:	3b01      	subs	r3, #1
    24de:	9300      	str	r3, [sp, #0]
    24e0:	d501      	bpl.n	24e6 <_fwalk_reent+0x26>
    24e2:	6824      	ldr	r4, [r4, #0]
    24e4:	e7f2      	b.n	24cc <_fwalk_reent+0xc>
    24e6:	89ab      	ldrh	r3, [r5, #12]
    24e8:	2b01      	cmp	r3, #1
    24ea:	d908      	bls.n	24fe <_fwalk_reent+0x3e>
    24ec:	220e      	movs	r2, #14
    24ee:	5eab      	ldrsh	r3, [r5, r2]
    24f0:	3301      	adds	r3, #1
    24f2:	d004      	beq.n	24fe <_fwalk_reent+0x3e>
    24f4:	0029      	movs	r1, r5
    24f6:	0038      	movs	r0, r7
    24f8:	9b01      	ldr	r3, [sp, #4]
    24fa:	4798      	blx	r3
    24fc:	4306      	orrs	r6, r0
    24fe:	3568      	adds	r5, #104	; 0x68
    2500:	e7eb      	b.n	24da <_fwalk_reent+0x1a>
	...

00002504 <__swhatbuf_r>:
    2504:	b570      	push	{r4, r5, r6, lr}
    2506:	000e      	movs	r6, r1
    2508:	001d      	movs	r5, r3
    250a:	230e      	movs	r3, #14
    250c:	5ec9      	ldrsh	r1, [r1, r3]
    250e:	b090      	sub	sp, #64	; 0x40
    2510:	0014      	movs	r4, r2
    2512:	2900      	cmp	r1, #0
    2514:	da07      	bge.n	2526 <__swhatbuf_r+0x22>
    2516:	2300      	movs	r3, #0
    2518:	602b      	str	r3, [r5, #0]
    251a:	89b3      	ldrh	r3, [r6, #12]
    251c:	061b      	lsls	r3, r3, #24
    251e:	d411      	bmi.n	2544 <__swhatbuf_r+0x40>
    2520:	2380      	movs	r3, #128	; 0x80
    2522:	00db      	lsls	r3, r3, #3
    2524:	e00f      	b.n	2546 <__swhatbuf_r+0x42>
    2526:	aa01      	add	r2, sp, #4
    2528:	f000 fc5a 	bl	2de0 <_fstat_r>
    252c:	2800      	cmp	r0, #0
    252e:	dbf2      	blt.n	2516 <__swhatbuf_r+0x12>
    2530:	22f0      	movs	r2, #240	; 0xf0
    2532:	9b02      	ldr	r3, [sp, #8]
    2534:	0212      	lsls	r2, r2, #8
    2536:	4013      	ands	r3, r2
    2538:	4a05      	ldr	r2, [pc, #20]	; (2550 <__swhatbuf_r+0x4c>)
    253a:	189b      	adds	r3, r3, r2
    253c:	425a      	negs	r2, r3
    253e:	4153      	adcs	r3, r2
    2540:	602b      	str	r3, [r5, #0]
    2542:	e7ed      	b.n	2520 <__swhatbuf_r+0x1c>
    2544:	2340      	movs	r3, #64	; 0x40
    2546:	2000      	movs	r0, #0
    2548:	6023      	str	r3, [r4, #0]
    254a:	b010      	add	sp, #64	; 0x40
    254c:	bd70      	pop	{r4, r5, r6, pc}
    254e:	46c0      	nop			; (mov r8, r8)
    2550:	ffffe000 	.word	0xffffe000

00002554 <__smakebuf_r>:
    2554:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    2556:	2602      	movs	r6, #2
    2558:	898b      	ldrh	r3, [r1, #12]
    255a:	0005      	movs	r5, r0
    255c:	000c      	movs	r4, r1
    255e:	4233      	tst	r3, r6
    2560:	d006      	beq.n	2570 <__smakebuf_r+0x1c>
    2562:	0023      	movs	r3, r4
    2564:	3347      	adds	r3, #71	; 0x47
    2566:	6023      	str	r3, [r4, #0]
    2568:	6123      	str	r3, [r4, #16]
    256a:	2301      	movs	r3, #1
    256c:	6163      	str	r3, [r4, #20]
    256e:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
    2570:	ab01      	add	r3, sp, #4
    2572:	466a      	mov	r2, sp
    2574:	f7ff ffc6 	bl	2504 <__swhatbuf_r>
    2578:	9900      	ldr	r1, [sp, #0]
    257a:	0007      	movs	r7, r0
    257c:	0028      	movs	r0, r5
    257e:	f000 f881 	bl	2684 <_malloc_r>
    2582:	2800      	cmp	r0, #0
    2584:	d108      	bne.n	2598 <__smakebuf_r+0x44>
    2586:	220c      	movs	r2, #12
    2588:	5ea3      	ldrsh	r3, [r4, r2]
    258a:	059a      	lsls	r2, r3, #22
    258c:	d4ef      	bmi.n	256e <__smakebuf_r+0x1a>
    258e:	2203      	movs	r2, #3
    2590:	4393      	bics	r3, r2
    2592:	431e      	orrs	r6, r3
    2594:	81a6      	strh	r6, [r4, #12]
    2596:	e7e4      	b.n	2562 <__smakebuf_r+0xe>
    2598:	4b0f      	ldr	r3, [pc, #60]	; (25d8 <__smakebuf_r+0x84>)
    259a:	62ab      	str	r3, [r5, #40]	; 0x28
    259c:	2380      	movs	r3, #128	; 0x80
    259e:	89a2      	ldrh	r2, [r4, #12]
    25a0:	6020      	str	r0, [r4, #0]
    25a2:	4313      	orrs	r3, r2
    25a4:	81a3      	strh	r3, [r4, #12]
    25a6:	9b00      	ldr	r3, [sp, #0]
    25a8:	6120      	str	r0, [r4, #16]
    25aa:	6163      	str	r3, [r4, #20]
    25ac:	9b01      	ldr	r3, [sp, #4]
    25ae:	2b00      	cmp	r3, #0
    25b0:	d00d      	beq.n	25ce <__smakebuf_r+0x7a>
    25b2:	230e      	movs	r3, #14
    25b4:	5ee1      	ldrsh	r1, [r4, r3]
    25b6:	0028      	movs	r0, r5
    25b8:	f000 fc24 	bl	2e04 <_isatty_r>
    25bc:	2800      	cmp	r0, #0
    25be:	d006      	beq.n	25ce <__smakebuf_r+0x7a>
    25c0:	2203      	movs	r2, #3
    25c2:	89a3      	ldrh	r3, [r4, #12]
    25c4:	4393      	bics	r3, r2
    25c6:	001a      	movs	r2, r3
    25c8:	2301      	movs	r3, #1
    25ca:	4313      	orrs	r3, r2
    25cc:	81a3      	strh	r3, [r4, #12]
    25ce:	89a0      	ldrh	r0, [r4, #12]
    25d0:	4338      	orrs	r0, r7
    25d2:	81a0      	strh	r0, [r4, #12]
    25d4:	e7cb      	b.n	256e <__smakebuf_r+0x1a>
    25d6:	46c0      	nop			; (mov r8, r8)
    25d8:	00002355 	.word	0x00002355

000025dc <malloc>:
    25dc:	b510      	push	{r4, lr}
    25de:	4b03      	ldr	r3, [pc, #12]	; (25ec <malloc+0x10>)
    25e0:	0001      	movs	r1, r0
    25e2:	6818      	ldr	r0, [r3, #0]
    25e4:	f000 f84e 	bl	2684 <_malloc_r>
    25e8:	bd10      	pop	{r4, pc}
    25ea:	46c0      	nop			; (mov r8, r8)
    25ec:	20000000 	.word	0x20000000

000025f0 <_free_r>:
    25f0:	b570      	push	{r4, r5, r6, lr}
    25f2:	0005      	movs	r5, r0
    25f4:	2900      	cmp	r1, #0
    25f6:	d010      	beq.n	261a <_free_r+0x2a>
    25f8:	1f0c      	subs	r4, r1, #4
    25fa:	6823      	ldr	r3, [r4, #0]
    25fc:	2b00      	cmp	r3, #0
    25fe:	da00      	bge.n	2602 <_free_r+0x12>
    2600:	18e4      	adds	r4, r4, r3
    2602:	0028      	movs	r0, r5
    2604:	f000 fc2f 	bl	2e66 <__malloc_lock>
    2608:	4a1d      	ldr	r2, [pc, #116]	; (2680 <_free_r+0x90>)
    260a:	6813      	ldr	r3, [r2, #0]
    260c:	2b00      	cmp	r3, #0
    260e:	d105      	bne.n	261c <_free_r+0x2c>
    2610:	6063      	str	r3, [r4, #4]
    2612:	6014      	str	r4, [r2, #0]
    2614:	0028      	movs	r0, r5
    2616:	f000 fc27 	bl	2e68 <__malloc_unlock>
    261a:	bd70      	pop	{r4, r5, r6, pc}
    261c:	42a3      	cmp	r3, r4
    261e:	d909      	bls.n	2634 <_free_r+0x44>
    2620:	6821      	ldr	r1, [r4, #0]
    2622:	1860      	adds	r0, r4, r1
    2624:	4283      	cmp	r3, r0
    2626:	d1f3      	bne.n	2610 <_free_r+0x20>
    2628:	6818      	ldr	r0, [r3, #0]
    262a:	685b      	ldr	r3, [r3, #4]
    262c:	1841      	adds	r1, r0, r1
    262e:	6021      	str	r1, [r4, #0]
    2630:	e7ee      	b.n	2610 <_free_r+0x20>
    2632:	0013      	movs	r3, r2
    2634:	685a      	ldr	r2, [r3, #4]
    2636:	2a00      	cmp	r2, #0
    2638:	d001      	beq.n	263e <_free_r+0x4e>
    263a:	42a2      	cmp	r2, r4
    263c:	d9f9      	bls.n	2632 <_free_r+0x42>
    263e:	6819      	ldr	r1, [r3, #0]
    2640:	1858      	adds	r0, r3, r1
    2642:	42a0      	cmp	r0, r4
    2644:	d10b      	bne.n	265e <_free_r+0x6e>
    2646:	6820      	ldr	r0, [r4, #0]
    2648:	1809      	adds	r1, r1, r0
    264a:	1858      	adds	r0, r3, r1
    264c:	6019      	str	r1, [r3, #0]
    264e:	4282      	cmp	r2, r0
    2650:	d1e0      	bne.n	2614 <_free_r+0x24>
    2652:	6810      	ldr	r0, [r2, #0]
    2654:	6852      	ldr	r2, [r2, #4]
    2656:	1841      	adds	r1, r0, r1
    2658:	6019      	str	r1, [r3, #0]
    265a:	605a      	str	r2, [r3, #4]
    265c:	e7da      	b.n	2614 <_free_r+0x24>
    265e:	42a0      	cmp	r0, r4
    2660:	d902      	bls.n	2668 <_free_r+0x78>
    2662:	230c      	movs	r3, #12
    2664:	602b      	str	r3, [r5, #0]
    2666:	e7d5      	b.n	2614 <_free_r+0x24>
    2668:	6821      	ldr	r1, [r4, #0]
    266a:	1860      	adds	r0, r4, r1
    266c:	4282      	cmp	r2, r0
    266e:	d103      	bne.n	2678 <_free_r+0x88>
    2670:	6810      	ldr	r0, [r2, #0]
    2672:	6852      	ldr	r2, [r2, #4]
    2674:	1841      	adds	r1, r0, r1
    2676:	6021      	str	r1, [r4, #0]
    2678:	6062      	str	r2, [r4, #4]
    267a:	605c      	str	r4, [r3, #4]
    267c:	e7ca      	b.n	2614 <_free_r+0x24>
    267e:	46c0      	nop			; (mov r8, r8)
    2680:	2000008c 	.word	0x2000008c

00002684 <_malloc_r>:
    2684:	2303      	movs	r3, #3
    2686:	b570      	push	{r4, r5, r6, lr}
    2688:	1ccd      	adds	r5, r1, #3
    268a:	439d      	bics	r5, r3
    268c:	3508      	adds	r5, #8
    268e:	0006      	movs	r6, r0
    2690:	2d0c      	cmp	r5, #12
    2692:	d21e      	bcs.n	26d2 <_malloc_r+0x4e>
    2694:	250c      	movs	r5, #12
    2696:	42a9      	cmp	r1, r5
    2698:	d81d      	bhi.n	26d6 <_malloc_r+0x52>
    269a:	0030      	movs	r0, r6
    269c:	f000 fbe3 	bl	2e66 <__malloc_lock>
    26a0:	4a25      	ldr	r2, [pc, #148]	; (2738 <_malloc_r+0xb4>)
    26a2:	6814      	ldr	r4, [r2, #0]
    26a4:	0021      	movs	r1, r4
    26a6:	2900      	cmp	r1, #0
    26a8:	d119      	bne.n	26de <_malloc_r+0x5a>
    26aa:	4c24      	ldr	r4, [pc, #144]	; (273c <_malloc_r+0xb8>)
    26ac:	6823      	ldr	r3, [r4, #0]
    26ae:	2b00      	cmp	r3, #0
    26b0:	d103      	bne.n	26ba <_malloc_r+0x36>
    26b2:	0030      	movs	r0, r6
    26b4:	f000 fb10 	bl	2cd8 <_sbrk_r>
    26b8:	6020      	str	r0, [r4, #0]
    26ba:	0029      	movs	r1, r5
    26bc:	0030      	movs	r0, r6
    26be:	f000 fb0b 	bl	2cd8 <_sbrk_r>
    26c2:	1c43      	adds	r3, r0, #1
    26c4:	d12c      	bne.n	2720 <_malloc_r+0x9c>
    26c6:	230c      	movs	r3, #12
    26c8:	0030      	movs	r0, r6
    26ca:	6033      	str	r3, [r6, #0]
    26cc:	f000 fbcc 	bl	2e68 <__malloc_unlock>
    26d0:	e003      	b.n	26da <_malloc_r+0x56>
    26d2:	2d00      	cmp	r5, #0
    26d4:	dadf      	bge.n	2696 <_malloc_r+0x12>
    26d6:	230c      	movs	r3, #12
    26d8:	6033      	str	r3, [r6, #0]
    26da:	2000      	movs	r0, #0
    26dc:	bd70      	pop	{r4, r5, r6, pc}
    26de:	680b      	ldr	r3, [r1, #0]
    26e0:	1b5b      	subs	r3, r3, r5
    26e2:	d41a      	bmi.n	271a <_malloc_r+0x96>
    26e4:	2b0b      	cmp	r3, #11
    26e6:	d903      	bls.n	26f0 <_malloc_r+0x6c>
    26e8:	600b      	str	r3, [r1, #0]
    26ea:	18cc      	adds	r4, r1, r3
    26ec:	6025      	str	r5, [r4, #0]
    26ee:	e003      	b.n	26f8 <_malloc_r+0x74>
    26f0:	428c      	cmp	r4, r1
    26f2:	d10e      	bne.n	2712 <_malloc_r+0x8e>
    26f4:	6863      	ldr	r3, [r4, #4]
    26f6:	6013      	str	r3, [r2, #0]
    26f8:	0030      	movs	r0, r6
    26fa:	f000 fbb5 	bl	2e68 <__malloc_unlock>
    26fe:	0020      	movs	r0, r4
    2700:	2207      	movs	r2, #7
    2702:	300b      	adds	r0, #11
    2704:	1d23      	adds	r3, r4, #4
    2706:	4390      	bics	r0, r2
    2708:	1ac3      	subs	r3, r0, r3
    270a:	d0e7      	beq.n	26dc <_malloc_r+0x58>
    270c:	425a      	negs	r2, r3
    270e:	50e2      	str	r2, [r4, r3]
    2710:	e7e4      	b.n	26dc <_malloc_r+0x58>
    2712:	684b      	ldr	r3, [r1, #4]
    2714:	6063      	str	r3, [r4, #4]
    2716:	000c      	movs	r4, r1
    2718:	e7ee      	b.n	26f8 <_malloc_r+0x74>
    271a:	000c      	movs	r4, r1
    271c:	6849      	ldr	r1, [r1, #4]
    271e:	e7c2      	b.n	26a6 <_malloc_r+0x22>
    2720:	2303      	movs	r3, #3
    2722:	1cc4      	adds	r4, r0, #3
    2724:	439c      	bics	r4, r3
    2726:	42a0      	cmp	r0, r4
    2728:	d0e0      	beq.n	26ec <_malloc_r+0x68>
    272a:	1a21      	subs	r1, r4, r0
    272c:	0030      	movs	r0, r6
    272e:	f000 fad3 	bl	2cd8 <_sbrk_r>
    2732:	1c43      	adds	r3, r0, #1
    2734:	d1da      	bne.n	26ec <_malloc_r+0x68>
    2736:	e7c6      	b.n	26c6 <_malloc_r+0x42>
    2738:	2000008c 	.word	0x2000008c
    273c:	20000090 	.word	0x20000090

00002740 <__sfputc_r>:
    2740:	6893      	ldr	r3, [r2, #8]
    2742:	b510      	push	{r4, lr}
    2744:	3b01      	subs	r3, #1
    2746:	6093      	str	r3, [r2, #8]
    2748:	2b00      	cmp	r3, #0
    274a:	da05      	bge.n	2758 <__sfputc_r+0x18>
    274c:	6994      	ldr	r4, [r2, #24]
    274e:	42a3      	cmp	r3, r4
    2750:	db08      	blt.n	2764 <__sfputc_r+0x24>
    2752:	b2cb      	uxtb	r3, r1
    2754:	2b0a      	cmp	r3, #10
    2756:	d005      	beq.n	2764 <__sfputc_r+0x24>
    2758:	6813      	ldr	r3, [r2, #0]
    275a:	1c58      	adds	r0, r3, #1
    275c:	6010      	str	r0, [r2, #0]
    275e:	7019      	strb	r1, [r3, #0]
    2760:	b2c8      	uxtb	r0, r1
    2762:	bd10      	pop	{r4, pc}
    2764:	f7ff fc74 	bl	2050 <__swbuf_r>
    2768:	e7fb      	b.n	2762 <__sfputc_r+0x22>

0000276a <__sfputs_r>:
    276a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    276c:	0006      	movs	r6, r0
    276e:	000f      	movs	r7, r1
    2770:	0014      	movs	r4, r2
    2772:	18d5      	adds	r5, r2, r3
    2774:	42ac      	cmp	r4, r5
    2776:	d101      	bne.n	277c <__sfputs_r+0x12>
    2778:	2000      	movs	r0, #0
    277a:	e007      	b.n	278c <__sfputs_r+0x22>
    277c:	7821      	ldrb	r1, [r4, #0]
    277e:	003a      	movs	r2, r7
    2780:	0030      	movs	r0, r6
    2782:	f7ff ffdd 	bl	2740 <__sfputc_r>
    2786:	3401      	adds	r4, #1
    2788:	1c43      	adds	r3, r0, #1
    278a:	d1f3      	bne.n	2774 <__sfputs_r+0xa>
    278c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

00002790 <_vfiprintf_r>:
    2790:	b5f0      	push	{r4, r5, r6, r7, lr}
    2792:	b09f      	sub	sp, #124	; 0x7c
    2794:	0006      	movs	r6, r0
    2796:	000f      	movs	r7, r1
    2798:	0014      	movs	r4, r2
    279a:	9305      	str	r3, [sp, #20]
    279c:	2800      	cmp	r0, #0
    279e:	d004      	beq.n	27aa <_vfiprintf_r+0x1a>
    27a0:	6983      	ldr	r3, [r0, #24]
    27a2:	2b00      	cmp	r3, #0
    27a4:	d101      	bne.n	27aa <_vfiprintf_r+0x1a>
    27a6:	f7ff fe17 	bl	23d8 <__sinit>
    27aa:	4b7f      	ldr	r3, [pc, #508]	; (29a8 <_vfiprintf_r+0x218>)
    27ac:	429f      	cmp	r7, r3
    27ae:	d15c      	bne.n	286a <_vfiprintf_r+0xda>
    27b0:	6877      	ldr	r7, [r6, #4]
    27b2:	89bb      	ldrh	r3, [r7, #12]
    27b4:	071b      	lsls	r3, r3, #28
    27b6:	d562      	bpl.n	287e <_vfiprintf_r+0xee>
    27b8:	693b      	ldr	r3, [r7, #16]
    27ba:	2b00      	cmp	r3, #0
    27bc:	d05f      	beq.n	287e <_vfiprintf_r+0xee>
    27be:	2300      	movs	r3, #0
    27c0:	ad06      	add	r5, sp, #24
    27c2:	616b      	str	r3, [r5, #20]
    27c4:	3320      	adds	r3, #32
    27c6:	766b      	strb	r3, [r5, #25]
    27c8:	3310      	adds	r3, #16
    27ca:	76ab      	strb	r3, [r5, #26]
    27cc:	9402      	str	r4, [sp, #8]
    27ce:	9c02      	ldr	r4, [sp, #8]
    27d0:	7823      	ldrb	r3, [r4, #0]
    27d2:	2b00      	cmp	r3, #0
    27d4:	d15d      	bne.n	2892 <_vfiprintf_r+0x102>
    27d6:	9b02      	ldr	r3, [sp, #8]
    27d8:	1ae3      	subs	r3, r4, r3
    27da:	9304      	str	r3, [sp, #16]
    27dc:	d00d      	beq.n	27fa <_vfiprintf_r+0x6a>
    27de:	9b04      	ldr	r3, [sp, #16]
    27e0:	9a02      	ldr	r2, [sp, #8]
    27e2:	0039      	movs	r1, r7
    27e4:	0030      	movs	r0, r6
    27e6:	f7ff ffc0 	bl	276a <__sfputs_r>
    27ea:	1c43      	adds	r3, r0, #1
    27ec:	d100      	bne.n	27f0 <_vfiprintf_r+0x60>
    27ee:	e0cc      	b.n	298a <_vfiprintf_r+0x1fa>
    27f0:	696a      	ldr	r2, [r5, #20]
    27f2:	9b04      	ldr	r3, [sp, #16]
    27f4:	4694      	mov	ip, r2
    27f6:	4463      	add	r3, ip
    27f8:	616b      	str	r3, [r5, #20]
    27fa:	7823      	ldrb	r3, [r4, #0]
    27fc:	2b00      	cmp	r3, #0
    27fe:	d100      	bne.n	2802 <_vfiprintf_r+0x72>
    2800:	e0c3      	b.n	298a <_vfiprintf_r+0x1fa>
    2802:	2201      	movs	r2, #1
    2804:	2300      	movs	r3, #0
    2806:	4252      	negs	r2, r2
    2808:	606a      	str	r2, [r5, #4]
    280a:	a902      	add	r1, sp, #8
    280c:	3254      	adds	r2, #84	; 0x54
    280e:	1852      	adds	r2, r2, r1
    2810:	3401      	adds	r4, #1
    2812:	602b      	str	r3, [r5, #0]
    2814:	60eb      	str	r3, [r5, #12]
    2816:	60ab      	str	r3, [r5, #8]
    2818:	7013      	strb	r3, [r2, #0]
    281a:	65ab      	str	r3, [r5, #88]	; 0x58
    281c:	7821      	ldrb	r1, [r4, #0]
    281e:	2205      	movs	r2, #5
    2820:	4862      	ldr	r0, [pc, #392]	; (29ac <_vfiprintf_r+0x21c>)
    2822:	f000 fb15 	bl	2e50 <memchr>
    2826:	1c63      	adds	r3, r4, #1
    2828:	469c      	mov	ip, r3
    282a:	2800      	cmp	r0, #0
    282c:	d135      	bne.n	289a <_vfiprintf_r+0x10a>
    282e:	6829      	ldr	r1, [r5, #0]
    2830:	06cb      	lsls	r3, r1, #27
    2832:	d504      	bpl.n	283e <_vfiprintf_r+0xae>
    2834:	2353      	movs	r3, #83	; 0x53
    2836:	aa02      	add	r2, sp, #8
    2838:	3020      	adds	r0, #32
    283a:	189b      	adds	r3, r3, r2
    283c:	7018      	strb	r0, [r3, #0]
    283e:	070b      	lsls	r3, r1, #28
    2840:	d504      	bpl.n	284c <_vfiprintf_r+0xbc>
    2842:	2353      	movs	r3, #83	; 0x53
    2844:	202b      	movs	r0, #43	; 0x2b
    2846:	aa02      	add	r2, sp, #8
    2848:	189b      	adds	r3, r3, r2
    284a:	7018      	strb	r0, [r3, #0]
    284c:	7823      	ldrb	r3, [r4, #0]
    284e:	2b2a      	cmp	r3, #42	; 0x2a
    2850:	d02c      	beq.n	28ac <_vfiprintf_r+0x11c>
    2852:	2000      	movs	r0, #0
    2854:	210a      	movs	r1, #10
    2856:	9b09      	ldr	r3, [sp, #36]	; 0x24
    2858:	7822      	ldrb	r2, [r4, #0]
    285a:	3a30      	subs	r2, #48	; 0x30
    285c:	2a09      	cmp	r2, #9
    285e:	d800      	bhi.n	2862 <_vfiprintf_r+0xd2>
    2860:	e06b      	b.n	293a <_vfiprintf_r+0x1aa>
    2862:	2800      	cmp	r0, #0
    2864:	d02a      	beq.n	28bc <_vfiprintf_r+0x12c>
    2866:	9309      	str	r3, [sp, #36]	; 0x24
    2868:	e028      	b.n	28bc <_vfiprintf_r+0x12c>
    286a:	4b51      	ldr	r3, [pc, #324]	; (29b0 <_vfiprintf_r+0x220>)
    286c:	429f      	cmp	r7, r3
    286e:	d101      	bne.n	2874 <_vfiprintf_r+0xe4>
    2870:	68b7      	ldr	r7, [r6, #8]
    2872:	e79e      	b.n	27b2 <_vfiprintf_r+0x22>
    2874:	4b4f      	ldr	r3, [pc, #316]	; (29b4 <_vfiprintf_r+0x224>)
    2876:	429f      	cmp	r7, r3
    2878:	d19b      	bne.n	27b2 <_vfiprintf_r+0x22>
    287a:	68f7      	ldr	r7, [r6, #12]
    287c:	e799      	b.n	27b2 <_vfiprintf_r+0x22>
    287e:	0039      	movs	r1, r7
    2880:	0030      	movs	r0, r6
    2882:	f7ff fc3b 	bl	20fc <__swsetup_r>
    2886:	2800      	cmp	r0, #0
    2888:	d099      	beq.n	27be <_vfiprintf_r+0x2e>
    288a:	2001      	movs	r0, #1
    288c:	4240      	negs	r0, r0
    288e:	b01f      	add	sp, #124	; 0x7c
    2890:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2892:	2b25      	cmp	r3, #37	; 0x25
    2894:	d09f      	beq.n	27d6 <_vfiprintf_r+0x46>
    2896:	3401      	adds	r4, #1
    2898:	e79a      	b.n	27d0 <_vfiprintf_r+0x40>
    289a:	4b44      	ldr	r3, [pc, #272]	; (29ac <_vfiprintf_r+0x21c>)
    289c:	6829      	ldr	r1, [r5, #0]
    289e:	1ac0      	subs	r0, r0, r3
    28a0:	2301      	movs	r3, #1
    28a2:	4083      	lsls	r3, r0
    28a4:	430b      	orrs	r3, r1
    28a6:	602b      	str	r3, [r5, #0]
    28a8:	4664      	mov	r4, ip
    28aa:	e7b7      	b.n	281c <_vfiprintf_r+0x8c>
    28ac:	9b05      	ldr	r3, [sp, #20]
    28ae:	1d18      	adds	r0, r3, #4
    28b0:	681b      	ldr	r3, [r3, #0]
    28b2:	9005      	str	r0, [sp, #20]
    28b4:	2b00      	cmp	r3, #0
    28b6:	db3a      	blt.n	292e <_vfiprintf_r+0x19e>
    28b8:	9309      	str	r3, [sp, #36]	; 0x24
    28ba:	4664      	mov	r4, ip
    28bc:	7823      	ldrb	r3, [r4, #0]
    28be:	2b2e      	cmp	r3, #46	; 0x2e
    28c0:	d10b      	bne.n	28da <_vfiprintf_r+0x14a>
    28c2:	7863      	ldrb	r3, [r4, #1]
    28c4:	1c62      	adds	r2, r4, #1
    28c6:	2b2a      	cmp	r3, #42	; 0x2a
    28c8:	d13f      	bne.n	294a <_vfiprintf_r+0x1ba>
    28ca:	9b05      	ldr	r3, [sp, #20]
    28cc:	3402      	adds	r4, #2
    28ce:	1d1a      	adds	r2, r3, #4
    28d0:	681b      	ldr	r3, [r3, #0]
    28d2:	9205      	str	r2, [sp, #20]
    28d4:	2b00      	cmp	r3, #0
    28d6:	db35      	blt.n	2944 <_vfiprintf_r+0x1b4>
    28d8:	9307      	str	r3, [sp, #28]
    28da:	7821      	ldrb	r1, [r4, #0]
    28dc:	2203      	movs	r2, #3
    28de:	4836      	ldr	r0, [pc, #216]	; (29b8 <_vfiprintf_r+0x228>)
    28e0:	f000 fab6 	bl	2e50 <memchr>
    28e4:	2800      	cmp	r0, #0
    28e6:	d007      	beq.n	28f8 <_vfiprintf_r+0x168>
    28e8:	4b33      	ldr	r3, [pc, #204]	; (29b8 <_vfiprintf_r+0x228>)
    28ea:	682a      	ldr	r2, [r5, #0]
    28ec:	1ac0      	subs	r0, r0, r3
    28ee:	2340      	movs	r3, #64	; 0x40
    28f0:	4083      	lsls	r3, r0
    28f2:	4313      	orrs	r3, r2
    28f4:	602b      	str	r3, [r5, #0]
    28f6:	3401      	adds	r4, #1
    28f8:	7821      	ldrb	r1, [r4, #0]
    28fa:	1c63      	adds	r3, r4, #1
    28fc:	2206      	movs	r2, #6
    28fe:	482f      	ldr	r0, [pc, #188]	; (29bc <_vfiprintf_r+0x22c>)
    2900:	9302      	str	r3, [sp, #8]
    2902:	7629      	strb	r1, [r5, #24]
    2904:	f000 faa4 	bl	2e50 <memchr>
    2908:	2800      	cmp	r0, #0
    290a:	d044      	beq.n	2996 <_vfiprintf_r+0x206>
    290c:	4b2c      	ldr	r3, [pc, #176]	; (29c0 <_vfiprintf_r+0x230>)
    290e:	2b00      	cmp	r3, #0
    2910:	d12f      	bne.n	2972 <_vfiprintf_r+0x1e2>
    2912:	6829      	ldr	r1, [r5, #0]
    2914:	9b05      	ldr	r3, [sp, #20]
    2916:	2207      	movs	r2, #7
    2918:	05c9      	lsls	r1, r1, #23
    291a:	d528      	bpl.n	296e <_vfiprintf_r+0x1de>
    291c:	189b      	adds	r3, r3, r2
    291e:	4393      	bics	r3, r2
    2920:	3308      	adds	r3, #8
    2922:	9305      	str	r3, [sp, #20]
    2924:	696b      	ldr	r3, [r5, #20]
    2926:	9a03      	ldr	r2, [sp, #12]
    2928:	189b      	adds	r3, r3, r2
    292a:	616b      	str	r3, [r5, #20]
    292c:	e74f      	b.n	27ce <_vfiprintf_r+0x3e>
    292e:	425b      	negs	r3, r3
    2930:	60eb      	str	r3, [r5, #12]
    2932:	2302      	movs	r3, #2
    2934:	430b      	orrs	r3, r1
    2936:	602b      	str	r3, [r5, #0]
    2938:	e7bf      	b.n	28ba <_vfiprintf_r+0x12a>
    293a:	434b      	muls	r3, r1
    293c:	3401      	adds	r4, #1
    293e:	189b      	adds	r3, r3, r2
    2940:	2001      	movs	r0, #1
    2942:	e789      	b.n	2858 <_vfiprintf_r+0xc8>
    2944:	2301      	movs	r3, #1
    2946:	425b      	negs	r3, r3
    2948:	e7c6      	b.n	28d8 <_vfiprintf_r+0x148>
    294a:	2300      	movs	r3, #0
    294c:	0014      	movs	r4, r2
    294e:	200a      	movs	r0, #10
    2950:	001a      	movs	r2, r3
    2952:	606b      	str	r3, [r5, #4]
    2954:	7821      	ldrb	r1, [r4, #0]
    2956:	3930      	subs	r1, #48	; 0x30
    2958:	2909      	cmp	r1, #9
    295a:	d903      	bls.n	2964 <_vfiprintf_r+0x1d4>
    295c:	2b00      	cmp	r3, #0
    295e:	d0bc      	beq.n	28da <_vfiprintf_r+0x14a>
    2960:	9207      	str	r2, [sp, #28]
    2962:	e7ba      	b.n	28da <_vfiprintf_r+0x14a>
    2964:	4342      	muls	r2, r0
    2966:	3401      	adds	r4, #1
    2968:	1852      	adds	r2, r2, r1
    296a:	2301      	movs	r3, #1
    296c:	e7f2      	b.n	2954 <_vfiprintf_r+0x1c4>
    296e:	3307      	adds	r3, #7
    2970:	e7d5      	b.n	291e <_vfiprintf_r+0x18e>
    2972:	ab05      	add	r3, sp, #20
    2974:	9300      	str	r3, [sp, #0]
    2976:	003a      	movs	r2, r7
    2978:	4b12      	ldr	r3, [pc, #72]	; (29c4 <_vfiprintf_r+0x234>)
    297a:	0029      	movs	r1, r5
    297c:	0030      	movs	r0, r6
    297e:	e000      	b.n	2982 <_vfiprintf_r+0x1f2>
    2980:	bf00      	nop
    2982:	9003      	str	r0, [sp, #12]
    2984:	9b03      	ldr	r3, [sp, #12]
    2986:	3301      	adds	r3, #1
    2988:	d1cc      	bne.n	2924 <_vfiprintf_r+0x194>
    298a:	89bb      	ldrh	r3, [r7, #12]
    298c:	065b      	lsls	r3, r3, #25
    298e:	d500      	bpl.n	2992 <_vfiprintf_r+0x202>
    2990:	e77b      	b.n	288a <_vfiprintf_r+0xfa>
    2992:	980b      	ldr	r0, [sp, #44]	; 0x2c
    2994:	e77b      	b.n	288e <_vfiprintf_r+0xfe>
    2996:	ab05      	add	r3, sp, #20
    2998:	9300      	str	r3, [sp, #0]
    299a:	003a      	movs	r2, r7
    299c:	4b09      	ldr	r3, [pc, #36]	; (29c4 <_vfiprintf_r+0x234>)
    299e:	0029      	movs	r1, r5
    29a0:	0030      	movs	r0, r6
    29a2:	f000 f87f 	bl	2aa4 <_printf_i>
    29a6:	e7ec      	b.n	2982 <_vfiprintf_r+0x1f2>
    29a8:	0000306c 	.word	0x0000306c
    29ac:	000030ac 	.word	0x000030ac
    29b0:	0000308c 	.word	0x0000308c
    29b4:	0000304c 	.word	0x0000304c
    29b8:	000030b2 	.word	0x000030b2
    29bc:	000030b6 	.word	0x000030b6
    29c0:	00000000 	.word	0x00000000
    29c4:	0000276b 	.word	0x0000276b

000029c8 <_printf_common>:
    29c8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    29ca:	0015      	movs	r5, r2
    29cc:	9301      	str	r3, [sp, #4]
    29ce:	688a      	ldr	r2, [r1, #8]
    29d0:	690b      	ldr	r3, [r1, #16]
    29d2:	9000      	str	r0, [sp, #0]
    29d4:	000c      	movs	r4, r1
    29d6:	4293      	cmp	r3, r2
    29d8:	da00      	bge.n	29dc <_printf_common+0x14>
    29da:	0013      	movs	r3, r2
    29dc:	0022      	movs	r2, r4
    29de:	602b      	str	r3, [r5, #0]
    29e0:	3243      	adds	r2, #67	; 0x43
    29e2:	7812      	ldrb	r2, [r2, #0]
    29e4:	2a00      	cmp	r2, #0
    29e6:	d001      	beq.n	29ec <_printf_common+0x24>
    29e8:	3301      	adds	r3, #1
    29ea:	602b      	str	r3, [r5, #0]
    29ec:	6823      	ldr	r3, [r4, #0]
    29ee:	069b      	lsls	r3, r3, #26
    29f0:	d502      	bpl.n	29f8 <_printf_common+0x30>
    29f2:	682b      	ldr	r3, [r5, #0]
    29f4:	3302      	adds	r3, #2
    29f6:	602b      	str	r3, [r5, #0]
    29f8:	2706      	movs	r7, #6
    29fa:	6823      	ldr	r3, [r4, #0]
    29fc:	401f      	ands	r7, r3
    29fe:	d027      	beq.n	2a50 <_printf_common+0x88>
    2a00:	0023      	movs	r3, r4
    2a02:	3343      	adds	r3, #67	; 0x43
    2a04:	781b      	ldrb	r3, [r3, #0]
    2a06:	1e5a      	subs	r2, r3, #1
    2a08:	4193      	sbcs	r3, r2
    2a0a:	6822      	ldr	r2, [r4, #0]
    2a0c:	0692      	lsls	r2, r2, #26
    2a0e:	d430      	bmi.n	2a72 <_printf_common+0xaa>
    2a10:	0022      	movs	r2, r4
    2a12:	9901      	ldr	r1, [sp, #4]
    2a14:	3243      	adds	r2, #67	; 0x43
    2a16:	9800      	ldr	r0, [sp, #0]
    2a18:	9e08      	ldr	r6, [sp, #32]
    2a1a:	47b0      	blx	r6
    2a1c:	1c43      	adds	r3, r0, #1
    2a1e:	d025      	beq.n	2a6c <_printf_common+0xa4>
    2a20:	2306      	movs	r3, #6
    2a22:	6820      	ldr	r0, [r4, #0]
    2a24:	682a      	ldr	r2, [r5, #0]
    2a26:	68e1      	ldr	r1, [r4, #12]
    2a28:	4003      	ands	r3, r0
    2a2a:	2500      	movs	r5, #0
    2a2c:	2b04      	cmp	r3, #4
    2a2e:	d103      	bne.n	2a38 <_printf_common+0x70>
    2a30:	1a8d      	subs	r5, r1, r2
    2a32:	43eb      	mvns	r3, r5
    2a34:	17db      	asrs	r3, r3, #31
    2a36:	401d      	ands	r5, r3
    2a38:	68a3      	ldr	r3, [r4, #8]
    2a3a:	6922      	ldr	r2, [r4, #16]
    2a3c:	4293      	cmp	r3, r2
    2a3e:	dd01      	ble.n	2a44 <_printf_common+0x7c>
    2a40:	1a9b      	subs	r3, r3, r2
    2a42:	18ed      	adds	r5, r5, r3
    2a44:	2700      	movs	r7, #0
    2a46:	42bd      	cmp	r5, r7
    2a48:	d120      	bne.n	2a8c <_printf_common+0xc4>
    2a4a:	2000      	movs	r0, #0
    2a4c:	e010      	b.n	2a70 <_printf_common+0xa8>
    2a4e:	3701      	adds	r7, #1
    2a50:	68e3      	ldr	r3, [r4, #12]
    2a52:	682a      	ldr	r2, [r5, #0]
    2a54:	1a9b      	subs	r3, r3, r2
    2a56:	429f      	cmp	r7, r3
    2a58:	dad2      	bge.n	2a00 <_printf_common+0x38>
    2a5a:	0022      	movs	r2, r4
    2a5c:	2301      	movs	r3, #1
    2a5e:	3219      	adds	r2, #25
    2a60:	9901      	ldr	r1, [sp, #4]
    2a62:	9800      	ldr	r0, [sp, #0]
    2a64:	9e08      	ldr	r6, [sp, #32]
    2a66:	47b0      	blx	r6
    2a68:	1c43      	adds	r3, r0, #1
    2a6a:	d1f0      	bne.n	2a4e <_printf_common+0x86>
    2a6c:	2001      	movs	r0, #1
    2a6e:	4240      	negs	r0, r0
    2a70:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    2a72:	2030      	movs	r0, #48	; 0x30
    2a74:	18e1      	adds	r1, r4, r3
    2a76:	3143      	adds	r1, #67	; 0x43
    2a78:	7008      	strb	r0, [r1, #0]
    2a7a:	0021      	movs	r1, r4
    2a7c:	1c5a      	adds	r2, r3, #1
    2a7e:	3145      	adds	r1, #69	; 0x45
    2a80:	7809      	ldrb	r1, [r1, #0]
    2a82:	18a2      	adds	r2, r4, r2
    2a84:	3243      	adds	r2, #67	; 0x43
    2a86:	3302      	adds	r3, #2
    2a88:	7011      	strb	r1, [r2, #0]
    2a8a:	e7c1      	b.n	2a10 <_printf_common+0x48>
    2a8c:	0022      	movs	r2, r4
    2a8e:	2301      	movs	r3, #1
    2a90:	321a      	adds	r2, #26
    2a92:	9901      	ldr	r1, [sp, #4]
    2a94:	9800      	ldr	r0, [sp, #0]
    2a96:	9e08      	ldr	r6, [sp, #32]
    2a98:	47b0      	blx	r6
    2a9a:	1c43      	adds	r3, r0, #1
    2a9c:	d0e6      	beq.n	2a6c <_printf_common+0xa4>
    2a9e:	3701      	adds	r7, #1
    2aa0:	e7d1      	b.n	2a46 <_printf_common+0x7e>
	...

00002aa4 <_printf_i>:
    2aa4:	b5f0      	push	{r4, r5, r6, r7, lr}
    2aa6:	b08b      	sub	sp, #44	; 0x2c
    2aa8:	9206      	str	r2, [sp, #24]
    2aaa:	000a      	movs	r2, r1
    2aac:	3243      	adds	r2, #67	; 0x43
    2aae:	9307      	str	r3, [sp, #28]
    2ab0:	9005      	str	r0, [sp, #20]
    2ab2:	9204      	str	r2, [sp, #16]
    2ab4:	7e0a      	ldrb	r2, [r1, #24]
    2ab6:	000c      	movs	r4, r1
    2ab8:	9b10      	ldr	r3, [sp, #64]	; 0x40
    2aba:	2a6e      	cmp	r2, #110	; 0x6e
    2abc:	d100      	bne.n	2ac0 <_printf_i+0x1c>
    2abe:	e08f      	b.n	2be0 <_printf_i+0x13c>
    2ac0:	d817      	bhi.n	2af2 <_printf_i+0x4e>
    2ac2:	2a63      	cmp	r2, #99	; 0x63
    2ac4:	d02c      	beq.n	2b20 <_printf_i+0x7c>
    2ac6:	d808      	bhi.n	2ada <_printf_i+0x36>
    2ac8:	2a00      	cmp	r2, #0
    2aca:	d100      	bne.n	2ace <_printf_i+0x2a>
    2acc:	e099      	b.n	2c02 <_printf_i+0x15e>
    2ace:	2a58      	cmp	r2, #88	; 0x58
    2ad0:	d054      	beq.n	2b7c <_printf_i+0xd8>
    2ad2:	0026      	movs	r6, r4
    2ad4:	3642      	adds	r6, #66	; 0x42
    2ad6:	7032      	strb	r2, [r6, #0]
    2ad8:	e029      	b.n	2b2e <_printf_i+0x8a>
    2ada:	2a64      	cmp	r2, #100	; 0x64
    2adc:	d001      	beq.n	2ae2 <_printf_i+0x3e>
    2ade:	2a69      	cmp	r2, #105	; 0x69
    2ae0:	d1f7      	bne.n	2ad2 <_printf_i+0x2e>
    2ae2:	6821      	ldr	r1, [r4, #0]
    2ae4:	681a      	ldr	r2, [r3, #0]
    2ae6:	0608      	lsls	r0, r1, #24
    2ae8:	d523      	bpl.n	2b32 <_printf_i+0x8e>
    2aea:	1d11      	adds	r1, r2, #4
    2aec:	6019      	str	r1, [r3, #0]
    2aee:	6815      	ldr	r5, [r2, #0]
    2af0:	e025      	b.n	2b3e <_printf_i+0x9a>
    2af2:	2a73      	cmp	r2, #115	; 0x73
    2af4:	d100      	bne.n	2af8 <_printf_i+0x54>
    2af6:	e088      	b.n	2c0a <_printf_i+0x166>
    2af8:	d808      	bhi.n	2b0c <_printf_i+0x68>
    2afa:	2a6f      	cmp	r2, #111	; 0x6f
    2afc:	d029      	beq.n	2b52 <_printf_i+0xae>
    2afe:	2a70      	cmp	r2, #112	; 0x70
    2b00:	d1e7      	bne.n	2ad2 <_printf_i+0x2e>
    2b02:	2220      	movs	r2, #32
    2b04:	6809      	ldr	r1, [r1, #0]
    2b06:	430a      	orrs	r2, r1
    2b08:	6022      	str	r2, [r4, #0]
    2b0a:	e003      	b.n	2b14 <_printf_i+0x70>
    2b0c:	2a75      	cmp	r2, #117	; 0x75
    2b0e:	d020      	beq.n	2b52 <_printf_i+0xae>
    2b10:	2a78      	cmp	r2, #120	; 0x78
    2b12:	d1de      	bne.n	2ad2 <_printf_i+0x2e>
    2b14:	0022      	movs	r2, r4
    2b16:	2178      	movs	r1, #120	; 0x78
    2b18:	3245      	adds	r2, #69	; 0x45
    2b1a:	7011      	strb	r1, [r2, #0]
    2b1c:	4a6c      	ldr	r2, [pc, #432]	; (2cd0 <_printf_i+0x22c>)
    2b1e:	e030      	b.n	2b82 <_printf_i+0xde>
    2b20:	000e      	movs	r6, r1
    2b22:	681a      	ldr	r2, [r3, #0]
    2b24:	3642      	adds	r6, #66	; 0x42
    2b26:	1d11      	adds	r1, r2, #4
    2b28:	6019      	str	r1, [r3, #0]
    2b2a:	6813      	ldr	r3, [r2, #0]
    2b2c:	7033      	strb	r3, [r6, #0]
    2b2e:	2301      	movs	r3, #1
    2b30:	e079      	b.n	2c26 <_printf_i+0x182>
    2b32:	0649      	lsls	r1, r1, #25
    2b34:	d5d9      	bpl.n	2aea <_printf_i+0x46>
    2b36:	1d11      	adds	r1, r2, #4
    2b38:	6019      	str	r1, [r3, #0]
    2b3a:	2300      	movs	r3, #0
    2b3c:	5ed5      	ldrsh	r5, [r2, r3]
    2b3e:	2d00      	cmp	r5, #0
    2b40:	da03      	bge.n	2b4a <_printf_i+0xa6>
    2b42:	232d      	movs	r3, #45	; 0x2d
    2b44:	9a04      	ldr	r2, [sp, #16]
    2b46:	426d      	negs	r5, r5
    2b48:	7013      	strb	r3, [r2, #0]
    2b4a:	4b62      	ldr	r3, [pc, #392]	; (2cd4 <_printf_i+0x230>)
    2b4c:	270a      	movs	r7, #10
    2b4e:	9303      	str	r3, [sp, #12]
    2b50:	e02f      	b.n	2bb2 <_printf_i+0x10e>
    2b52:	6820      	ldr	r0, [r4, #0]
    2b54:	6819      	ldr	r1, [r3, #0]
    2b56:	0605      	lsls	r5, r0, #24
    2b58:	d503      	bpl.n	2b62 <_printf_i+0xbe>
    2b5a:	1d08      	adds	r0, r1, #4
    2b5c:	6018      	str	r0, [r3, #0]
    2b5e:	680d      	ldr	r5, [r1, #0]
    2b60:	e005      	b.n	2b6e <_printf_i+0xca>
    2b62:	0640      	lsls	r0, r0, #25
    2b64:	d5f9      	bpl.n	2b5a <_printf_i+0xb6>
    2b66:	680d      	ldr	r5, [r1, #0]
    2b68:	1d08      	adds	r0, r1, #4
    2b6a:	6018      	str	r0, [r3, #0]
    2b6c:	b2ad      	uxth	r5, r5
    2b6e:	4b59      	ldr	r3, [pc, #356]	; (2cd4 <_printf_i+0x230>)
    2b70:	2708      	movs	r7, #8
    2b72:	9303      	str	r3, [sp, #12]
    2b74:	2a6f      	cmp	r2, #111	; 0x6f
    2b76:	d018      	beq.n	2baa <_printf_i+0x106>
    2b78:	270a      	movs	r7, #10
    2b7a:	e016      	b.n	2baa <_printf_i+0x106>
    2b7c:	3145      	adds	r1, #69	; 0x45
    2b7e:	700a      	strb	r2, [r1, #0]
    2b80:	4a54      	ldr	r2, [pc, #336]	; (2cd4 <_printf_i+0x230>)
    2b82:	9203      	str	r2, [sp, #12]
    2b84:	681a      	ldr	r2, [r3, #0]
    2b86:	6821      	ldr	r1, [r4, #0]
    2b88:	1d10      	adds	r0, r2, #4
    2b8a:	6018      	str	r0, [r3, #0]
    2b8c:	6815      	ldr	r5, [r2, #0]
    2b8e:	0608      	lsls	r0, r1, #24
    2b90:	d522      	bpl.n	2bd8 <_printf_i+0x134>
    2b92:	07cb      	lsls	r3, r1, #31
    2b94:	d502      	bpl.n	2b9c <_printf_i+0xf8>
    2b96:	2320      	movs	r3, #32
    2b98:	4319      	orrs	r1, r3
    2b9a:	6021      	str	r1, [r4, #0]
    2b9c:	2710      	movs	r7, #16
    2b9e:	2d00      	cmp	r5, #0
    2ba0:	d103      	bne.n	2baa <_printf_i+0x106>
    2ba2:	2320      	movs	r3, #32
    2ba4:	6822      	ldr	r2, [r4, #0]
    2ba6:	439a      	bics	r2, r3
    2ba8:	6022      	str	r2, [r4, #0]
    2baa:	0023      	movs	r3, r4
    2bac:	2200      	movs	r2, #0
    2bae:	3343      	adds	r3, #67	; 0x43
    2bb0:	701a      	strb	r2, [r3, #0]
    2bb2:	6863      	ldr	r3, [r4, #4]
    2bb4:	60a3      	str	r3, [r4, #8]
    2bb6:	2b00      	cmp	r3, #0
    2bb8:	db5c      	blt.n	2c74 <_printf_i+0x1d0>
    2bba:	2204      	movs	r2, #4
    2bbc:	6821      	ldr	r1, [r4, #0]
    2bbe:	4391      	bics	r1, r2
    2bc0:	6021      	str	r1, [r4, #0]
    2bc2:	2d00      	cmp	r5, #0
    2bc4:	d158      	bne.n	2c78 <_printf_i+0x1d4>
    2bc6:	9e04      	ldr	r6, [sp, #16]
    2bc8:	2b00      	cmp	r3, #0
    2bca:	d064      	beq.n	2c96 <_printf_i+0x1f2>
    2bcc:	0026      	movs	r6, r4
    2bce:	9b03      	ldr	r3, [sp, #12]
    2bd0:	3642      	adds	r6, #66	; 0x42
    2bd2:	781b      	ldrb	r3, [r3, #0]
    2bd4:	7033      	strb	r3, [r6, #0]
    2bd6:	e05e      	b.n	2c96 <_printf_i+0x1f2>
    2bd8:	0648      	lsls	r0, r1, #25
    2bda:	d5da      	bpl.n	2b92 <_printf_i+0xee>
    2bdc:	b2ad      	uxth	r5, r5
    2bde:	e7d8      	b.n	2b92 <_printf_i+0xee>
    2be0:	6809      	ldr	r1, [r1, #0]
    2be2:	681a      	ldr	r2, [r3, #0]
    2be4:	0608      	lsls	r0, r1, #24
    2be6:	d505      	bpl.n	2bf4 <_printf_i+0x150>
    2be8:	1d11      	adds	r1, r2, #4
    2bea:	6019      	str	r1, [r3, #0]
    2bec:	6813      	ldr	r3, [r2, #0]
    2bee:	6962      	ldr	r2, [r4, #20]
    2bf0:	601a      	str	r2, [r3, #0]
    2bf2:	e006      	b.n	2c02 <_printf_i+0x15e>
    2bf4:	0649      	lsls	r1, r1, #25
    2bf6:	d5f7      	bpl.n	2be8 <_printf_i+0x144>
    2bf8:	1d11      	adds	r1, r2, #4
    2bfa:	6019      	str	r1, [r3, #0]
    2bfc:	6813      	ldr	r3, [r2, #0]
    2bfe:	8aa2      	ldrh	r2, [r4, #20]
    2c00:	801a      	strh	r2, [r3, #0]
    2c02:	2300      	movs	r3, #0
    2c04:	9e04      	ldr	r6, [sp, #16]
    2c06:	6123      	str	r3, [r4, #16]
    2c08:	e054      	b.n	2cb4 <_printf_i+0x210>
    2c0a:	681a      	ldr	r2, [r3, #0]
    2c0c:	1d11      	adds	r1, r2, #4
    2c0e:	6019      	str	r1, [r3, #0]
    2c10:	6816      	ldr	r6, [r2, #0]
    2c12:	2100      	movs	r1, #0
    2c14:	6862      	ldr	r2, [r4, #4]
    2c16:	0030      	movs	r0, r6
    2c18:	f000 f91a 	bl	2e50 <memchr>
    2c1c:	2800      	cmp	r0, #0
    2c1e:	d001      	beq.n	2c24 <_printf_i+0x180>
    2c20:	1b80      	subs	r0, r0, r6
    2c22:	6060      	str	r0, [r4, #4]
    2c24:	6863      	ldr	r3, [r4, #4]
    2c26:	6123      	str	r3, [r4, #16]
    2c28:	2300      	movs	r3, #0
    2c2a:	9a04      	ldr	r2, [sp, #16]
    2c2c:	7013      	strb	r3, [r2, #0]
    2c2e:	e041      	b.n	2cb4 <_printf_i+0x210>
    2c30:	6923      	ldr	r3, [r4, #16]
    2c32:	0032      	movs	r2, r6
    2c34:	9906      	ldr	r1, [sp, #24]
    2c36:	9805      	ldr	r0, [sp, #20]
    2c38:	9d07      	ldr	r5, [sp, #28]
    2c3a:	47a8      	blx	r5
    2c3c:	1c43      	adds	r3, r0, #1
    2c3e:	d043      	beq.n	2cc8 <_printf_i+0x224>
    2c40:	6823      	ldr	r3, [r4, #0]
    2c42:	2500      	movs	r5, #0
    2c44:	079b      	lsls	r3, r3, #30
    2c46:	d40f      	bmi.n	2c68 <_printf_i+0x1c4>
    2c48:	9b09      	ldr	r3, [sp, #36]	; 0x24
    2c4a:	68e0      	ldr	r0, [r4, #12]
    2c4c:	4298      	cmp	r0, r3
    2c4e:	da3d      	bge.n	2ccc <_printf_i+0x228>
    2c50:	0018      	movs	r0, r3
    2c52:	e03b      	b.n	2ccc <_printf_i+0x228>
    2c54:	0022      	movs	r2, r4
    2c56:	2301      	movs	r3, #1
    2c58:	3219      	adds	r2, #25
    2c5a:	9906      	ldr	r1, [sp, #24]
    2c5c:	9805      	ldr	r0, [sp, #20]
    2c5e:	9e07      	ldr	r6, [sp, #28]
    2c60:	47b0      	blx	r6
    2c62:	1c43      	adds	r3, r0, #1
    2c64:	d030      	beq.n	2cc8 <_printf_i+0x224>
    2c66:	3501      	adds	r5, #1
    2c68:	68e3      	ldr	r3, [r4, #12]
    2c6a:	9a09      	ldr	r2, [sp, #36]	; 0x24
    2c6c:	1a9b      	subs	r3, r3, r2
    2c6e:	429d      	cmp	r5, r3
    2c70:	dbf0      	blt.n	2c54 <_printf_i+0x1b0>
    2c72:	e7e9      	b.n	2c48 <_printf_i+0x1a4>
    2c74:	2d00      	cmp	r5, #0
    2c76:	d0a9      	beq.n	2bcc <_printf_i+0x128>
    2c78:	9e04      	ldr	r6, [sp, #16]
    2c7a:	0028      	movs	r0, r5
    2c7c:	0039      	movs	r1, r7
    2c7e:	f7fe f90b 	bl	e98 <__aeabi_uidivmod>
    2c82:	9b03      	ldr	r3, [sp, #12]
    2c84:	3e01      	subs	r6, #1
    2c86:	5c5b      	ldrb	r3, [r3, r1]
    2c88:	0028      	movs	r0, r5
    2c8a:	7033      	strb	r3, [r6, #0]
    2c8c:	0039      	movs	r1, r7
    2c8e:	f7fe f87d 	bl	d8c <__udivsi3>
    2c92:	1e05      	subs	r5, r0, #0
    2c94:	d1f1      	bne.n	2c7a <_printf_i+0x1d6>
    2c96:	2f08      	cmp	r7, #8
    2c98:	d109      	bne.n	2cae <_printf_i+0x20a>
    2c9a:	6823      	ldr	r3, [r4, #0]
    2c9c:	07db      	lsls	r3, r3, #31
    2c9e:	d506      	bpl.n	2cae <_printf_i+0x20a>
    2ca0:	6863      	ldr	r3, [r4, #4]
    2ca2:	6922      	ldr	r2, [r4, #16]
    2ca4:	4293      	cmp	r3, r2
    2ca6:	dc02      	bgt.n	2cae <_printf_i+0x20a>
    2ca8:	2330      	movs	r3, #48	; 0x30
    2caa:	3e01      	subs	r6, #1
    2cac:	7033      	strb	r3, [r6, #0]
    2cae:	9b04      	ldr	r3, [sp, #16]
    2cb0:	1b9b      	subs	r3, r3, r6
    2cb2:	6123      	str	r3, [r4, #16]
    2cb4:	9b07      	ldr	r3, [sp, #28]
    2cb6:	aa09      	add	r2, sp, #36	; 0x24
    2cb8:	9300      	str	r3, [sp, #0]
    2cba:	0021      	movs	r1, r4
    2cbc:	9b06      	ldr	r3, [sp, #24]
    2cbe:	9805      	ldr	r0, [sp, #20]
    2cc0:	f7ff fe82 	bl	29c8 <_printf_common>
    2cc4:	1c43      	adds	r3, r0, #1
    2cc6:	d1b3      	bne.n	2c30 <_printf_i+0x18c>
    2cc8:	2001      	movs	r0, #1
    2cca:	4240      	negs	r0, r0
    2ccc:	b00b      	add	sp, #44	; 0x2c
    2cce:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2cd0:	000030ce 	.word	0x000030ce
    2cd4:	000030bd 	.word	0x000030bd

00002cd8 <_sbrk_r>:
    2cd8:	2300      	movs	r3, #0
    2cda:	b570      	push	{r4, r5, r6, lr}
    2cdc:	4c06      	ldr	r4, [pc, #24]	; (2cf8 <_sbrk_r+0x20>)
    2cde:	0005      	movs	r5, r0
    2ce0:	0008      	movs	r0, r1
    2ce2:	6023      	str	r3, [r4, #0]
    2ce4:	f7fd fcf4 	bl	6d0 <_sbrk>
    2ce8:	1c43      	adds	r3, r0, #1
    2cea:	d103      	bne.n	2cf4 <_sbrk_r+0x1c>
    2cec:	6823      	ldr	r3, [r4, #0]
    2cee:	2b00      	cmp	r3, #0
    2cf0:	d000      	beq.n	2cf4 <_sbrk_r+0x1c>
    2cf2:	602b      	str	r3, [r5, #0]
    2cf4:	bd70      	pop	{r4, r5, r6, pc}
    2cf6:	46c0      	nop			; (mov r8, r8)
    2cf8:	200000a4 	.word	0x200000a4

00002cfc <__sread>:
    2cfc:	b570      	push	{r4, r5, r6, lr}
    2cfe:	000c      	movs	r4, r1
    2d00:	250e      	movs	r5, #14
    2d02:	5f49      	ldrsh	r1, [r1, r5]
    2d04:	f000 f8b2 	bl	2e6c <_read_r>
    2d08:	2800      	cmp	r0, #0
    2d0a:	db03      	blt.n	2d14 <__sread+0x18>
    2d0c:	6d63      	ldr	r3, [r4, #84]	; 0x54
    2d0e:	181b      	adds	r3, r3, r0
    2d10:	6563      	str	r3, [r4, #84]	; 0x54
    2d12:	bd70      	pop	{r4, r5, r6, pc}
    2d14:	89a3      	ldrh	r3, [r4, #12]
    2d16:	4a02      	ldr	r2, [pc, #8]	; (2d20 <__sread+0x24>)
    2d18:	4013      	ands	r3, r2
    2d1a:	81a3      	strh	r3, [r4, #12]
    2d1c:	e7f9      	b.n	2d12 <__sread+0x16>
    2d1e:	46c0      	nop			; (mov r8, r8)
    2d20:	ffffefff 	.word	0xffffefff

00002d24 <__swrite>:
    2d24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2d26:	001f      	movs	r7, r3
    2d28:	898b      	ldrh	r3, [r1, #12]
    2d2a:	0005      	movs	r5, r0
    2d2c:	000c      	movs	r4, r1
    2d2e:	0016      	movs	r6, r2
    2d30:	05db      	lsls	r3, r3, #23
    2d32:	d505      	bpl.n	2d40 <__swrite+0x1c>
    2d34:	230e      	movs	r3, #14
    2d36:	5ec9      	ldrsh	r1, [r1, r3]
    2d38:	2200      	movs	r2, #0
    2d3a:	2302      	movs	r3, #2
    2d3c:	f000 f874 	bl	2e28 <_lseek_r>
    2d40:	89a3      	ldrh	r3, [r4, #12]
    2d42:	4a05      	ldr	r2, [pc, #20]	; (2d58 <__swrite+0x34>)
    2d44:	0028      	movs	r0, r5
    2d46:	4013      	ands	r3, r2
    2d48:	81a3      	strh	r3, [r4, #12]
    2d4a:	0032      	movs	r2, r6
    2d4c:	230e      	movs	r3, #14
    2d4e:	5ee1      	ldrsh	r1, [r4, r3]
    2d50:	003b      	movs	r3, r7
    2d52:	f000 f81f 	bl	2d94 <_write_r>
    2d56:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2d58:	ffffefff 	.word	0xffffefff

00002d5c <__sseek>:
    2d5c:	b570      	push	{r4, r5, r6, lr}
    2d5e:	000c      	movs	r4, r1
    2d60:	250e      	movs	r5, #14
    2d62:	5f49      	ldrsh	r1, [r1, r5]
    2d64:	f000 f860 	bl	2e28 <_lseek_r>
    2d68:	89a3      	ldrh	r3, [r4, #12]
    2d6a:	1c42      	adds	r2, r0, #1
    2d6c:	d103      	bne.n	2d76 <__sseek+0x1a>
    2d6e:	4a05      	ldr	r2, [pc, #20]	; (2d84 <__sseek+0x28>)
    2d70:	4013      	ands	r3, r2
    2d72:	81a3      	strh	r3, [r4, #12]
    2d74:	bd70      	pop	{r4, r5, r6, pc}
    2d76:	2280      	movs	r2, #128	; 0x80
    2d78:	0152      	lsls	r2, r2, #5
    2d7a:	4313      	orrs	r3, r2
    2d7c:	81a3      	strh	r3, [r4, #12]
    2d7e:	6560      	str	r0, [r4, #84]	; 0x54
    2d80:	e7f8      	b.n	2d74 <__sseek+0x18>
    2d82:	46c0      	nop			; (mov r8, r8)
    2d84:	ffffefff 	.word	0xffffefff

00002d88 <__sclose>:
    2d88:	b510      	push	{r4, lr}
    2d8a:	230e      	movs	r3, #14
    2d8c:	5ec9      	ldrsh	r1, [r1, r3]
    2d8e:	f000 f815 	bl	2dbc <_close_r>
    2d92:	bd10      	pop	{r4, pc}

00002d94 <_write_r>:
    2d94:	b570      	push	{r4, r5, r6, lr}
    2d96:	0005      	movs	r5, r0
    2d98:	0008      	movs	r0, r1
    2d9a:	0011      	movs	r1, r2
    2d9c:	2200      	movs	r2, #0
    2d9e:	4c06      	ldr	r4, [pc, #24]	; (2db8 <_write_r+0x24>)
    2da0:	6022      	str	r2, [r4, #0]
    2da2:	001a      	movs	r2, r3
    2da4:	f7fd ff94 	bl	cd0 <_write>
    2da8:	1c43      	adds	r3, r0, #1
    2daa:	d103      	bne.n	2db4 <_write_r+0x20>
    2dac:	6823      	ldr	r3, [r4, #0]
    2dae:	2b00      	cmp	r3, #0
    2db0:	d000      	beq.n	2db4 <_write_r+0x20>
    2db2:	602b      	str	r3, [r5, #0]
    2db4:	bd70      	pop	{r4, r5, r6, pc}
    2db6:	46c0      	nop			; (mov r8, r8)
    2db8:	200000a4 	.word	0x200000a4

00002dbc <_close_r>:
    2dbc:	2300      	movs	r3, #0
    2dbe:	b570      	push	{r4, r5, r6, lr}
    2dc0:	4c06      	ldr	r4, [pc, #24]	; (2ddc <_close_r+0x20>)
    2dc2:	0005      	movs	r5, r0
    2dc4:	0008      	movs	r0, r1
    2dc6:	6023      	str	r3, [r4, #0]
    2dc8:	f7fd fc94 	bl	6f4 <_close>
    2dcc:	1c43      	adds	r3, r0, #1
    2dce:	d103      	bne.n	2dd8 <_close_r+0x1c>
    2dd0:	6823      	ldr	r3, [r4, #0]
    2dd2:	2b00      	cmp	r3, #0
    2dd4:	d000      	beq.n	2dd8 <_close_r+0x1c>
    2dd6:	602b      	str	r3, [r5, #0]
    2dd8:	bd70      	pop	{r4, r5, r6, pc}
    2dda:	46c0      	nop			; (mov r8, r8)
    2ddc:	200000a4 	.word	0x200000a4

00002de0 <_fstat_r>:
    2de0:	2300      	movs	r3, #0
    2de2:	b570      	push	{r4, r5, r6, lr}
    2de4:	4c06      	ldr	r4, [pc, #24]	; (2e00 <_fstat_r+0x20>)
    2de6:	0005      	movs	r5, r0
    2de8:	0008      	movs	r0, r1
    2dea:	0011      	movs	r1, r2
    2dec:	6023      	str	r3, [r4, #0]
    2dee:	f7fd fc84 	bl	6fa <_fstat>
    2df2:	1c43      	adds	r3, r0, #1
    2df4:	d103      	bne.n	2dfe <_fstat_r+0x1e>
    2df6:	6823      	ldr	r3, [r4, #0]
    2df8:	2b00      	cmp	r3, #0
    2dfa:	d000      	beq.n	2dfe <_fstat_r+0x1e>
    2dfc:	602b      	str	r3, [r5, #0]
    2dfe:	bd70      	pop	{r4, r5, r6, pc}
    2e00:	200000a4 	.word	0x200000a4

00002e04 <_isatty_r>:
    2e04:	2300      	movs	r3, #0
    2e06:	b570      	push	{r4, r5, r6, lr}
    2e08:	4c06      	ldr	r4, [pc, #24]	; (2e24 <_isatty_r+0x20>)
    2e0a:	0005      	movs	r5, r0
    2e0c:	0008      	movs	r0, r1
    2e0e:	6023      	str	r3, [r4, #0]
    2e10:	f7fd fc78 	bl	704 <_isatty>
    2e14:	1c43      	adds	r3, r0, #1
    2e16:	d103      	bne.n	2e20 <_isatty_r+0x1c>
    2e18:	6823      	ldr	r3, [r4, #0]
    2e1a:	2b00      	cmp	r3, #0
    2e1c:	d000      	beq.n	2e20 <_isatty_r+0x1c>
    2e1e:	602b      	str	r3, [r5, #0]
    2e20:	bd70      	pop	{r4, r5, r6, pc}
    2e22:	46c0      	nop			; (mov r8, r8)
    2e24:	200000a4 	.word	0x200000a4

00002e28 <_lseek_r>:
    2e28:	b570      	push	{r4, r5, r6, lr}
    2e2a:	0005      	movs	r5, r0
    2e2c:	0008      	movs	r0, r1
    2e2e:	0011      	movs	r1, r2
    2e30:	2200      	movs	r2, #0
    2e32:	4c06      	ldr	r4, [pc, #24]	; (2e4c <_lseek_r+0x24>)
    2e34:	6022      	str	r2, [r4, #0]
    2e36:	001a      	movs	r2, r3
    2e38:	f7fd fc66 	bl	708 <_lseek>
    2e3c:	1c43      	adds	r3, r0, #1
    2e3e:	d103      	bne.n	2e48 <_lseek_r+0x20>
    2e40:	6823      	ldr	r3, [r4, #0]
    2e42:	2b00      	cmp	r3, #0
    2e44:	d000      	beq.n	2e48 <_lseek_r+0x20>
    2e46:	602b      	str	r3, [r5, #0]
    2e48:	bd70      	pop	{r4, r5, r6, pc}
    2e4a:	46c0      	nop			; (mov r8, r8)
    2e4c:	200000a4 	.word	0x200000a4

00002e50 <memchr>:
    2e50:	b2c9      	uxtb	r1, r1
    2e52:	1882      	adds	r2, r0, r2
    2e54:	4290      	cmp	r0, r2
    2e56:	d101      	bne.n	2e5c <memchr+0xc>
    2e58:	2000      	movs	r0, #0
    2e5a:	4770      	bx	lr
    2e5c:	7803      	ldrb	r3, [r0, #0]
    2e5e:	428b      	cmp	r3, r1
    2e60:	d0fb      	beq.n	2e5a <memchr+0xa>
    2e62:	3001      	adds	r0, #1
    2e64:	e7f6      	b.n	2e54 <memchr+0x4>

00002e66 <__malloc_lock>:
    2e66:	4770      	bx	lr

00002e68 <__malloc_unlock>:
    2e68:	4770      	bx	lr
	...

00002e6c <_read_r>:
    2e6c:	b570      	push	{r4, r5, r6, lr}
    2e6e:	0005      	movs	r5, r0
    2e70:	0008      	movs	r0, r1
    2e72:	0011      	movs	r1, r2
    2e74:	2200      	movs	r2, #0
    2e76:	4c06      	ldr	r4, [pc, #24]	; (2e90 <_read_r+0x24>)
    2e78:	6022      	str	r2, [r4, #0]
    2e7a:	001a      	movs	r2, r3
    2e7c:	f7fd ff14 	bl	ca8 <_read>
    2e80:	1c43      	adds	r3, r0, #1
    2e82:	d103      	bne.n	2e8c <_read_r+0x20>
    2e84:	6823      	ldr	r3, [r4, #0]
    2e86:	2b00      	cmp	r3, #0
    2e88:	d000      	beq.n	2e8c <_read_r+0x20>
    2e8a:	602b      	str	r3, [r5, #0]
    2e8c:	bd70      	pop	{r4, r5, r6, pc}
    2e8e:	46c0      	nop			; (mov r8, r8)
    2e90:	200000a4 	.word	0x200000a4
    2e94:	682f2e2e 	.word	0x682f2e2e
    2e98:	732f6c61 	.word	0x732f6c61
    2e9c:	682f6372 	.word	0x682f6372
    2ea0:	615f6c61 	.word	0x615f6c61
    2ea4:	735f6364 	.word	0x735f6364
    2ea8:	2e636e79 	.word	0x2e636e79
    2eac:	00000063 	.word	0x00000063
    2eb0:	682f2e2e 	.word	0x682f2e2e
    2eb4:	732f6c61 	.word	0x732f6c61
    2eb8:	682f6372 	.word	0x682f6372
    2ebc:	695f6c61 	.word	0x695f6c61
    2ec0:	00632e6f 	.word	0x00632e6f
    2ec4:	682f2e2e 	.word	0x682f2e2e
    2ec8:	732f6c61 	.word	0x732f6c61
    2ecc:	682f6372 	.word	0x682f6372
    2ed0:	755f6c61 	.word	0x755f6c61
    2ed4:	74726173 	.word	0x74726173
    2ed8:	6e79735f 	.word	0x6e79735f
    2edc:	00632e63 	.word	0x00632e63

00002ee0 <_adcs>:
    2ee0:	00020200 01000000 00000000 00011806     ................
	...
    2efc:	682f2e2e 612f6c70 682f6364 615f6c70     ../hpl/adc/hpl_a
    2f0c:	632e6364 00000000                       dc.c....

00002f14 <_usarts>:
    2f14:	00000003 40100004 00030000 0000e282     .......@........
    2f24:	00000000                                ....

00002f28 <_i2cms>:
	...

00002f40 <_i2css>:
	...

00002f50 <sercomspi_regs>:
	...
    2f64:	682f2e2e 732f6c70 6f637265 70682f6d     ../hpl/sercom/hp
    2f74:	65735f6c 6d6f6372 0000632e 36304150     l_sercom.c..PA06
    2f84:	746c6f76 64253d73 00000a0d 37304150     volts=%d....PA07
    2f94:	736c6f76 64253d74 00000a0d 36304150     volst=%d....PA06
    2fa4:	3330253d 000a0d64 37304150 3330253d     =%03d...PA07=%03
    2fb4:	000a0d64 6d756b4f 61422061 69726173     d...Okuma Basari
    2fc4:	007a6973 00001270 00001252 0000120c     siz.p...R.......
    2fd4:	0000112a 0000120c 00001244 0000120c     *.......D.......
    2fe4:	0000112a 00001252 00001252 00001244     *...R...R...D...
    2ff4:	0000112a 00001122 00001122 00001122     *..."..."..."...
    3004:	00001488 000018d0 00001790 00001790     ................
    3014:	0000178c 000018a8 000018a8 0000189a     ................
    3024:	0000178c 000018a8 0000189a 000018a8     ................
    3034:	0000178c 000018b0 000018b0 000018b0     ................
    3044:	00001ab4                                ....

00003048 <_global_impure_ptr>:
    3048:	20000004                                ... 

0000304c <__sf_fake_stderr>:
	...

0000306c <__sf_fake_stdin>:
	...

0000308c <__sf_fake_stdout>:
	...
    30ac:	2b302d23 6c680020 6665004c 47464567     #-0+ .hlL.efgEFG
    30bc:	32313000 36353433 41393837 45444342     .0123456789ABCDE
    30cc:	31300046 35343332 39383736 64636261     F.0123456789abcd
    30dc:	00006665                                ef..

000030e0 <_init>:
    30e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    30e2:	46c0      	nop			; (mov r8, r8)
    30e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
    30e6:	bc08      	pop	{r3}
    30e8:	469e      	mov	lr, r3
    30ea:	4770      	bx	lr

000030ec <__init_array_start>:
    30ec:	000000dd 	.word	0x000000dd

000030f0 <_fini>:
    30f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    30f2:	46c0      	nop			; (mov r8, r8)
    30f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
    30f6:	bc08      	pop	{r3}
    30f8:	469e      	mov	lr, r3
    30fa:	4770      	bx	lr

000030fc <__fini_array_start>:
    30fc:	000000b5 	.word	0x000000b5
